{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://data-live/lib/interfaces/channel/channel.interface.ts","ng://data-live/lib/services/pubnub/pubnub.service.ts","ng://data-live/lib/services/channel/channel.service.ts","ng://data-live/lib/services/intercom/web-intercom.service.ts","ng://data-live/lib/services/intercom/intercom.service.ts","ng://data-live/lib/services/messages/messages.service.ts","ng://data-live/lib/services/track/track.service.ts","ng://data-live/lib/services/twilio-token/twilio-token.service.ts","ng://data-live/lib/services/video-call/video-call.service.ts","ng://data-live/lib/services/sentry-error-handler/sentry-error-handler.service.ts","ng://data-live/lib/data-live.module.ts","ng://data-live/lib/interfaces/channels/channels.interface.ts","ng://data-live/lib/interfaces/message/message.model.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","step","op","TypeError","done","value","pop","push","e","__read","o","m","ar","error","__spread","concat","tslib_1.__extends","tslib_1.__decorate","Editable","type","FormFieldType","autocomplete","collectionName","multiple","subQuery","field","values","subQueryOverride","Channel","Model","className","fields","include","searchSubquery","Entity","PubnubSender","id","username","image","appTitle","Pubnub","authentication","session","translate","log","coreConfig","onlineUsers","Map","_supportId","_mainChannel","_supportPrefix","_groupPrefix","_channels","_presenceSubject","Subject","_messageSubject","_statusSubject","_parentSubscription","Subscription","changeState","channels","state","pubnub","setState","uuid","sender","then","setIsTyping","channel","isTyping","toString","isOnline","userId","has","isPresent","whereNow","res","includes","catch","err","getChannelId","user1Id","user2Id","getSupportChannelId","supportId","isSupportChannel","indexOf","parseSupportChannel","replace","getGroupChannelId","channelId","isGroupChannel","parseGroupChannel","getHistory","count","start","from","history","reverse","pipe","map","_a","messages","startTimeToken","endTimeToken","item","merge","entry","timetoken","of","deleteMessages","timetokens","_this","promises","Number","Big","minus","end","plus","Promise","all","ret","getChannelTyping","typing","initChannelTyping","parent","typingSubscription","filter","action","isObject","subscribe","add","join","withPresence","withTyping","subscription","closed","message","leave","unsubscribe","publish","sendChatMessage","text","receiverId","receiverUsername","photo","options","isGroup","alertText","get","substr","sender_id","sender_username","sender_photo","receiver_id","receiver_username","groupName","name","date_sent","Date","pick","others","u","_id","forEach","otherId","resolve","present","notifyUserById","title","mode","pendingBadgePath","notificationOptions","content_available","data","safeMultiplexMessageObservable","Observable","observer","isAvailable","available","PubNub","ReferenceError","init","user","User","getDisplayName","imageData","ssl","keepAlive","announceFailedHeartbeats","heartbeatInterval","presenceTimeout","publishKey","getKey","subscribeKey","addListener","presence","status","onlineUsersSubscription","delete","set","each","here_now_refresh","updateOnlineUsers","initMessageChannels","isAdmin","groups","group","hereNow","includeUUIDs","response","clear","occupants","occupant","disconnect","unsubscribeAll","removeAllListeners","stop","registerDevice","token","addChannels","device","pushGateway","unregisterDevice","removeChannels","Injectable","Authentication","Session","Translate","Log","Push","CoreConfig","Channel$$1","broker","save","hydrateOthers","updateChannels","complete","channelsId","getAll","operator","retVal","user1","user2","isSupport","usersRef","Users","adminIds","users","startsWith","getFilter","isFavorite","_tenantRef","firstName","lastName","setAcl","update","getByUsers","uniqBy","undefined","x","forkJoin","lastMessage","lastMessageAlternate","lastMessageDate","orderBy","getTransform","Broker","WebIntercom","platformId","rendererFactory","document","isInitialized","isPlatformBrowser","renderer2","createRenderer","encapsulation","ViewEncapsulation","None","styles","config","appId","boot","app_id","intercomData","__rest","getOwnPropertySymbols","Intercom","shutdown","loadIntercom","event","hide","show","showNewMessage","showMessages","trackEvent","eventName","getVisitorId","onShow","handler","onHide","onUnreadCountChange","injectIntercomScript","conf","afterInjectCallback","createElement","async","src","attachEvent","addEventListener","appendChild","head","afterLoadCallback","w","ic","i_1","q","args","Inject","PLATFORM_ID","RendererFactory2","DOCUMENT","intercomNative","webIntercom","unreadCount$","login$","logout$","logout","profileUpdated$","identify","serverName","isEnabled","isE2E","isLocalhost","isCordova","isLoggedIn","setLauncherVisibility","registerIdentifiedUser","hide_default_launcher","registerForPush","reset","traits","user_id","language_override","language","avatar","image_url","email","createdAt","unix","toDate","_ect","phone","telephone","gender","getFullAppName","company","role","tenant","_tenant","updateUser","unreadConversationCount","unreadCount","metaData","logEvent","displayMessenger","Config","IntercomNative","Messages","rq","getJsonMessage","to","content","actionURL","actionText","thankyou","sendMail","post","apiUrl","unblockEmails","emails","getApiUrl","Requestor","Track","network","localStorage","injector","intercom","loadAnalytics","forceLoggedIn","ignoreE2E","isOffline","getMode","disableTracking","loadSessionStack","reject","window","isIOS","enumerable","configurable","cookieString","cookie","cookies","split","name_1","trim","isIonic","slice","onload","onerror","getElementsByTagName","parentNode","insertBefore","getSessionStackSession","getSessionId","sessionId","getSessionStackUrl","sendSessionStackError","analytics","initialize","invoked","methods","factory","tt","unshift","load","location","protocol","SNIPPET_VERSION","page","track","properties","word","charAt","toUpperCase","toLowerCase","debugEvent","globalTrackedProps","category","setTimeout","segment_traits","user_tags","tags","operating_system","getPlatform","version","getAppVersion","is_dark_theme","Colors","isDarkTheme","getCurrentSessionURL","fullstoryURL","intercomRegisterForPush","props","user_groups","user_username","user_firstname","user_lastname","user_language","user_company_name","user_tenant","user_role","user_roles","roles","user_environment","router","Router","url","Network","LocalStorage","Injector","TwilioToken","getToken","TwilioVideoToken","VideoCall","constraints","audio","video","width","ideal","height","useCordova","isInit","reconnect","onInitUserInfo","onInitCordova","onInitWeb","userInfo","convertUserInfo","userName","externalId","avatarUrl","voxeet","myUserId","voxeetUserId","appearMaximized","defaultBuiltInSpeaker","defaultVideo","connect","getUserInfo","VoxeetSdk","createConference","alias","conferenceAlias","params","videoCodec","joinConference","conferenceId","audio3D","conference","liveRecording","hasWebCam","navigator","mediaDevices_1","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","hasMicrophone","mediaDevices_2","getConstraint","camPromise","micPromise","hasCam","hasMic","inviteParticipants","externalIds","invite","leaveConference","leaveRoom","on","removeListener","getUserId","startVideo","startVideoForUser","stopVideo","stopVideoForUser","startAudio","startAudioForUser","stopAudio","stopAudioForUser","muteUser","isMuted","toggleMute","setUserPosition","getCurrentSession","getEnumerateAudioDevices","option","enumerateAudioDevices","getEnumerateVideoDevices","enumerateVideoDevices","selectAudioInput","deviceId","selectAudioOutput","selectVideoInput","startScreenShare","stopScreenShare","startRecording","stopRecording","replayRecording","offset","replayConference","shareVideo","videoPresentation","updateMediaSettings","settings","microphone","roomName","isFunction","sendRecordedConferenceId","currentMessage","showNoWebCamAlert","showAlert","showFailedConnectAlert","showCallerLeftAlert","showRecieverLeft","showRecordCompleteAlert","setVideoToast","toast","videoToast","setVideoModal","modal","videoModal","closeVideoModal","closeModal","dismissVideoToast","dismiss","onSendDeclineMessage","declineCall","onSendCancelNotificationMessage","cancelCall","onReceiveDeclineMessage","SentryErrorHandler","zone","trackService","currentEnv_1","getCurrentConfig","initialSelection","runOutsideAngular","dsn","release","environment","Sentry.init","handleError","disabled","disabledErrorMessages","Sentry.captureException","originalError","session_id","Sentry.configureScope","scope","setUser","addEventProcessor","__awaiter","_arguments","P","generator","fulfilled","rejected","result","contexts","sessionstack","timestamp","getTime","extra","fullstoryUrl","NgZone","DataLiveModule","forRoot","configuredProviders","ngModule","providers","NgModule","declarations","imports","DataCoreModule","exports","required","Searchable","filters","FORM_FILES_IMAGE_FILTER","forceModal","hiddenFields","pageSize","fixedPosition","columnDefinition","flex","idOnly","mapTransform","getGroupsTransform","clearable","Channels","emailreport","showUsers","textarea","Message"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Entity, IAcl, User, Model, Editable } from '@shared/data-core';\nimport { FormFieldType } from '@shared/stencil';\n\n@Model({\n  className: 'Channel',\n  collectionName: 'channel',\n  fields: null,\n  include: ['users'],\n  searchSubquery: { collectionName: 'user', field: 'usersRef', values: '_id' }\n})\nexport class Channel extends Entity {\n  // export class Channel implements IEntity {\n  _id: string;\n  _acl: IAcl;\n  _lmt?: string;\n  _ect?: string;\n\n  channel: string;\n  isSupport: boolean;\n  isFavorite: boolean;\n  isOnline: boolean;\n  //All Users in the Channel\n  @Editable('Channel', {\n    type: FormFieldType.autocomplete,\n    collectionName: 'user',\n    multiple: true,\n    subQuery: { field: 'usersRef', values: '_id', collectionName: 'user' },\n    subQueryOverride: { field: 'usersRef', values: '_id', collectionName: 'user' }\n  })\n  users: Array<User>;\n  //other Users than the logged in user\n  others: Array<User>;\n\n  lastMessage: any;\n  lastMessageAlternate: boolean;\n  lastMessageDate?: any;\n\n  deleteMessages: Array<any>;\n}\n","import { Injectable } from '@angular/core';\nimport { Log, CoreConfig } from '@shared/common';\nimport { Translate } from '@shared/translate';\nimport { User, Authentication, Session, Push } from '@shared/data-core';\n\nimport { ChatMessage as Message } from '../../interfaces/message/message.interface';\nimport { Channels } from '../../interfaces/channels/channels.interface';\nimport { IPubNub, PresenceEvent, MessageEvent, StatusEvent, ChannelState, HereNowResponse, UUIDState, GlobalState } from '../../interfaces/pubnub/pubnub.interface';\n\nimport { includes, isObject, pick, forEach, each, merge } from 'lodash-es';\n\nimport { Subscription, Observable, Subject, from, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport Big from 'big.js';\n\ndeclare const PubNub: any;\n\n//import * as pubnubLib from 'pubnub/dist/web/pubnub';\n\nexport class PubnubSender {\n  id: string;\n  username: string;\n  image: string;\n  appTitle: string;\n\n  constructor(id, username, image, appTitle = 'YOOBIC') {\n    this.id = id;\n    this.username = username;\n    this.image = image;\n    this.appTitle = appTitle;\n  }\n}\n\n@Injectable()\nexport class Pubnub {\n  //private static _pubnub: any = null;\n\n  protected sender: PubnubSender;\n  protected onlineUsers = new Map<string, any>();\n\n  private _supportId = '53fb03c6546847ee0536386a';\n  private _mainChannel = 'yoobicchannel';\n  private _supportPrefix = 'support_';\n  private _groupPrefix = 'group_';\n  private _channels: {\n    [channel: string]: {\n      messages: Subject<Message>;\n      subscription: Subscription;\n      typing?: Subject<[string, boolean]>;\n    };\n  } = {};\n  private _presenceSubject = new Subject<PresenceEvent>();\n  private _messageSubject = new Subject<MessageEvent>();\n  private _statusSubject = new Subject<StatusEvent>();\n\n  private _parentSubscription = new Subscription();\n\n  private pubnub: IPubNub;\n\n  constructor(private authentication: Authentication, private session: Session, private translate: Translate, private log: Log, protected push: Push, private coreConfig: CoreConfig) {}\n\n  get supportId() {\n    return this._supportId;\n  }\n\n  changeState(channels: string[], state: ChannelState): Promise<ChannelState> {\n    return this.pubnub.setState({ uuid: this.sender.id, channels, state }).then(r => r.state);\n  }\n\n  setIsTyping(channel: string, isTyping: boolean): Promise<ChannelState> {\n    return this.changeState([channel], { isTyping: isTyping.toString() });\n  }\n\n  isOnline(userId: string): boolean {\n    return this.onlineUsers.has(userId);\n  }\n\n  isPresent(userId: string, channel = this._mainChannel): Promise<boolean> {\n    return this.pubnub\n      .whereNow({ uuid: userId })\n      .then(res => {\n        return includes(res.channels, channel);\n      })\n      .catch(err => {\n        // if we get an error, don't reject, just return false;\n        return false;\n      });\n  }\n\n  getChannelId(user1Id: string, user2Id: string) {\n    return user1Id < user2Id ? user1Id + '_' + user2Id : user2Id + '_' + user1Id;\n  }\n\n  getSupportChannelId(userId: string) {\n    return this._supportPrefix + this.supportId + '_' + userId;\n  }\n\n  isSupportChannel(channel) {\n    return channel.indexOf(this._supportPrefix) >= 0;\n  }\n\n  parseSupportChannel(channel) {\n    return channel.replace(this._supportPrefix, '').replace(this._supportId + '_', '');\n  }\n\n  getGroupChannelId(channelId) {\n    return this._groupPrefix + channelId;\n  }\n\n  isGroupChannel(channel) {\n    return channel.indexOf(this._groupPrefix) === 0;\n  }\n\n  parseGroupChannel(channel) {\n    return channel.replace(this._groupPrefix, '');\n  }\n\n  getHistory(channel: string, count = 10, start?: number): Observable<[Array<Message>, number, number]> {\n    if (!this.pubnub) {\n      return of(<any>[]);\n    }\n    return from(this.pubnub.history({ channel: channel, count: count, reverse: false, start: start })).pipe(\n      map(\n        ({ messages, startTimeToken, endTimeToken }): [Array<Message>, number, number] => {\n          return [messages.map(item => merge(item.entry, { timetoken: item.timetoken })), startTimeToken, endTimeToken];\n        }\n      )\n    );\n  }\n\n  deleteMessages(channel: string, timetokens: Array<number>) {\n    let promises = timetokens.map(timetoken => this.pubnub.deleteMessages({ channel: channel, start: Number(new Big(timetoken).minus(2)), end: Number(new Big(timetoken).plus(2)) }));\n    return Promise.all(promises).then((ret: any) => {\n      return ret;\n    });\n  }\n\n  getChannelTyping(channel: string): Subject<[string, boolean]> {\n    if (channel && this._channels[channel] && this._channels[channel].typing) {\n      return this._channels[channel].typing;\n    } else {\n      return null;\n    }\n  }\n\n  initChannelTyping(channel: string, parent: Subscription): Subject<[string, boolean]> {\n    let typing = new Subject<[string, boolean]>();\n    let typingSubscription = this._presenceSubject\n      .pipe(\n        filter(m => m.channel === channel && m.uuid !== this.sender.id),\n        map(({ uuid, action, state }) => {\n          switch (action) {\n            case 'leave':\n            case 'timeout':\n              return [uuid, false];\n            case 'join':\n            case 'state-change':\n              return [uuid, isObject(state) && state.isTyping === 'true'];\n          }\n        })\n      )\n      .subscribe(typing);\n    parent.add(typing);\n    parent.add(typingSubscription);\n    return typing;\n  }\n\n  join(channel: string, withPresence = false, withTyping = false): Observable<Message> {\n    if (!this._channels[channel] || this._channels[channel].subscription.closed) {\n      let messages = new Subject<Message>();\n      if (this._messageSubject) {\n        let subscription = this._messageSubject\n          .pipe(\n            filter(m => m.channel === channel),\n            map(m => merge(m.message, { timetoken: m.timetoken }))\n          )\n          .subscribe(messages);\n        subscription.add(messages);\n        let typing;\n        if (withTyping) {\n          typing = this.initChannelTyping(channel, subscription);\n        }\n        this._parentSubscription.add(subscription);\n        this._channels[channel] = { messages, subscription, typing };\n      }\n      if (this.pubnub) {\n        this.pubnub.subscribe({ channels: [channel], withPresence: withPresence || withTyping });\n      }\n    }\n    if (this._channels && this._channels[channel] && this._channels[channel].messages) {\n      return this._channels[channel].messages;\n    } else {\n      return new Subject<Message>();\n    }\n  }\n\n  leave(channel: string) {\n    if (channel && this._channels[channel] && this.pubnub) {\n      this._channels[channel].subscription.unsubscribe();\n      this.pubnub.unsubscribe({ channels: [channel] });\n    }\n  }\n\n  publish(channel: string, message: Message) {\n    this.pubnub.publish({ channel: channel, message: message });\n  }\n\n  sendChatMessage(channel: string, text: string, receiverId: string, receiverUsername: string, channels?: Channels, photo?: any, type = 'chat', options = {}) {\n    let isGroup = this.isGroupChannel(channel);\n    let alertText = ''; //this.sender.username;\n    if (text.indexOf('ionic-chat-image') >= 0) {\n      alertText += '' + this.translate.get('SENDANEWPHOTO'); //': '\n    } else {\n      alertText += '' + text.substr(0, 50) + '...';\n    }\n    let message: Message = {\n      channel: channel,\n      message: text,\n      type: type,\n      options: options,\n      //entityId: entityId,\n      sender_id: this.sender.id,\n      sender_username: this.sender.username,\n      sender_photo: this.sender.image,\n      receiver_id: receiverId,\n      receiver_username: receiverUsername,\n      isGroup: isGroup,\n      groupName: !isGroup ? null : channels.name,\n      date_sent: new Date(),\n      photo: photo ? <any>pick(photo, ['_id', 'value', 'edit', 'texts', 'title', 'name', 'missiondescriptionRef', 'missionRef', 'missiondataRef', 'userRef', 'userDisplayname', 'address']) : null\n    };\n    // let offlineMessage = Object.assign({}, message, {\n    //     pn_apns: { aps: { alert: alertText, badge: 1 }, sender_username: this.sender.username, channel: channel }, //type: type || chatEvent.newMessage,\n    //     pn_gcm: { data: { message: alertText, title: 'Yoobic', sender_username: this.sender.username, channel: channel } }, //type: type || chatEvent.newMessage,\n    //     pn_debug: false\n    // });\n\n    let otherIds = [];\n    if (!isGroup) {\n      otherIds = [receiverId];\n    } else {\n      otherIds = channels.others.map(u => u._id);\n    }\n\n    otherIds.forEach(otherId => {\n      let promise = !this.isOnline(otherId) ? Promise.resolve(false) : this.isPresent(otherId, channel);\n      promise.then(\n        present => {\n          if (!present) {\n            if (this.isOnline(otherId)) {\n              this.publish(otherId, message);\n              this.push\n                .notifyUserById(otherId, {\n                  title: 'SILENTNOTIFICATION',\n                  mode: 'notification',\n                  pendingBadgePath: 'pendingBadges._communicate' + (isGroup ? '.team' : '.direct'),\n                  notificationOptions: {\n                    content_available: true\n                  }\n                })\n                .subscribe(() => {});\n            } else {\n              this.push\n                .notifyUserById(otherId, {\n                  title: (isGroup ? channels.name + ' - ' : '') + this.sender.username,\n                  body: alertText,\n                  mode: 'notification',\n                  pendingBadgePath: 'pendingBadges._communicate' + (isGroup ? '.team' : '.direct'),\n                  data: message\n                })\n                .subscribe(() => {});\n            }\n          }\n        },\n        err => {}\n      );\n    });\n    this.publish(channel, message);\n  }\n\n  safeMultiplexMessageObservable(channels: string[]): Observable<Message> {\n    return new Observable<Message>(observer => {\n      forEach(channels, (channel: string) => {\n        this._parentSubscription.add(this._channels[channel].messages.subscribe(m => observer.next(m)));\n      });\n    });\n  }\n\n  isAvailable() {\n    let available: boolean = true;\n    try {\n      if (!PubNub) {\n        available = false;\n      }\n    } catch (e) {\n      if (e instanceof ReferenceError) {\n        available = false;\n      }\n    }\n    return available;\n  }\n\n  init(user: User): Observable<Message> {\n    //return from(this.getPubnub()).pipe(mergeMap(pubnub => {\n    if (!this.isAvailable()) {\n      return;\n    }\n\n    this._presenceSubject = !this._presenceSubject || this._presenceSubject.closed ? new Subject<PresenceEvent>() : this._presenceSubject;\n    this._messageSubject = !this._messageSubject || this._messageSubject.closed ? new Subject<MessageEvent>() : this._messageSubject;\n    this._statusSubject = !this._statusSubject || this._statusSubject.closed ? new Subject<StatusEvent>() : this._statusSubject;\n    this._parentSubscription = !this._parentSubscription || this._parentSubscription.closed ? new Subscription() : this._parentSubscription;\n\n    this.sender = new PubnubSender(user._id, User.getDisplayName(user), user.imageData);\n    this.pubnub = new PubNub({\n      ssl: true,\n      keepAlive: true,\n      announceFailedHeartbeats: false,\n      heartbeatInterval: 600,\n      presenceTimeout: 300,\n      // setPresenceTimeout: 0,\n      // setPresenceTimeoutWithCustomInterval: 0,\n      publishKey: this.coreConfig.getKey('pubnubPublishKey'),\n      subscribeKey: this.coreConfig.getKey('pubnubSubscribeKey'),\n      uuid: this.sender.id\n    });\n\n    this._parentSubscription.add(this._presenceSubject);\n    this._parentSubscription.add(this._messageSubject);\n    this._parentSubscription.add(this._statusSubject);\n    // connect listener to subjects\n    this.pubnub.addListener({\n      presence: (p: PresenceEvent) => {\n        if (this._presenceSubject && this._presenceSubject.next) {\n          this._presenceSubject.next(p);\n        }\n      },\n      message: (m: MessageEvent) => {\n        if (this._messageSubject && this._messageSubject.next) {\n          this._messageSubject.next(m);\n        }\n      },\n      status: (s: StatusEvent) => {\n        if (this._statusSubject && this._statusSubject.next) {\n          if (s.error) {\n            this._statusSubject.error(s.error);\n          } else {\n            this._statusSubject.next(s);\n          }\n        }\n      }\n    });\n\n    // subscribe to _presenceSubject on the main channel to manage online user, ignore own events.\n    let onlineUsersSubscription = this._presenceSubject.pipe(filter(({ uuid, channel }) => uuid !== this.sender.id && channel === this._mainChannel)).subscribe((presence: PresenceEvent) => {\n      switch (presence.action) {\n        case 'leave':\n          this.onlineUsers.delete(presence.uuid);\n          break;\n        case 'join':\n        case 'state-change':\n          this.onlineUsers.set(presence.uuid, presence.state || {});\n          break;\n        case 'timeout':\n          this.onlineUsers.set(presence.uuid, null);\n          break;\n        case 'interval':\n          each(presence.join, userId => {\n            this.onlineUsers.set(userId, {});\n          });\n          // each(presence.timedout, userId => {\n          //     this.onlineUsers.set(userId, null);\n          // });\n          each(presence.leave, userId => {\n            this.onlineUsers.delete(userId);\n          });\n\n          if (presence.here_now_refresh && presence.channel === this._mainChannel) {\n            this.updateOnlineUsers();\n          }\n          break;\n      }\n    });\n    this._parentSubscription.add(onlineUsersSubscription);\n\n    let initMessageChannels: string[] = [];\n    //we use the main channel for online/presence detection, subscribe to the presence channel as well.\n    this.join(this._mainChannel, true);\n    this.updateOnlineUsers();\n    initMessageChannels.push(this._mainChannel);\n\n    //we use a specific user channel for notification\n    this.join(this.sender.id);\n    initMessageChannels.push(this.sender.id);\n\n    //we subscribe to each group of the current user for feed notification for example\n    if (!this.authentication.isAdmin() && this.session.groups) {\n      this.session.groups.forEach(group => {\n        this.join(group);\n        initMessageChannels.push(group);\n      });\n    }\n\n    return this.safeMultiplexMessageObservable(initMessageChannels);\n    //}));\n  }\n\n  updateOnlineUsers() {\n    this.pubnub.hereNow({ channels: [this._mainChannel], includeUUIDs: true }).then((response: HereNowResponse<UUIDState<GlobalState>>) => {\n      this.onlineUsers.clear();\n      response.channels[this._mainChannel].occupants.forEach(occupant => {\n        this.onlineUsers.set(occupant.uuid, occupant.state || {});\n      });\n    });\n  }\n\n  disconnect() {\n    if (this.sender && this.sender.id && this.pubnub) {\n      this.pubnub.unsubscribeAll();\n      this.pubnub.removeAllListeners();\n      this._channels = {};\n      this.pubnub.stop();\n    }\n    if (this._parentSubscription) {\n      this._parentSubscription.unsubscribe();\n    }\n    delete this._presenceSubject;\n    delete this._messageSubject;\n    delete this._statusSubject;\n    delete this._parentSubscription;\n  }\n\n  registerDevice(token, channel, type) {\n    this.pubnub.push.addChannels({ device: token, channels: [channel], pushGateway: type }, error => {\n      if (error) {\n        this.log.log('pubnub registered error ' + token, error);\n      } else {\n        this.log.log('pubnub registered success ' + token);\n      }\n    });\n  }\n\n  unregisterDevice(token, channel, type) {\n    this.pubnub.push.removeChannels({ device: token, channels: [channel], pushGateway: type }, error => {\n      if (error) {\n        this.log.log('pubnub unregistered error ' + token, error);\n      } else {\n        this.log.log('pubnub unregistered success ' + token);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Broker, ResponseObject, Session, User, Users } from '@shared/data-core';\nimport { Filter } from '@shared/stencil';\n\nimport { Channel as ChannelInterface } from '../../interfaces/channel/channel.interface';\nimport { Channels } from '../../interfaces/channels/channels.interface';\nimport { Pubnub } from '../pubnub/pubnub.service';\n\nimport { Observable, Observer, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { uniqBy, orderBy } from 'lodash-es';\nimport { Translate } from '@shared/translate';\n\nexport { ChannelInterface };\n\n@Injectable()\nexport class Channel {\n  constructor(private broker: Broker, private pubnub: Pubnub, private session: Session, protected translate: Translate) {}\n\n  createChannels(channels: Channels) {\n    return new Observable<Channels>((observer: Observer<Channels>) => {\n      this.broker.save('channels', channels).subscribe(c => {\n        this.hydrateOthers(c, true);\n        this.updateChannels(c).subscribe(ret => {\n          observer.next(c);\n          observer.complete();\n        });\n      });\n    });\n  }\n\n  getChannelsById(channelsId: string) {\n    return this.broker.getAll('channels', null, null, null, [[{ field: 'channel', operator: { _id: 'eq' }, value: channelsId }]]).pipe(\n      map(retVal => {\n        if (retVal && retVal.data && retVal.data.length > 0) {\n          let channels = retVal.data[0];\n          this.hydrateOthers(channels, true);\n          return channels;\n        }\n        return null;\n      })\n    );\n  }\n\n  getChannelById(channelId: string) {\n    return this.broker.getAll('channel', null, null, null, [[{ field: 'channel', operator: { _id: 'eq' }, value: channelId }]]).pipe(\n      map(retVal => {\n        if (retVal && retVal.data && retVal.data.length > 0) {\n          let channel = retVal.data[0];\n          this.hydrateOthers(channel, false);\n          return channel;\n        }\n        return null;\n      })\n    );\n  }\n\n  //update the channel itself when we publish a new message\n  update(channel: ChannelInterface) {\n    channel = Object.assign({}, channel);\n    delete channel.others;\n    return this.broker.save('channel', channel);\n  }\n\n  // delete a channel\n  deleteChannel(channel: ChannelInterface) {\n    // TODO: implement pubnub.deleteChannels\n    return this.broker.delete('channel', channel._id);\n  }\n\n  updateChannels(channel: Channels) {\n    channel = Object.assign({}, channel);\n    delete channel.others;\n    return this.broker.save('channels', channel);\n  }\n\n  // delete a group channel\n  deleteChannels(channels: Channels) {\n    // TODO: implement pubnub.deleteChannels\n    return this.broker.delete('channels', channels._id);\n  }\n\n  //Get the channel filter for a specific user\n  getFilter(user1: User, user2?: User, isSupport?: boolean): Filter {\n    let usersRef = [{ field: 'usersRef', operator: { _id: 'inq' }, value: [{ _id: user1._id }] }];\n    if (user2) {\n      usersRef.push({ field: 'usersRef', operator: { _id: 'inq' }, value: [{ _id: user2._id }] });\n    }\n    if (!isSupport) {\n      usersRef.push({ field: 'usersRef', operator: { _id: 'nin' }, value: Users.adminIds });\n    }\n    return [...usersRef, { field: 'channel', operator: { _id: 'like' }, value: '_' }, { field: 'isSupport', operator: { _id: 'eq' }, value: isSupport === true }];\n  }\n\n  getChannelsFilter(user: User): Filter {\n    return [{ field: 'usersRef', operator: { _id: 'inq' }, value: [{ _id: user._id }] }];\n  }\n\n  hydrateOthers(channel: ChannelInterface | Channels, isGroup = false): ChannelInterface | Channels {\n    if (channel && channel.users) {\n      channel.others = channel.users.filter(u => u._id !== this.session.userId);\n    }\n    if (isGroup && (!channel.channel || !channel.channel.startsWith('group_'))) {\n      channel.channel = 'group_' + channel._id;\n    }\n    return channel;\n  }\n\n  //return the channel beetween 2 users\n  getByUsers(user1: User, user2?: User, isSupport?: boolean) {\n    return new Observable<ChannelInterface>((observer: Observer<ChannelInterface>) => {\n      this.broker.getAll('channel', null, null, null, [this.getFilter(user1, user2, isSupport)]).subscribe(retVal => {\n        let channel;\n        if (retVal.data.length > 0) {\n          channel = retVal.data[0];\n          this.hydrateOthers(channel);\n          observer.next(channel);\n          observer.complete();\n        } else {\n          channel = {\n            usersRef: isSupport ? [this.pubnub.supportId, user1._id] : [user1._id, user2._id],\n            channel: isSupport ? this.pubnub.getSupportChannelId(user1._id) : this.pubnub.getChannelId(user1._id, user2._id),\n            isSupport: isSupport === true,\n            isFavorite: false,\n            _tenantRef: user2 ? user2._tenantRef : user1._tenantRef,\n            users: isSupport\n              ? [\n                  {\n                    _id: this.pubnub.supportId,\n                    username: 'smartin@yoobic.com',\n                    firstName: 'Sarah',\n                    lastName: 'Martin',\n                    imageData: 'http://res.cloudinary.com/www-yoobic-com/image/upload/a_exif/v1466421996/jv0vc0yizwqefj22iirh.png'\n                  },\n                  user1\n                ]\n              : [user1, user2]\n          };\n          this.broker.setAcl(channel, null, null, null, user2 ? [user1._id, user2._id] : [user1._id]);\n          this.update(<any>channel).subscribe(c => {\n            this.hydrateOthers(c);\n            observer.next(c);\n            observer.complete();\n          });\n        }\n      });\n    });\n  }\n\n  //Return the support channel for a specific user\n  getSupportByUser(user: User): Observable<ChannelInterface> {\n    return this.getByUsers(user, null, true);\n  }\n\n  getTransform(userId: string, isGroup = false) {\n    return (res: ResponseObject) => {\n      let channels = [];\n      return new Observable<ResponseObject>((observer: Observer<ResponseObject>) => {\n        if (res.data && res.data.map) {\n          if (!isGroup) {\n            res.data = uniqBy(res.data, 'channel');\n          }\n          channels = res.data\n            .map((channel: any) => {\n              this.hydrateOthers(channel, isGroup);\n              if (channel.others && channel.others.length > 0) {\n                if (!isGroup) {\n                  channel.isOnline = this.pubnub.isOnline(channel.others[0]._id);\n                }\n                return channel;\n              } else {\n                return undefined;\n              }\n            })\n            .filter(x => x !== undefined);\n        }\n        if (channels.length === 0) {\n          observer.next({ count: 0, data: [] });\n          observer.complete();\n        } else {\n          forkJoin(\n            channels.map((channel: ChannelInterface) => {\n              return this.pubnub.getHistory(channel.channel, 1).pipe(\n                map((retVal: any) => {\n                  if (retVal.length > 0) {\n                    channel.lastMessage = null;\n                    channel.lastMessageAlternate = null;\n                    channel.lastMessageDate = '';\n\n                    let messages = retVal[0];\n                    if (messages.length > 0) {\n                      let lastMessage = messages[0];\n                      if (!channel.deleteMessages || channel.deleteMessages.indexOf(lastMessage.date_sent) < 0) {\n                        channel.lastMessage = lastMessage.message;\n                        channel.lastMessageDate = lastMessage.date_sent;\n                        if (channel.lastMessage && channel.lastMessage.indexOf('ionic-chat-image') > 0) {\n                          channel.lastMessage = this.translate.get('PHOTO');\n                        }\n                        channel.lastMessageAlternate = lastMessage.sender_id !== this.session.userId;\n                      }\n                    }\n                  }\n                  return channel;\n                })\n              );\n            })\n          ).subscribe(c => {\n            c = orderBy(c, ['lastMessageDate'], ['desc']);\n            observer.next({ count: res.count, data: <any>c });\n            observer.complete();\n          });\n        }\n      });\n    };\n  }\n\n  //Remove the current user from the users list and assign the others attribute\n  getTransformChannel(userId: string) {\n    return this.getTransform(userId, false);\n  }\n\n  //Remove the current user from the users list and assign the others attribute\n  getTransformChannels(userId: string) {\n    return this.getTransform(userId, true);\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID, /*Optional, Injector, isDevMode, */ Renderer2, RendererFactory2, ViewEncapsulation } from '@angular/core';\n// import { Router } from '@angular/router';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\nimport { IntercomConfig, Any, BootInput } from '../../interfaces/intercom/intercom.interface';\n\n/**\n * A provider with every Intercom.JS method\n */\n@Injectable()\nexport class WebIntercom {\n  private id: string;\n\n  private renderer2: Renderer2;\n  private config: IntercomConfig;\n  private isInitialized: boolean = false;\n\n  // private router: Router;\n\n  constructor(\n    // private injector: Injector,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    // private router: Router,\n    private rendererFactory: RendererFactory2,\n    @Inject(DOCUMENT) private document\n  ) {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    // this.router = this.injector.get(Router);\n\n    this.renderer2 = this.rendererFactory.createRenderer(this.document, {\n      id: '-1',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {}\n    });\n\n    // Subscribe to router changes\n  }\n  public init(config: IntercomConfig = { appId: '' }) {\n    this.config = config;\n    if (this.isInitialized) {\n      return;\n    }\n    this.isInitialized = false;\n    // if (config && config.updateOnRouterChange) {\n    //   this.router.events.subscribe(event => {\n    //     this.update();\n    //   });\n    // } else if (isDevMode()) {\n    //   console.warn(`\n    //   Common practice in single page applications is to update whenever the route changes.\n    //   ng-intercom supports this functionality out of the box just set 'updateOnRouterChange' to true in your Intercom Module config.\n    //   This warning will not appear in production, if you choose not to use router updating.\n    //   `);\n    // }\n  }\n\n  /**\n   * If you'd like to control when Intercom is loaded, you can use the 'boot' method.\n   * This is useful in situations like a one-page Javascript based application where the user may not be logged in\n   * when the page loads. You call this method with the standard intercomSettings object.\n   */\n  public boot({ app_id, ...intercomData }: BootInput = {}): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (app_id !== this.config.appId) {\n      this.config.appId = app_id || this.config.appId;\n      if ((<any>window).Intercom) {\n        this.shutdown();\n      }\n    }\n    // Run load and attach to window\n    this.loadIntercom(this.config, (event: Event) => {\n      // then boot the intercom js\n      const data = {\n        ...intercomData,\n        app_id: this.config.appId\n      };\n\n      return (<any>window).Intercom('boot', data);\n    });\n  }\n\n  /**\n   * If you have the Respond product (combined with another product like Engage)\n   * you should call the Intercom shutdown method to clear your usersâ conversations anytime they logout\n   * of your application. Otherwise, the cookie we use to track who was most recently logged in on a given device\n   * or computer will keep these conversations in the Messenger for one week.\n   * This method will effectively clear out any user data that you have been passing through the JS API.\n   */\n  public shutdown(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('shutdown');\n  }\n\n  /**\n   * Calling the update method without any other arguments will trigger the JavaScript to look for new messages\n   * that should be displayed to the current user (the one whose details are in the window.intercomSettings variable)\n   * and show them if they exist.\n   *\n   * Calling the update method with a JSON object of user details will update those fields on the current user\n   * in addition to logging an impression at the current URL and looking for new messages for the user.\n   */\n  public update(data?: Any): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    if (data) {\n      return (<any>window).Intercom('update', data);\n    } else {\n      return (<any>window).Intercom('update');\n    }\n  }\n\n  /**\n   * This will hide the main Messenger panel if it is open. It will not hide the Messenger Launcher.\n   */\n  public hide(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('hide');\n  }\n\n  /**\n   * This will show the Messenger. If there are no conversations it will open with the new message view,\n   * if there are it will open with the message list.\n   *\n   * If a `message` parameter is supplied, it will automatically open a new message window, aliasing showNewMessage().\n   *\n   */\n  public show(message?: string): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    if (message) {\n      return (<any>window).Intercom('show');\n    } else {\n      return this.showNewMessage(message);\n    }\n  }\n\n  /**\n   * To open the message window with the message list you can call `showMessages()`.\n   */\n  public showMessages(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('showMessages');\n  }\n\n  /**\n   * To open the message window with the new message view you can call showNewMessage().\n   *\n   * This function takes an optional parameter that can be used to pre-populate the message composer as shown below.\n   */\n  public showNewMessage(message?: string): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    if (message) {\n      return (<any>window).Intercom('showNewMessage', message);\n    } else {\n      return (<any>window).Intercom('showNewMessage');\n    }\n  }\n\n  /**\n   * You can submit an event using the trackEvent method.\n   * This will associate the event with the currently logged in user and send it to Intercom.\n   * The final parameter is a map that can be used to send optional metadata about the event.\n   *\n   * You can also add custom information to events in the form of event metadata.\n   */\n  public trackEvent(eventName: string, metadata?: any): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    if (metadata) {\n      return (<any>window).Intercom('trackEvent', eventName, metadata);\n    } else {\n      return (<any>window).Intercom('trackEvent', eventName);\n    }\n  }\n\n  /**\n   * A visitor is someone who goes to your site but does not use the messenger.\n   * You can track these visitors via the visitor user_id.\n   * This user_id can be used to retrieve the visitor or lead through the REST API.\n   */\n  public getVisitorId(): string {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('getVisitorId');\n  }\n\n  /**\n   * Alias for getVisitorId()\n   * @alias getVisitorId()\n   * @readonly\n   */\n  get visitorId(): string {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('getVisitorId');\n  }\n\n  /**\n   * Gives you the ability to hook into the show event. Requires a function argument.\n   */\n  public onShow(handler: () => void): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('onShow', handler);\n  }\n\n  /**\n   * Gives you the ability to hook into the hide event. Requires a function argument.\n   */\n  public onHide(handler: () => void): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('onHide', handler);\n  }\n\n  /**\n   * This method allows you to register a function that will be called when the current number of unread messages changes.\n   */\n  public onUnreadCountChange(handler: (unreadCount?: number) => void): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!(<any>window).Intercom) {\n      return;\n    }\n    return (<any>window).Intercom('onUnreadCountChange', handler);\n  }\n\n  injectIntercomScript(conf: IntercomConfig, afterInjectCallback: (ev: Event) => any): void {\n    // if (!isPlatformBrowser(this.platformId)) {\n    //   return\n    // }\n\n    const s = this.document.createElement('script');\n    s.type = 'text/javascript';\n    s.async = true;\n    s.src = `https://widget.intercom.io/widget/${this.id}`;\n\n    if (s.attachEvent) {\n      s.attachEvent('onload', afterInjectCallback);\n    } else {\n      s.addEventListener('load', afterInjectCallback, false);\n    }\n\n    if (this.renderer2 && this.renderer2.appendChild) {\n      this.renderer2.appendChild(this.document.head, s);\n    }\n\n    (<any>window).Intercom('update', conf);\n  }\n\n  loadIntercom(config: IntercomConfig, afterLoadCallback: (ev: Event) => any): void {\n    this.id = config.appId;\n    const w = <any>window;\n    const ic = w.Intercom;\n    if (typeof ic === 'function') {\n      ic('reattach_activator');\n      ic('update', config);\n    } else {\n      const i: any = function() {\n        i.c(arguments);\n      };\n      i.q = [];\n      i.c = function(args: any) {\n        i.q.push(args);\n      };\n      w.Intercom = i;\n      this.injectIntercomScript(config, afterLoadCallback);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CoreConfig } from '@shared/common';\nimport { Authentication, User, Config, Session } from '@shared/data-core';\nimport { Subject } from 'rxjs';\nimport { Intercom as IntercomNative } from '@ionic-native/intercom/ngx';\nimport { toDate, unix } from '@shared/stencil';\n\nimport { WebIntercom } from './web-intercom.service';\n\n@Injectable()\nexport class Intercom {\n  public unreadCount$ = new Subject<number>();\n\n  protected get app_id() {\n    return this.config.serverName === 'Production' ? this.coreConfig.getKey('intercomIdProd') : this.coreConfig.getKey('intercomIdDev');\n  }\n\n  constructor(protected coreConfig: CoreConfig, protected config: Config, protected intercomNative: IntercomNative, protected authentication: Authentication, protected session: Session, protected webIntercom: WebIntercom) {\n    this.authentication.login$.subscribe(() => this.init());\n    this.authentication.logout$.subscribe(() => this.logout());\n    this.authentication.profileUpdated$.subscribe(user => this.identify(user));\n  }\n\n  isEnabled() {\n    if (this.config.isE2E) {\n      return false;\n    }\n    if (this.coreConfig.isLocalhost() && !this.coreConfig.isCordova()) {\n      return false;\n    }\n    return true;\n  }\n\n  init() {\n    // initialize intercom when lauching the app or log in\n    if (!this.isEnabled()) {\n      return;\n    }\n    if (!this.coreConfig.isCordova()) {\n      this.webIntercom.init({ appId: this.app_id });\n      this.webIntercom.boot({\n        app_id: this.app_id,\n        hide_default_launcher: true\n      });\n      // if (window.Intercom) {\n      //     window.Intercom('boot', {\n      //         app_id: this.app_id,\n      //         hide_default_launcher: true\n      //     });\n      // }\n    } else {\n      // register identified user only if the app is loggedin\n      if (this.authentication.isLoggedIn() && this.session.userId) {\n        this.intercomNative.setLauncherVisibility('GONE');\n        this.intercomNative.registerIdentifiedUser({ userId: this.session.userId });\n      }\n    }\n  }\n\n  registerForPush() {\n    if (this.coreConfig.isCordova()) {\n      this.intercomNative.registerForPush();\n    }\n  }\n\n  logout() {\n    if (!this.isEnabled()) {\n      return;\n    }\n    // This resets the Intercom integration's cache of your user's identity and wipes the slate clean and also hide the launcher.\n    if (!this.coreConfig.isCordova()) {\n      this.webIntercom.shutdown();\n      // if (window.Intercom) {\n      //     window.Intercom('shutdown');\n      // }\n    } else {\n      this.intercomNative.reset();\n      //this.ionicIntercom.setLauncherVisibility('HIDE');\n    }\n  }\n\n  identify(user: User) {\n    if (!this.isEnabled() || !user) {\n      return;\n    }\n    let traits = {\n      user_id: user._id,\n      language_override: user.language,\n      avatar: {\n        type: 'avatar',\n        image_url: user.imageData\n      },\n      email: user.email || user.username,\n      username: user.username,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      createdAt: unix(toDate(user._ect)),\n      phone: user.telephone,\n      gender: user.gender,\n      device: user.device,\n      target: this.coreConfig.getFullAppName(),\n      company: user.company,\n      role: user.role,\n      tenant: user._tenant ? user._tenant.name : '',\n      hide_default_launcher: true //,\n      //logrocketURL: 'https://app.logrocket.com/' + this.coreConfig.getKey('logrocketId') + '+/sessions?u=' + user._id\n      //custom_launcher_selector: '#intercom_launcher'\n    };\n    if (!this.coreConfig.isCordova()) {\n      this.webIntercom.update(traits);\n      this.webIntercom.onUnreadCountChange(unreadCount => {\n        this.unreadCount$.next(unreadCount);\n      });\n      // if (window.Intercom) {\n      //     window.Intercom('update', traits);\n      //     window.Intercom('onUnreadCountChange', (unreadCount) => {\n      //         this.unreadCount$.next(unreadCount);\n      //     });\n      // }\n    } else {\n      this.intercomNative.updateUser(traits);\n      this.intercomNative.unreadConversationCount().then(unreadCount => {\n        this.unreadCount$.next(unreadCount);\n      });\n    }\n  }\n\n  trackEvent(eventName: string, metaData: any) {\n    if (!this.coreConfig.isCordova()) {\n      this.webIntercom.trackEvent(eventName, metaData);\n    } else {\n      this.intercomNative.logEvent(eventName, metaData);\n    }\n  }\n\n  update(metaData: any) {\n    if (!this.coreConfig.isCordova()) {\n      this.webIntercom.update(metaData);\n    } else {\n      this.intercomNative.updateUser(metaData);\n    }\n  }\n\n  show() {\n    if (!this.isEnabled()) {\n      return;\n    }\n    if (!this.coreConfig.isCordova()) {\n      this.webIntercom.show();\n      // if (window.Intercom) {\n      //     window.Intercom('show');\n      // }\n    } else {\n      this.intercomNative.displayMessenger();\n    }\n  }\n}\n","/* tslint:disable:variable-name */\nimport { Injectable } from '@angular/core';\nimport { Broker, Requestor } from '@shared/data-core';\nimport { Message } from '../../interfaces/message/message.model';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Messages {\n  constructor(private broker: Broker, private rq: Requestor) {}\n\n  getJsonMessage(message: Message) {\n    return {\n      to: message.to,\n      content: {\n        title: message.title,\n        body: message.body,\n        //footer: message.footer,\n        actionURL: message.actionURL,\n        actionText: message.actionText,\n        action: message.actionURL ? true : false,\n        thankyou: message.thankyou\n      }\n    };\n  }\n\n  sendMail(message: Message): any {\n    return this.rq.post(this.apiUrl + 'mail', this.getJsonMessage(message));\n  }\n\n  unblockEmails(emails: Array<string>): Observable<any> {\n    return this.rq.post(this.broker.getApiUrl() + 'businesslogic/unblockEmails', { emails });\n  }\n\n  private get apiUrl() {\n    return this.broker.getApiUrl() + 'Messages/';\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Network, CoreConfig, Log, LocalStorage, Colors } from '@shared/common';\nimport { User, Authentication, Session, Push, Config } from '@shared/data-core'; //, Requestor, Config\nimport { Intercom } from '../intercom/intercom.service';\nimport { merge } from 'lodash-es';\n//import { captureException, init, sessionURL, getSessionURL, identify } from 'logrocket';\n//const LogRocket = require('logrocket');\n@Injectable()\nexport class Track {\n  constructor(protected network: Network, protected push: Push, protected session: Session, protected localStorage: LocalStorage, protected authentication: Authentication, protected coreConfig: CoreConfig, protected config: Config, protected log: Log, protected injector: Injector, protected intercom: Intercom) {\n    this.loadAnalytics();\n    //this.loadLogRocket();\n    //this.loadSessionStack();\n  }\n\n  isEnabled(forceLoggedIn: boolean = true, ignoreE2E: boolean = false) {\n    if (this.network.isOffline()) {\n      return false;\n    }\n    if (this.coreConfig.isLocalhost() && !this.coreConfig.isCordova()) {\n      return false;\n    }\n    if (this.coreConfig.getMode() !== 'prod') {\n      return false;\n    }\n    if (this.config.isE2E && !ignoreE2E) {\n      return false;\n    }\n    if (forceLoggedIn && !this.authentication.isLoggedIn()) {\n      return false;\n    }\n    if (this.session.user && this.session.user.disableTracking) {\n      return false;\n    }\n    return true;\n  }\n\n  // loadLogRocket() {\n  //   if (this.isEnabled(false)) {\n  //     try {\n  //       LogRocket.init(this.coreConfig.getKey('logrocketId'), {\n  //         dom: {\n  //           baseHref: this.coreConfig.getCssPublicUrl()\n  //         }\n  //       });\n  //     } catch (error) { }\n  //   }\n  // }\n\n  loadSessionStack() {\n    return new Promise((resolve, reject) => {\n      try {\n        if (!window['SessionStack'] && this.isEnabled(false, true)) {\n          if (this.coreConfig.isIOS() && this.coreConfig.isCordova()) {\n            Object.defineProperty(window.document, 'cookie', {\n              enumerable: true,\n              configurable: true,\n              get: () => {\n                return this.localStorage.get('document-cookie');\n              },\n              set: cookieString => {\n                let cookie = this.localStorage.get('document-cookie');\n                if (cookie) {\n                  let cookies = cookie.split('; ');\n                  let name = cookieString.split('=')[0];\n                  cookies = cookies.filter(c => c.indexOf(name + '=') < 0);\n                  cookies.push(cookieString.trim());\n                  cookie = cookies.join('; ');\n                } else {\n                  cookie = cookieString;\n                }\n                this.localStorage.set('document-cookie', cookie);\n              }\n            });\n          }\n\n          window['SessionStackKey'] = 'SessionStack';\n          window['SessionStack'] = window['SessionStack'] || {\n            t: this.coreConfig.isIonic() ? this.coreConfig.getKey('sessionStackMobile') : this.coreConfig.getKey('sessionStackWeb'),\n            q: []\n          };\n          ['start', 'stop', 'identify', 'getSessionId', 'log', 'setOnDataCallback'].forEach(key => {\n            window['SessionStack'][key] =\n              window['SessionStack'][key] ||\n              function() {\n                window['SessionStack'].q.push([key].concat([].slice.call(arguments, 0)));\n              };\n          });\n          let f = document.createElement('script');\n          f.async = !0;\n          f.src = 'https://cdn.sessionstack.com/sessionstack.js';\n          f.onload = () => {\n            resolve(true);\n          };\n          f.onerror = err => {\n            reject(err);\n          };\n          let g = document.getElementsByTagName('script')[0];\n          g.parentNode.insertBefore(f, g);\n        } else {\n          resolve(false);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  // sendLogRocketError(err) {\n  //   try {\n  //     if (this.isEnabled(false)) {\n  //       LogRocket.captureException(err);\n  //     }\n  //   } catch (err) { }\n  // }\n\n  // getLogRocketSessionUrl() {\n  //   try {\n  //     return LogRocket.sessionURL;\n  //   } catch (error) { }\n  //   return '';\n  // }\n\n  getSessionStackSession(): Promise<string> {\n    return new Promise(resolve => {\n      if (window['SessionStack']) {\n        window['SessionStack'].getSessionId(sessionId => {\n          this.log.log('SessionStack sessionid', sessionId);\n          resolve(sessionId);\n        });\n      } else {\n        resolve(null);\n      }\n    });\n  }\n\n  getSessionStackUrl(): any {\n    return 'https://app.sessionstack.com/player/#/sessions/';\n  }\n\n  sendSessionStackError(err) {\n    // try {\n    //   if (this.isEnabled(false) && window['SessionStack']) {\n    //     window['SessionStack'].log(err);\n    //   }\n    // } catch (err) { }\n  }\n\n  loadAnalytics() {\n    if (!this.isEnabled(false)) {\n      return;\n    }\n    let analytics = (window.analytics = window.analytics || []);\n    if (!analytics.initialize) {\n      if (analytics.invoked) {\n        this.log.error('Segment snippet included twice.');\n      } else {\n        analytics.invoked = !0;\n        analytics.methods = ['trackSubmit', 'trackClick', 'trackLink', 'trackForm', 'pageview', 'identify', 'reset', 'group', 'track', 'ready', 'alias', 'debug', 'page', 'once', 'off', 'on'];\n        analytics.factory = function(tt) {\n          return function() {\n            let e = Array.prototype.slice.call(arguments);\n            e.unshift(tt);\n            analytics.push(e);\n            return analytics;\n          };\n        };\n        for (let t = 0; t < analytics.methods.length; t++) {\n          let e = analytics.methods[t];\n          analytics[e] = analytics.factory(e);\n        }\n        analytics.load = function(t) {\n          let e = document.createElement('script');\n          e.type = 'text/javascript';\n          e.async = !0;\n          e.src = ('https:' === document.location.protocol ? 'https://' : 'http://') + 'cdn.segment.com/analytics.js/v1/' + t + '/analytics.min.js';\n          let n = document.getElementsByTagName('script')[0];\n          n.parentNode.insertBefore(e, n);\n        };\n        analytics.SNIPPET_VERSION = '4.0.0';\n        analytics.load(this.config.serverName === 'Production' ? this.coreConfig.getKey('segmentApiWriteKey') : this.coreConfig.getKey('segmentApiWriteKeyDev'));\n        analytics.page();\n\n        // LogRocket.getSessionURL(url => {\n        //   analytics.track('LogRocket', { sessionURL: url });\n        //   this.intercom.trackEvent('LogRocket', { sessionURL: url });\n        // });\n      }\n    }\n  }\n\n  track(event: string, properties?: Object): void {\n    if (!event || event === '') {\n      return;\n    }\n    event = event\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n      .join(' ');\n    if (this.session.debugEvent) {\n      this.log.log('EVENT', event, properties);\n    }\n    if (this.isEnabled() && window.analytics) {\n      try {\n        window.analytics.track(event, merge(this.globalTrackedProps(this.session.user), properties));\n      } catch (error) {}\n    }\n  }\n\n  page(name: string, category?: string, properties?: any) {\n    if (this.isEnabled() && window.analytics) {\n      try {\n        window.analytics.page(category, name, merge(this.globalTrackedProps(this.session.user), properties));\n      } catch (error) {}\n    }\n  }\n\n  identify(user: User) {\n    if (!user) {\n      return;\n    }\n    setTimeout(() => {\n      if (this.isEnabled()) {\n        // try {\n        // let traits = {\n        //   avatar: user.imageData || '',\n        //   email: user.email || user.username || '',\n        //   firstName: user.firstName || '',\n        //   lastName: user.lastName || '',\n        //   createdAt: user._ect || '',\n        //   phone: user.telephone || '',\n        //   gender: user.gender || '',\n        //   device: user.device || '',\n        //   target: this.coreConfig.getFullAppName(),\n        //   language: user.language || ''\n        // };\n        //   LogRocket.identify(user._id, traits);\n        // } catch (error) { }\n        if (window.analytics) {\n          try {\n            let segment_traits = {\n              user_id: user._id || '',\n              user_tags: user.tags || '',\n              email: user.email || user.username || '',\n              operating_system: this.coreConfig.getPlatform(),\n              avatar: user.imageData || '',\n              phone: user.telephone || '',\n              gender: user.gender || '',\n              target: this.coreConfig.getFullAppName(),\n              version: this.coreConfig.getAppVersion(),\n              is_dark_theme: Colors.isDarkTheme()\n            };\n            window.analytics.identify(user._id, merge(this.globalTrackedProps(user), segment_traits));\n          } catch (error) {}\n        }\n        // this.loadSessionStack().then(success => {\n        //   if (success && window['SessionStack']) {\n        //     //&& !(this.coreConfig.isIOS() && this.coreConfig.isCordova())\n        //     try {\n        //       this.log.log('SessionStack: identify');\n        //       window['SessionStack'].identify({\n        //         userId: user._id || '',\n        //         email: user.email || user.username || '',\n        //         displayName: User.getDisplayName(user),\n        //         // Add your own custom user variables here.\n        //         user_tags: user.tags || '',\n        //         operating_system: this.coreConfig.getPlatform(),\n        //         avatar: user.imageData || '',\n        //         phone: user.telephone || '',\n        //         gender: user.gender || '',\n        //         target: this.coreConfig.getFullAppName(),\n        //         version: this.coreConfig.getAppVersion();\n        //         is_dark_theme: Colors.isDarkTheme()\n        //       });\n        //       setTimeout(() => {\n        //         this.getSessionStackSession().then(sessionId => {\n        //           let sessionstackURL = this.getSessionStackUrl() + (sessionId || 'notfound');\n        //           this.log.log('SessionStack: link to intercom', sessionstackURL);\n        //           this.intercom.update({\n        //             sessionstackURL: sessionstackURL\n        //           });\n        //         });\n        //       }, 2000);\n        //     } catch (error) { }\n        //   }\n        // });\n      }\n      this.intercom.identify(user);\n      setTimeout(() => {\n        if (window && window['FS'] && window['FS'].getCurrentSessionURL) {\n          let fullstoryURL = window['FS'].getCurrentSessionURL();\n          this.intercom.update({\n            fullstoryURL: fullstoryURL\n          });\n        }\n      }, 2000);\n    }, 3000);\n  }\n\n  intercomRegisterForPush() {\n    this.intercom.registerForPush();\n  }\n\n  globalTrackedProps(user: User) {\n    let props = {\n      user_groups: this.authentication.isAdmin() ? [] : this.session.groups,\n      user_username: user.username || '',\n      user_firstname: user.firstName || '',\n      user_lastname: user.lastName || '',\n      user_language: user.language || '',\n      user_company_name: user.company || '',\n      user_tenant: user._tenant ? user._tenant.name : null,\n      user_role: user.role || '',\n      user_roles: this.session.roles || [],\n      user_environment: this.config.serverName.toUpperCase()\n    };\n    try {\n      let router: Router;\n      router = this.injector.get(Router);\n      props = merge(props, { page: router.url });\n    } catch (err) {}\n    return props;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Requestor, Config } from '@shared/data-core';\n\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TwilioToken {\n  constructor(private rq: Requestor, private config: Config) {}\n\n  getToken(): any {\n    return this.rq.get(this.config.apiUrl + 'Twilio/getToken').pipe(\n      map(ret => {\n        return ret.TwilioVideoToken;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Session, User } from '@shared/data-core';\nimport { Log, CoreConfig } from '@shared/common';\nimport { showAlert, closeModal } from '@shared/stencil';\nimport { VxtConferenceConfig, WebRTCConstraints, ScreenShareOptions } from '../../interfaces/voxeet/voxeet.interface';\nimport { Translate } from '@shared/translate';\n\nimport VoxeetSdk from '@voxeet/voxeet-web-sdk';\nimport { Pubnub } from '../pubnub/pubnub.service';\nimport { isFunction } from 'lodash-es';\n\n@Injectable()\nexport class VideoCall {\n  protected isInit: boolean;\n  private voxeet: VoxeetSdk;\n  private voxeetUserId: string;\n  private userInfo: any;\n  private videoModal: HTMLYooIonModalElement;\n  private videoToast: HTMLYooToastElement;\n  private constraints = {\n    audio: true,\n    video: {\n      width: { ideal: 4096 },\n      height: { ideal: 2160 }\n    }\n  };\n  constructor(protected session: Session, protected log: Log, protected coreConfig: CoreConfig, protected pubnub: Pubnub, protected translate: Translate) {}\n\n  useCordova() {\n    return this.coreConfig.isCordova() && window['Voxeet'];\n  }\n\n  init() {\n    if (!this.isInit) {\n      this.isInit = true;\n      this.onInitUserInfo();\n      if (this.useCordova() && window['Voxeet']) {\n        this.onInitCordova();\n      } else {\n        this.onInitWeb();\n      }\n    } else {\n      this.reconnect();\n    }\n    return Promise.resolve();\n  }\n\n  onInitUserInfo(): void {\n    if (this.session && this.session.user) {\n      this.userInfo = this.convertUserInfo(this.session.user);\n    } else {\n      this.userInfo = this.convertUserInfo();\n    }\n  }\n\n  convertUserInfo(\n    user?: User\n  ): {\n    name: string;\n    externalId: string;\n    avatarUrl: string;\n  } {\n    let userId = '';\n    let userName = '';\n    let imageData = '';\n    if (user) {\n      if (user._id) {\n        userId = user._id;\n      }\n      if (User.getDisplayName(user)) {\n        userName = User.getDisplayName(user);\n      }\n      if (user.imageData) {\n        imageData = user.imageData;\n      }\n    }\n    return {\n      name: userName,\n      externalId: userId,\n      avatarUrl: imageData\n    };\n  }\n\n  onInitCordova(): void {\n    this.voxeet = window['Voxeet'];\n    if (this.voxeet) {\n      this.voxeet\n        .initialize(this.coreConfig.getKey('voxeetKey'), this.coreConfig.getKey('voxeetSecret'))\n        .then(myUserId => {\n          this.voxeetUserId = myUserId;\n          this.log.log('voxeet is init for cordova:', this.voxeetUserId);\n          this.voxeet.appearMaximized(true);\n        })\n        .then(() => {\n          this.log.log('appearMaximized');\n          this.voxeet.defaultBuiltInSpeaker(true);\n        })\n        .then(() => {\n          this.log.log('defaultBuiltInSpeaker');\n          this.voxeet.defaultVideo(true);\n        })\n        .then(() => {\n          this.log.log('defaultVideo');\n          this.voxeet.connect(this.getUserInfo());\n        })\n        .then(() => {\n          this.log.log('voxeet connected');\n        });\n    }\n  }\n\n  onInitWeb(): void {\n    this.voxeet = new VoxeetSdk();\n    if (this.voxeet) {\n      return this.voxeet\n        .initialize(this.coreConfig.getKey('voxeetKey'), this.coreConfig.getKey('voxeetSecret'), this.getUserInfo())\n        .then(myUserId => {\n          this.voxeetUserId = myUserId;\n          this.log.log('voxeet is init for web:', this.voxeetUserId);\n        })\n        .catch(error => {\n          this.log.error(error);\n        });\n    }\n  }\n\n  getUserInfo(): any {\n    if (this.useCordova()) {\n      return new window['UserInfo'](this.userInfo.externalId, this.userInfo.name, this.userInfo.avatarUrl);\n    } else {\n      return this.userInfo;\n    }\n  }\n\n  createConference(alias: string) {\n    if (this.useCordova()) {\n      return this.voxeet.create({ conferenceAlias: alias, params: { videoCodec: 'H264' } });\n    } else {\n      return this.voxeet.createConference({ alias });\n    }\n  }\n\n  joinConference(conf: any, options?: VxtConferenceConfig) {\n    if (this.useCordova()) {\n      return this.voxeet.join(conf.conferenceId ? conf.conferenceId : conf);\n    } else {\n      return this.voxeet.joinConference(\n        conf.conferenceId ? conf.conferenceId : conf,\n        options || {\n          constraints: { video: true, audio: true },\n          user: {\n            name: User.getDisplayName(this.session.user),\n            externalId: this.session.userId,\n            avatarUrl: this.session.user.imageData\n          },\n          audio3D: true,\n          conference: { params: { videoCodec: 'H264', liveRecording: true } }\n        }\n      );\n    }\n  }\n\n  hasWebCam(): Promise<boolean> {\n    if (window && window.navigator) {\n      let mediaDevices = window.navigator.mediaDevices as any;\n      mediaDevices.getMedia = mediaDevices.getUserMedia || mediaDevices.webkitGetUserMedia || mediaDevices.mozGetUserMedia || mediaDevices.msGetUserMedia;\n      return new Promise<boolean>((resolve, reject) => {\n        mediaDevices.getMedia({ video: true }).then(\n          () => {\n            resolve(true);\n          },\n          () => resolve(false)\n        );\n      });\n    } else {\n      return Promise.resolve(false);\n    }\n  }\n\n  hasMicrophone(): Promise<boolean> {\n    if (window && window.navigator) {\n      let mediaDevices = window.navigator.mediaDevices as any;\n      mediaDevices.getMedia = mediaDevices.getUserMedia || mediaDevices.webkitGetUserMedia || mediaDevices.mozGetUserMedia || mediaDevices.msGetUserMedia;\n      return new Promise<boolean>((resolve, reject) => {\n        mediaDevices.getMedia({ audio: true }).then(\n          () => {\n            resolve(true);\n          },\n          () => resolve(false)\n        );\n      });\n    } else {\n      return Promise.resolve(false);\n    }\n  }\n\n  getConstraint(): { video: any; audio: any } {\n    let constraints: any = this.constraints;\n    let camPromise = this.hasWebCam();\n    let micPromise = this.hasMicrophone();\n    camPromise.then(hasCam => {\n      if (!hasCam) {\n        constraints.video = false;\n      }\n    });\n    micPromise.then(hasMic => {\n      if (!hasMic) {\n        constraints.audio = false;\n      }\n    });\n    return constraints;\n  }\n\n  inviteParticipants(conferenceId: string, externalIds: Array<User>): void {\n    if (this.useCordova()) {\n      return this.voxeet.invite(\n        conferenceId,\n        externalIds.map(user => {\n          let userInfo = this.convertUserInfo(user);\n          return new window['UserInfo'](userInfo.externalId, userInfo.name, userInfo.avatarUrl);\n        })\n      );\n    } else {\n      return this.voxeet.invite(conferenceId, externalIds.map(user => user._id));\n    }\n  }\n\n  leaveConference(leaveRoom: boolean = true) {\n    if (this.useCordova()) {\n      return this.voxeet.leave();\n    } else {\n      return this.voxeet.leaveConference(leaveRoom);\n    }\n  }\n\n  addListener(event: string, handler: Function) {\n    if (!this.useCordova() && event && handler) {\n      this.voxeet.on(event, handler);\n    }\n  }\n\n  removeListener(event: string, handler: Function) {\n    if (!this.useCordova() && event && handler) {\n      this.voxeet.removeListener(event, handler);\n    }\n  }\n\n  removeAllListeners(): Promise<any> {\n    if (this.voxeet && this.voxeet.removeAllListeners) {\n      return this.voxeet.removeAllListeners();\n    }\n    return Promise.resolve();\n  }\n\n  getUserId() {\n    return this.voxeetUserId;\n  }\n\n  startVideo(userId?: string, constraints?: WebRTCConstraints) {\n    if (!this.useCordova()) {\n      return this.voxeet.startVideoForUser(userId || this.getUserId(), constraints || this.constraints);\n    }\n  }\n\n  stopVideo(userId?: string) {\n    if (!this.useCordova()) {\n      return this.voxeet.stopVideoForUser(userId || this.getUserId());\n    }\n  }\n\n  startAudio(userId?: string) {\n    if (!this.useCordova()) {\n      return this.voxeet.startAudioForUser(userId || this.getUserId());\n    }\n  }\n\n  stopAudio(userId?: string) {\n    if (!this.useCordova()) {\n      return this.voxeet.stopAudioForUser(userId || this.getUserId());\n    }\n  }\n\n  muteUser(isMuted: boolean, userId?: string): void {\n    if (!this.useCordova()) {\n      return this.voxeet.muteUser(userId || this.getUserId(), isMuted);\n    }\n  }\n\n  toggleMute(userId?: string) {\n    if (!this.useCordova()) {\n      return this.voxeet.toggleMute(userId || this.getUserId());\n    }\n  }\n\n  setUserPosition(userId: string, x: number, y: number) {\n    if (!this.useCordova()) {\n      return this.voxeet.setUserPosition(userId, x, y);\n    }\n  }\n\n  getCurrentSession() {\n    if (!this.useCordova()) {\n      return this.voxeet;\n    } else {\n      return this.voxeet;\n    }\n  }\n\n  getEnumerateAudioDevices(option?: string): Promise<any> {\n    if (!this.useCordova()) {\n      return this.voxeet.enumerateAudioDevices(option);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  getEnumerateVideoDevices(): Promise<any> {\n    if (!this.useCordova()) {\n      return this.voxeet.enumerateVideoDevices();\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  selectAudioInput(deviceId: string, constraints?: {}): Promise<any> {\n    return this.voxeet.selectAudioInput(deviceId, constraints);\n  }\n\n  selectAudioOutput(deviceId: string, constraints?: {}): Promise<any> {\n    return this.voxeet.selectAudioOutput(deviceId, constraints);\n  }\n\n  selectVideoInput(deviceId: string, constraints?: {}): Promise<any> {\n    return this.voxeet.selectVideoInput(deviceId, constraints);\n  }\n\n  startVideoForUser(userId: string, constraints?: {}): Promise<any> {\n    return this.voxeet.startVideoForUser(userId, constraints);\n  }\n\n  stopVideoForUser(userId: string, constraints?: {}): Promise<any> {\n    return this.voxeet.stopVideoForUser(userId, constraints);\n  }\n\n  startAudioForUser(userId: string, constraints?: {}): Promise<any> {\n    return this.voxeet.startAudioForUser(userId, constraints);\n  }\n\n  stopAudioForUser(userId: string, constraints?: {}): Promise<any> {\n    return this.voxeet.stopAudioForUser(userId, constraints);\n  }\n\n  startScreenShare(options: Array<ScreenShareOptions>): Promise<any> {\n    return this.voxeet.startScreenShare(options);\n  }\n\n  stopScreenShare(): Promise<any> {\n    return this.voxeet.stopScreenShare();\n  }\n\n  startRecording(): Promise<any> {\n    return this.voxeet.startRecording();\n  }\n\n  stopRecording(): Promise<any> {\n    return this.voxeet.stopRecording();\n  }\n\n  replayRecording(conferenceId: string, offset?: any): Promise<any> {\n    if (conferenceId && this.voxeet && this.voxeet.replayConference) {\n      return this.voxeet.replayConference(conferenceId, offset || 0);\n    } else {\n      return Promise.reject('ConferenceId is not provided');\n    }\n  }\n\n  shareVideo(url: string): Promise<any> {\n    return this.voxeet.videoPresentation.start(url);\n  }\n\n  updateMediaSettings(settings: { microphone: MediaDeviceInfo; video: MediaDeviceInfo }): Array<Promise<any>> {\n    let promises: any = [];\n    let microphone = settings.microphone;\n    let video = settings.video;\n    if (microphone && microphone.deviceId) {\n      promises.push(this.selectAudioInput(microphone.deviceId));\n    }\n    if (video && video.deviceId) {\n      promises.push(this.selectVideoInput(video.deviceId));\n    }\n    if (promises.length < 1) {\n      promises.push(Promise.resolve());\n    }\n    return promises;\n  }\n\n  sendChatMessage(users: Array<User>, roomName: string, conferenceId: string): void {\n    let others = users.filter(user => user._id !== this.session.userId);\n    if (others) {\n      this.inviteParticipants(conferenceId, others);\n      others\n        .map(user => user._id)\n        .forEach(userId => {\n          this.pubnub.sendChatMessage(userId, this.translate.get('VIDEOCALLCALLING', { user: User.getDisplayName(this.session.user) }), userId, null, null, null, 'videocall', { conferenceId, user: this.session.user, users });\n        });\n    }\n  }\n\n  disconnect(): void {\n    if (this.voxeet && isFunction(this.voxeet.disconnect)) {\n      this.isInit = false;\n      this.voxeet.disconnect().then(() => {\n        this.log.log('voxeet disconnected');\n      });\n    }\n  }\n\n  reconnect(): void {\n    if (this.useCordova()) {\n      this.voxeet.connect(this.getUserInfo());\n    }\n  }\n\n  sendRecordedConferenceId(currentMessage: string, channel) {\n    if (currentMessage && channel && channel.others && channel.others[0] && channel.others[0]._id) {\n      this.pubnub.sendChatMessage(channel.channel, currentMessage, channel.others[0]._id, null, <any>channel, {}, 'conference');\n    }\n  }\n\n  showNoWebCamAlert(): void {\n    showAlert(this.translate.get('NOWEBCAM'), [this.translate.get('OK')], null, '');\n  }\n\n  showFailedConnectAlert(): void {\n    showAlert(this.translate.get('CONFERENCEFAILED'), [this.translate.get('OK')], null, '');\n  }\n\n  showCallerLeftAlert(): Promise<any> {\n    return showAlert('', [this.translate.get('OK')], '', this.translate.get('CALLERLEFT'));\n  }\n\n  showRecieverLeft(): Promise<any> {\n    return showAlert('', [this.translate.get('OK')], '', this.translate.get('RECIEVERLEFT'));\n  }\n\n  showRecordCompleteAlert(): Promise<any> {\n    return showAlert('', [this.translate.get('OK')], '', this.translate.get('CALLRECORDED'));\n  }\n\n  setVideoToast(toast: HTMLYooToastElement): void {\n    this.videoToast = toast;\n  }\n\n  setVideoModal(modal: HTMLYooIonModalElement): void {\n    this.videoModal = modal;\n  }\n\n  closeVideoModal(): void {\n    if (this.videoModal) {\n      closeModal(this.videoModal);\n      this.videoModal = null;\n    }\n  }\n\n  dismissVideoToast(): void {\n    if (this.videoToast) {\n      this.videoToast.dismiss();\n      this.videoToast = null;\n    }\n  }\n\n  onSendDeclineMessage(data: any): void {\n    if (data && data.options && data.sender_id) {\n      this.pubnub.sendChatMessage(data.sender_id, this.translate.get('VIDEOCALLCANCEL', { user: User.getDisplayName(this.session.user) }), this.session.user._id, null, null, null, 'videocallcancel', { declineCall: true });\n    }\n  }\n\n  onSendCancelNotificationMessage(users: Array<User>, conferenceId: string): void {\n    let others = users.filter(user => user._id !== this.session.userId);\n    if (others) {\n      others\n        .map(user => user._id)\n        .forEach(userId => {\n          this.pubnub.sendChatMessage(userId, this.translate.get('VIDEOCALLCANCEL', { user: User.getDisplayName(this.session.user) }), userId, null, null, null, 'videocallcancel', { cancelCall: true });\n        });\n    }\n  }\n\n  onReceiveDeclineMessage(data: any) {\n    if (data && data.options && data.sender_id && this.session.user._id) {\n      if (data.options.declineCall && data.sender_id !== this.session.user._id) {\n        showAlert('', [this.translate.get('OK')], '', this.translate.get('USERDECLINECALL')).then(res => {\n          this.closeVideoModal();\n        });\n      } else if (data.options.cancelCall) {\n        this.dismissVideoToast();\n      }\n    }\n  }\n}\n","import { Injectable, NgZone, ErrorHandler } from '@angular/core';\nimport { Log, CoreConfig } from '@shared/common';\nimport { Config } from '@shared/data-core';\nimport { Track } from '../track/track.service';\n\nimport * as Sentry from '@sentry/browser';\n\n@Injectable()\nexport class SentryErrorHandler implements ErrorHandler {\n  public static disabledErrorMessages: Array<string> = [\"Cannot read property 'disconnect' of null\", 'PubNub call failed', 'PubNub call failed, check status for details', \"InvalidStateError: Failed to execute 'transaction'\", 'Loading chunk', \"You provided 'undefined' where a stream was expected\", \"Cannot read property 'value' of undefined\", 'Uncaught (in promise): OK', 'Uncaught (in promise): Error: Timeout', 'NS_ERROR_NOT_INITIALIZED', 'Error: No available storage method found'];\n\n  constructor(private log: Log, private zone: NgZone, private trackService: Track, protected coreConfig: CoreConfig, protected config: Config) {\n    if (this.isEnabled()) {\n      try {\n        let currentEnv = this.config.getCurrentConfig().initialSelection;\n        this.zone.runOutsideAngular(() => {\n          let options = {\n            dsn: this.coreConfig.getKey('sentryClientKey'),\n            release: this.coreConfig.getAppVersion(),\n            environment: (currentEnv ? currentEnv._id : '') || 'prod'\n          };\n          Sentry.init(options);\n        });\n      } catch (err) {\n        this.log.error(err);\n      }\n    }\n  }\n\n  isEnabled() {\n    return this.coreConfig.getMode() === 'prod' && this.coreConfig.getKey('sentryClientKey') && this.coreConfig.getKey('sentryClientKey').length > 0; //\n  }\n\n  handleError(err: any): void {\n    let disabled = false;\n    SentryErrorHandler.disabledErrorMessages.forEach(m => {\n      if (err && err.message && err.message.indexOf(m) >= 0) {\n        disabled = true;\n      }\n    });\n    if (disabled) {\n      return;\n    }\n    if (err && this.isEnabled()) {\n      try {\n        Sentry.captureException(err.originalError || err);\n      } catch (e) {}\n      //this.trackService.sendLogRocketError(err.originalError || err);\n      //this.trackService.sendSessionStackError(err.originalError || err);\n      this.trackService.track('App Crash', { error: err.originalError || err });\n      this.log.error(err.originalError || err);\n    } else if (err && this.coreConfig.getMode() === 'dev') {\n      this.log.error(err);\n    }\n  }\n\n  identify(id, email, username) {\n    if (this.isEnabled() && id) {\n      try {\n        this.trackService.getSessionStackSession().then(session_id => {\n          Sentry.configureScope(scope => {\n            scope.setUser({ email, username, id });\n            scope.addEventProcessor(async event => {\n              event.contexts = event.contexts || {};\n              event.contexts.sessionstack = {\n                session_id: session_id,\n                timestamp: new Date().getTime()\n              };\n              event.extra = event.extra || {};\n              //event.extra.sessionstackUrl = this.trackService.getSessionStackUrl() + session_id;\n              if (window && window['FS'] && window['FS'].getCurrentSessionURL) {\n                event.extra.fullstoryUrl = window['FS'].getCurrentSessionURL();\n              }\n              return event;\n            });\n          });\n        });\n      } catch (e) {}\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\n\nimport { DataCoreModule } from '@shared/data-core';\n//import { DATA_LIVE_PROVIDERS } from './services';\nimport { Channel } from './services/channel/channel.service';\nimport { Intercom } from './services/intercom/intercom.service';\nimport { WebIntercom } from './services/intercom/web-intercom.service';\nimport { Messages } from './services/messages/messages.service';\nimport { Pubnub } from './services/pubnub/pubnub.service';\nimport { Track } from './services/track/track.service';\nimport { TwilioToken } from './services/twilio-token/twilio-token.service';\nimport { VideoCall } from './services/video-call/video-call.service';\nimport { SentryErrorHandler } from './services/sentry-error-handler/sentry-error-handler.service';\n\nimport { Intercom as IntercomNative } from '@ionic-native/intercom/ngx';\n\n@NgModule({\n  declarations: [],\n  imports: [DataCoreModule],\n  exports: [DataCoreModule]\n})\nexport class DataLiveModule {\n  static forRoot(configuredProviders: Array<Provider> = []): ModuleWithProviders {\n    return {\n      ngModule: DataLiveModule,\n      providers: [...configuredProviders, Channel, Intercom, IntercomNative, Messages, Pubnub, SentryErrorHandler, Track, TwilioToken, VideoCall, WebIntercom]\n    };\n  }\n}\n","import { Entity, IAcl, User, Model, Editable, Searchable, FORM_FILES_IMAGE_FILTER, getGroupsTransform } from '@shared/data-core';\nimport { FormFieldType } from '@shared/stencil';\n\n@Model({\n  className: 'Channels',\n  collectionName: 'channels',\n  fields: ['*'],\n  include: ['users']\n})\nexport class Channels extends Entity {\n  // export class Channels implements IEntity {\n  _id: string;\n  _acl: IAcl;\n  _lmt?: string;\n  _ect?: string;\n\n  channel: string;\n\n  @Editable('Channels', { required: true, type: FormFieldType.text })\n  @Searchable('Channels')\n  name: string;\n\n  @Editable('Channels', {\n    type: FormFieldType.autocomplete,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    collectionName: 'files',\n    title: 'BACKGROUND',\n    required: false,\n    columnDefinition: { name: '_downloadURL' }\n  })\n  background: any;\n\n  @Editable('Channels', {\n    title: 'GROUPS',\n    flex: 100,\n    required: true,\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false\n  })\n  group: string;\n\n  @Editable('Channels', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    collectionName: 'user',\n    clearable: true,\n    multiple: true,\n    columnDefinition: { name: 'username' }\n  })\n  users: Array<User>;\n\n  others: Array<User>;\n\n  lastMessage: any;\n  lastMessageAlternate: boolean;\n  lastMessageDate?: any;\n\n  deleteMessages: Array<any>;\n}\n","import { MessageInterface } from './message.interface';\nimport { Entity, IAcl, Model, Editable, Searchable } from '@shared/data-core';\nimport { FormFieldType } from '@shared/stencil';\n\n@Model({\n  className: 'Message',\n  collectionName: 'messages',\n  fields: ['*', 'from.imageData', 'from.username', 'from.email'],\n  include: ['from']\n})\nexport class Message extends Entity implements MessageInterface {\n  _id?: string;\n  _acl?: IAcl;\n  _lmt?: string;\n  _ect?: string;\n\n  @Editable('Message', {\n    title: 'TO',\n    type: FormFieldType.emailreport,\n    required: true,\n    showUsers: true\n  })\n  @Searchable('Message')\n  to: Array<string>;\n\n  @Editable('Message', { title: 'SUBJECT', required: true, type: FormFieldType.text })\n  @Searchable('Message')\n  title: string;\n\n  @Editable('Message', { title: 'BODY', required: true, type: FormFieldType.textarea })\n  body: string;\n\n  // @Editable('Message', { title: 'FOOTER', type: FormFieldType.textarea })\n  // footer: string;\n\n  actionURL: string;\n  actionText: string;\n\n  @Editable('Message', { title: 'THANKYOU', type: FormFieldType.text })\n  thankyou: string;\n}\n"]}