/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule as AngularCommonModule, registerLocaleData } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { Translate } from './services/translate/translate.service';
import { TranslatePipe } from './pipes/translate/translate.pipe';
var TranslateModule = /** @class */ (function () {
    function TranslateModule() {
    }
    /**
     * @param {?=} configuredProviders
     * @return {?}
     */
    TranslateModule.forRoot = /**
     * @param {?=} configuredProviders
     * @return {?}
     */
    function (configuredProviders) {
        if (configuredProviders === void 0) { configuredProviders = []; }
        return {
            ngModule: TranslateModule,
            providers: tslib_1.__spread([Translate], configuredProviders)
        };
    };
    TranslateModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [TranslatePipe],
                    imports: [AngularCommonModule, HttpClientModule],
                    exports: [TranslatePipe]
                },] }
    ];
    return TranslateModule;
}());
export { TranslateModule };
import localeEnGB from '@angular/common/locales/en-GB';
import localeEnGBExtra from '@angular/common/locales/extra/en';
registerLocaleData(localeEnGB, 'en-GB', localeEnGBExtra);
import localeFr from '@angular/common/locales/fr';
import localeFrExtra from '@angular/common/locales/extra/fr';
registerLocaleData(localeFr, 'fr-FR', localeFrExtra);
import localeDe from '@angular/common/locales/de';
import localeDeExtra from '@angular/common/locales/extra/de';
registerLocaleData(localeDe, 'de-DE', localeDeExtra);
import localeEs from '@angular/common/locales/es';
import localeEsExtra from '@angular/common/locales/extra/es';
registerLocaleData(localeEs, 'es-ES', localeEsExtra);
import localeNl from '@angular/common/locales/nl';
import localeNlExtra from '@angular/common/locales/extra/nl';
registerLocaleData(localeNl, 'nl-NL', localeNlExtra);
import localePl from '@angular/common/locales/pl';
import localePlExtra from '@angular/common/locales/extra/pl';
registerLocaleData(localePl, 'pl-PL', localePlExtra);
import localeIt from '@angular/common/locales/it';
import localeItExtra from '@angular/common/locales/extra/it';
registerLocaleData(localeIt, 'it-IT', localeItExtra);
import localeRu from '@angular/common/locales/ru';
import localeRuExtra from '@angular/common/locales/extra/ru';
registerLocaleData(localeRu, 'ru-RU', localeRuExtra);
import localeZhs from '@angular/common/locales/zh-Hans';
import localeZhsExtra from '@angular/common/locales/extra/zh-Hans';
registerLocaleData(localeZhs, 'zh-Hans', localeZhsExtra);
import localeZht from '@angular/common/locales/zh-Hant';
import localeZhtExtra from '@angular/common/locales/extra/zh-Hant';
registerLocaleData(localeZht, 'zh-Hant', localeZhtExtra);
import localePt from '@angular/common/locales/pt';
import localePtExtra from '@angular/common/locales/extra/pt';
registerLocaleData(localePt, 'pt-PT', localePtExtra);
registerLocaleData(localePt, 'pt-BR', localePtExtra);
import localeJa from '@angular/common/locales/ja';
import localeJaExtra from '@angular/common/locales/extra/ja';
registerLocaleData(localeJa, 'ja-JA', localeJaExtra);
import localeHe from '@angular/common/locales/he';
import localeHeExtra from '@angular/common/locales/extra/he';
registerLocaleData(localeHe, 'he-HE', localeHeExtra);
import localeAr from '@angular/common/locales/ar';
import localeArExtra from '@angular/common/locales/extra/ar';
registerLocaleData(localeAr, 'ar-AR', localeArExtra);
import localeTh from '@angular/common/locales/th';
import localeThExtra from '@angular/common/locales/extra/th';
registerLocaleData(localeTh, 'th-TH', localeThExtra);
import localeTr from '@angular/common/locales/tr';
import localeTrExtra from '@angular/common/locales/extra/tr';
registerLocaleData(localeTr, 'tr-TR', localeTrExtra);
import localeBg from '@angular/common/locales/bg';
import localeBgExtra from '@angular/common/locales/extra/bg';
registerLocaleData(localeBg, 'bg-BG', localeBgExtra);
import localeEl from '@angular/common/locales/el';
import localeElExtra from '@angular/common/locales/extra/el';
registerLocaleData(localeEl, 'el-EL', localeElExtra);
import localeSl from '@angular/common/locales/sl';
import localeSlExtra from '@angular/common/locales/extra/sl';
registerLocaleData(localeSl, 'sl-SL', localeSlExtra);
import localeSk from '@angular/common/locales/sk';
import localeSkExtra from '@angular/common/locales/extra/sk';
registerLocaleData(localeSk, 'sk-SK', localeSkExtra);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RyYW5zbGF0ZS8iLCJzb3VyY2VzIjpbImxpYi90cmFuc2xhdGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBaUMsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLFlBQVksSUFBSSxtQkFBbUIsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzFGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUVuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFFakU7SUFBQTtJQVlBLENBQUM7Ozs7O0lBTlEsdUJBQU87Ozs7SUFBZCxVQUFlLG1CQUF5QztRQUF6QyxvQ0FBQSxFQUFBLHdCQUF5QztRQUN0RCxPQUFPO1lBQ0wsUUFBUSxFQUFFLGVBQWU7WUFDekIsU0FBUyxvQkFBRyxTQUFTLEdBQUssbUJBQW1CLENBQUM7U0FDL0MsQ0FBQztJQUNKLENBQUM7O2dCQVhGLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxhQUFhLENBQUM7b0JBQzdCLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixFQUFFLGdCQUFnQixDQUFDO29CQUNoRCxPQUFPLEVBQUUsQ0FBQyxhQUFhLENBQUM7aUJBQ3pCOztJQVFELHNCQUFDO0NBQUEsQUFaRCxJQVlDO1NBUFksZUFBZTtBQVM1QixPQUFPLFVBQVUsTUFBTSwrQkFBK0IsQ0FBQztBQUN2RCxPQUFPLGVBQWUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMvRCxrQkFBa0IsQ0FBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0FBRXpELE9BQU8sUUFBUSxNQUFNLDRCQUE0QixDQUFDO0FBQ2xELE9BQU8sYUFBYSxNQUFNLGtDQUFrQyxD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QTRCLENBQUM7QUFDbEQsT0FBTyxhQUFhLE1BQU0sa0NBQWtDLENBQUM7QUFDN0Qsa0JBQWtCLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxhQUFhLENBQUMsQ0FBQztBQUVyRCxPQUFPLFFBQVEsTUFBTSw0QkFBNEIsQ0FBQztBQUNsRCxPQUFPLGFBQWEsTUFBTSxrQ0FBa0MsQ0FBQztBQUM3RCxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0FBRXJELE9BQU8sUUFBUSxNQUFNLDRCQUE0QixDQUFDO0FBQ2xELE9BQU8sYUFBYSxNQUFNLGtDQUFrQyxDQUFDO0FBQzdELGtCQUFrQixDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFFckQsT0FBTyxRQUFRLE1BQU0sNEJBQTRCLENBQUM7QUFDbEQsT0FBTyxhQUFhLE1BQU0sa0NBQWtDLENBQUM7QUFDN0Qsa0JBQWtCLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxhQUFhLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIGFzIEFuZ3VsYXJDb21tb25Nb2R1bGUsIHJlZ2lzdGVyTG9jYWxlRGF0YSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgVHJhbnNsYXRlIH0gZnJvbSAnLi9zZXJ2aWNlcy90cmFuc2xhdGUvdHJhbnNsYXRlLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGVQaXBlIH0gZnJvbSAnLi9waXBlcy90cmFuc2xhdGUvdHJhbnNsYXRlLnBpcGUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtUcmFuc2xhdGVQaXBlXSxcbiAgaW1wb3J0czogW0FuZ3VsYXJDb21tb25Nb2R1bGUsIEh0dHBDbGllbnRNb2R1bGVdLFxuICBleHBvcnRzOiBbVHJhbnNsYXRlUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRlTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlndXJlZFByb3ZpZGVyczogQXJyYXk8UHJvdmlkZXI+ID0gW10pOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFRyYW5zbGF0ZU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1RyYW5zbGF0ZSwgLi4uY29uZmlndXJlZFByb3ZpZGVyc11cbiAgICB9O1xuICB9XG59XG5cbmltcG9ydCBsb2NhbGVFbkdCIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2VuLUdCJztcbmltcG9ydCBsb2NhbGVFbkdCRXh0cmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZXh0cmEvZW4nO1xucmVnaXN0ZXJMb2NhbGVEYXRhKGxvY2FsZUVuR0IsICdlbi1HQicsIGxvY2FsZUVuR0JFeHRyYSk7XG5cbmltcG9ydCBsb2NhbGVGciBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9mcic7XG5pbXBvcnQgbG9jYWxlRnJFeHRyYSBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9leHRyYS9mcic7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlRnIsICdmci1GUicsIGxvY2FsZUZyRXh0cmEpO1xuXG5pbXBvcnQgbG9jYWxlRGUgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZGUnO1xuaW1wb3J0IGxvY2FsZURlRXh0cmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZXh0cmEvZGUnO1xucmVnaXN0ZXJMb2NhbGVEYXRhKGxvY2FsZURlLCAnZGUtREUnLCBsb2NhbGVEZUV4dHJhKTtcblxuaW1wb3J0IGxvY2FsZUVzIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2VzJztcbmltcG9ydCBsb2NhbGVFc0V4dHJhIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2V4dHJhL2VzJztcbnJlZ2lzdGVyTG9jYWxlRGF0YShsb2NhbGVFcywgJ2VzLUVTJywgbG9jYWxlRXNFeHRyYSk7XG5cbmltcG9ydCBsb2NhbGVObCBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9ubCc7XG5pbXBvcnQgbG9jYWxlTmxFeHRyYSBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9leHRyYS9ubCc7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlTmwsICdubC1OTCcsIGxvY2FsZU5sRXh0cmEpO1xuXG5pbXBvcnQgbG9jYWxlUGwgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvcGwnO1xuaW1wb3J0IGxvY2FsZVBsRXh0cmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZXh0cmEvcGwnO1xucmVnaXN0ZXJMb2NhbGVEYXRhKGxvY2FsZVBsLCAncGwtUEwnLCBsb2NhbGVQbEV4dHJhKTtcblxuaW1wb3J0IGxvY2FsZUl0IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2l0JztcbmltcG9ydCBsb2NhbGVJdEV4dHJhIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2V4dHJhL2l0JztcbnJlZ2lzdGVyTG9jYWxlRGF0YShsb2NhbGVJdCwgJ2l0LUlUJywgbG9jYWxlSXRFeHRyYSk7XG5cbmltcG9ydCBsb2NhbGVSdSBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9ydSc7XG5pbXBvcnQgbG9jYWxlUnVFeHRyYSBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9leHRyYS9ydSc7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlUnUsICdydS1SVScsIGxvY2FsZVJ1RXh0cmEpO1xuXG5pbXBvcnQgbG9jYWxlWmhzIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL3poLUhhbnMnO1xuaW1wb3J0IGxvY2FsZVpoc0V4dHJhIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2V4dHJhL3poLUhhbnMnO1xucmVnaXN0ZXJMb2NhbGVEYXRhKGxvY2FsZVpocywgJ3poLUhhbnMnLCBsb2NhbGVaaHNFeHRyYSk7XG5cbmltcG9ydCBsb2NhbGVaaHQgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvemgtSGFudCc7XG5pbXBvcnQgbG9jYWxlWmh0RXh0cmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZXh0cmEvemgtSGFudCc7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlWmh0LCAnemgtSGFudCcsIGxvY2FsZVpodEV4dHJhKTtcblxuaW1wb3J0IGxvY2FsZVB0IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL3B0JztcbmltcG9ydCBsb2NhbGVQdEV4dHJhIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2V4dHJhL3B0JztcbnJlZ2lzdGVyTG9jYWxlRGF0YShsb2NhbGVQdCwgJ3B0LVBUJywgbG9jYWxlUHRFeHRyYSk7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlUHQsICdwdC1CUicsIGxvY2FsZVB0RXh0cmEpO1xuXG5pbXBvcnQgbG9jYWxlSmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvamEnO1xuaW1wb3J0IGxvY2FsZUphRXh0cmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZXh0cmEvamEnO1xucmVnaXN0ZXJMb2NhbGVEYXRhKGxvY2FsZUphLCAnamEtSkEnLCBsb2NhbGVKYUV4dHJhKTtcblxuaW1wb3J0IGxvY2FsZUhlIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2hlJztcbmltcG9ydCBsb2NhbGVIZUV4dHJhIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2V4dHJhL2hlJztcbnJlZ2lzdGVyTG9jYWxlRGF0YShsb2NhbGVIZSwgJ2hlLUhFJywgbG9jYWxlSGVFeHRyYSk7XG5cbmltcG9ydCBsb2NhbGVBciBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9hcic7XG5pbXBvcnQgbG9jYWxlQXJFeHRyYSBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9leHRyYS9hcic7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlQXIsICdhci1BUicsIGxvY2FsZUFyRXh0cmEpO1xuXG5pbXBvcnQgbG9jYWxlVGggZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvdGgnO1xuaW1wb3J0IGxvY2FsZVRoRXh0cmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZXh0cmEvdGgnO1xucmVnaXN0ZXJMb2NhbGVEYXRhKGxvY2FsZVRoLCAndGgtVEgnLCBsb2NhbGVUaEV4dHJhKTtcblxuaW1wb3J0IGxvY2FsZVRyIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL3RyJztcbmltcG9ydCBsb2NhbGVUckV4dHJhIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2V4dHJhL3RyJztcbnJlZ2lzdGVyTG9jYWxlRGF0YShsb2NhbGVUciwgJ3RyLVRSJywgbG9jYWxlVHJFeHRyYSk7XG5cbmltcG9ydCBsb2NhbGVCZyBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9iZyc7XG5pbXBvcnQgbG9jYWxlQmdFeHRyYSBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9leHRyYS9iZyc7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlQmcsICdiZy1CRycsIGxvY2FsZUJnRXh0cmEpO1xuXG5pbXBvcnQgbG9jYWxlRWwgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZWwnO1xuaW1wb3J0IGxvY2FsZUVsRXh0cmEgZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2xvY2FsZXMvZXh0cmEvZWwnO1xucmVnaXN0ZXJMb2NhbGVEYXRhKGxvY2FsZUVsLCAnZWwtRUwnLCBsb2NhbGVFbEV4dHJhKTtcblxuaW1wb3J0IGxvY2FsZVNsIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL3NsJztcbmltcG9ydCBsb2NhbGVTbEV4dHJhIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL2V4dHJhL3NsJztcbnJlZ2lzdGVyTG9jYWxlRGF0YShsb2NhbGVTbCwgJ3NsLVNMJywgbG9jYWxlU2xFeHRyYSk7XG5cbmltcG9ydCBsb2NhbGVTayBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9zayc7XG5pbXBvcnQgbG9jYWxlU2tFeHRyYSBmcm9tICdAYW5ndWxhci9jb21tb24vbG9jYWxlcy9leHRyYS9zayc7XG5yZWdpc3RlckxvY2FsZURhdGEobG9jYWxlU2ssICdzay1TSycsIGxvY2FsZVNrRXh0cmEpO1xuIl19