{"version":3,"file":"translate.js.map","sources":["ng://translate/lib/services/translate/translate.service.ts","ng://translate/lib/pipes/translate/translate.pipe.ts","ng://translate/lib/translate.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CoreConfig, Persistent } from '@shared/common';\nimport { Observable, Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { translate, loadTranslations, translateMulti, setCurrentLanguage, isCurrentLanguageChinese } from '@shared/stencil';\n\nexport const AVAILABLE_LANGUAGES = ['en', 'us', 'fr', 'de', 'es', 'nl', 'pl', 'it', 'ru', 'zhs', 'zht', 'pt', 'kr', 'ja', 'ua', 'he', 'ar', 'cz', 'th', 'tr', 'bg', 'el', 'sl', 'sk', 'ro', 'hu', 'et', 'br', 'key'];\n\n@Injectable()\nexport class Translate {\n  public static availablesLanguage: Array<string> = AVAILABLE_LANGUAGES;\n  public static availablesLanguageAll: Array<string> = ['all'].concat(Translate.availablesLanguage);\n  public static currentLanguage: string = '';\n\n  @Persistent('defaultLanguage') private defaultLanguage;\n  private _languageChange = new Subject<string>();\n\n  constructor(private coreConfig: CoreConfig, protected http: HttpClient) {}\n\n  init(): Promise<void> {\n    let browserLanguage = 'en';\n    if (!this.coreConfig.isUniversal()) {\n      browserLanguage = (<any>window).navigator.userLanguage || window.navigator.language || 'en';\n    }\n    this.defaultLanguage = this.defaultLanguage || browserLanguage;\n    return this.setLanguage(this.defaultLanguage, false);\n  }\n\n  get languageChange$(): Observable<string> {\n    return this._languageChange.asObservable();\n  }\n\n  checkLanguage(language: string) {\n    if (language === 'key') {\n      return language;\n    }\n    if (language === 'zh-Hant-HK' || language === 'zht') {\n      language = 'zht';\n    } else if (language === 'zh-Hans-GB' || language.startsWith('zh')) {\n      language = 'zhs';\n    } else {\n      language = language.substring(0, 2);\n    }\n    if (Translate.availablesLanguage.indexOf(language) < 0) {\n      language = 'en';\n    }\n    return language;\n  }\n\n  setLanguage(language: string, reload: boolean = true): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (language) {\n        language = this.checkLanguage(language);\n        this.defaultLanguage = language;\n        //this.ngTranslate.setDefaultLang(this.defaultLanguage);\n        // moment.locale(this.getLanguageFull(language, '-'));\n        this._languageChange.next(language);\n        Translate.currentLanguage = language;\n        (<any>window).__currentLanguage__ = language;\n        if (typeof window !== 'undefined' && window.document) {\n          if (this.isRtl(language)) {\n            window.document.dir = 'rtl';\n          } else {\n            window.document.dir = 'ltr';\n          }\n        }\n        this.http.get('./assets/i18n/' + language + '.json').subscribe(res => {\n          // this.ngTranslate.use(language).subscribe(() => {\n          setCurrentLanguage(language);\n          loadTranslations(res);\n          resolve(language);\n          if (reload) {\n            this.coreConfig.reload();\n          }\n        });\n      } else {\n        resolve(null);\n      }\n    });\n  }\n\n  addDynamicLanguage(language: string, translations: Array<any>, isAdmin: boolean) {\n    let newTranslations: any = {};\n    translations.forEach(d => {\n      if (d && d.key && (!isAdmin || translate(d.key) === d.key)) {\n        newTranslations[d.key] = d[language];\n      }\n    });\n    loadTranslations(newTranslations);\n  }\n\n  getCurrentLanguage() {\n    return this.defaultLanguage;\n  }\n\n  getCurrentAngularLocale() {\n    switch (this.defaultLanguage) {\n      case 'en':\n        return 'en-GB';\n      case 'us':\n        return 'en-US';\n      case 'zhs':\n        return 'zh-Hans';\n      case 'zht':\n        return 'zh-Hant';\n      case 'br':\n        return 'pt-BR';\n      case 'fr':\n      case 'de':\n      case 'es':\n      case 'nl':\n      case 'pl':\n      case 'it':\n      case 'ru':\n      case 'pt':\n      case 'ja':\n      case 'he':\n      case 'ar':\n      case 'th':\n      case 'tr':\n      case 'bg':\n      case 'gr':\n      case 'sl':\n      case 'sk':\n      case 'el':\n        return `${this.defaultLanguage}-${this.defaultLanguage.toUpperCase()}`;\n      default:\n        return 'en-US';\n    }\n  }\n\n  getCurrentLanguageFull(separator = '_') {\n    let l = this.getCurrentLanguage();\n    return this.getLanguageFull(l, separator);\n  }\n\n  get(key: string, params?: Object): string {\n    try {\n      return translate(key, params); //this.ngTranslate.instant(key, params);\n    } catch (err) {\n      return key;\n    }\n  }\n\n  getIcon(language: string) {\n    switch (language) {\n      case 'en':\n        return 'flag-icon flag-icon-gb';\n      case 'zhs':\n        return 'flag-icon flag-icon-cn';\n      case 'zht':\n        return 'flag-icon flag-icon-hk';\n      case 'ja':\n        return 'flag-icon flag-icon-jp';\n      case 'he':\n        return 'flag-icon flag-icon-il';\n      case 'ar':\n        return 'flag-icon flag-icon-ae';\n      case 'el':\n        return 'flag-icon flag-icon-gr';\n      case 'sl':\n        return 'flag-icon flag-icon-si';\n      case 'et':\n        return 'flag-icon flag-icon-ee';\n      case 'key':\n        return 'yo-tag';\n      default:\n        return 'flag-icon flag-icon-' + language;\n    }\n  }\n\n  getAll(language: string) {\n    return Translate[language];\n  }\n\n  polyglot(value: string) {\n    return translateMulti(value);\n  }\n\n  isCurrentLanguageRtl() {\n    return this.isRtl(this.getCurrentLanguage());\n  }\n\n  isCurrentLanguageChinese() {\n    return isCurrentLanguageChinese();\n  }\n\n  isRtl(language: string) {\n    if (language === 'he' || language === 'ar') {\n      return true;\n    }\n    return false;\n  }\n\n  getLanguageFull(language: string, separator = '_') {\n    switch (language) {\n      case 'us':\n        return 'en' + separator + 'US';\n      case 'en':\n        return 'en' + separator + 'GB';\n      case 'ua':\n        return 'uk' + separator + 'UA';\n      case 'zhs':\n        return 'zh' + separator + 'CN';\n      case 'zht':\n        return 'zh' + separator + 'TW';\n      case 'ae':\n        return 'ar' + separator + 'AE';\n      case 'br':\n        return 'pt' + separator + 'BR';\n      default:\n        return language + separator + language.toUpperCase();\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Translate } from '../../services/translate/translate.service';\nimport { isUndefined } from 'lodash-es';\n\n@Pipe({\n  name: 'translate'\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translate: Translate) {}\n\n  transform(value: string, ...args: string[]): any {\n    let interpolateParams!: Object;\n    if (!isUndefined(args[0]) && args.length) {\n      if (typeof args[0] === 'string' && args[0].length) {\n        let validArgs: string = args[0].replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":').replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\n        try {\n          interpolateParams = JSON.parse(validArgs);\n        } catch (e) {\n          throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n        }\n      } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n        interpolateParams = args[0];\n      }\n    }\n    return this.translate.get(value, interpolateParams);\n  }\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { CommonModule as AngularCommonModule, registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Translate } from './services/translate/translate.service';\n\nimport { TranslatePipe } from './pipes/translate/translate.pipe';\n\n@NgModule({\n  declarations: [TranslatePipe],\n  imports: [AngularCommonModule, HttpClientModule],\n  exports: [TranslatePipe]\n})\nexport class TranslateModule {\n  static forRoot(configuredProviders: Array<Provider> = []): ModuleWithProviders {\n    return {\n      ngModule: TranslateModule,\n      providers: [Translate, ...configuredProviders]\n    };\n  }\n}\n\nimport localeEnGB from '@angular/common/locales/en-GB';\nimport localeEnGBExtra from '@angular/common/locales/extra/en';\nregisterLocaleData(localeEnGB, 'en-GB', localeEnGBExtra);\n\nimport localeFr from '@angular/common/locales/fr';\nimport localeFrExtra from '@angular/common/locales/extra/fr';\nregisterLocaleData(localeFr, 'fr-FR', localeFrExtra);\n\nimport localeDe from '@angular/common/locales/de';\nimport localeDeExtra from '@angular/common/locales/extra/de';\nregisterLocaleData(localeDe, 'de-DE', localeDeExtra);\n\nimport localeEs from '@angular/common/locales/es';\nimport localeEsExtra from '@angular/common/locales/extra/es';\nregisterLocaleData(localeEs, 'es-ES', localeEsExtra);\n\nimport localeNl from '@angular/common/locales/nl';\nimport localeNlExtra from '@angular/common/locales/extra/nl';\nregisterLocaleData(localeNl, 'nl-NL', localeNlExtra);\n\nimport localePl from '@angular/common/locales/pl';\nimport localePlExtra from '@angular/common/locales/extra/pl';\nregisterLocaleData(localePl, 'pl-PL', localePlExtra);\n\nimport localeIt from '@angular/common/locales/it';\nimport localeItExtra from '@angular/common/locales/extra/it';\nregisterLocaleData(localeIt, 'it-IT', localeItExtra);\n\nimport localeRu from '@angular/common/locales/ru';\nimport localeRuExtra from '@angular/common/locales/extra/ru';\nregisterLocaleData(localeRu, 'ru-RU', localeRuExtra);\n\nimport localeZhs from '@angular/common/locales/zh-Hans';\nimport localeZhsExtra from '@angular/common/locales/extra/zh-Hans';\nregisterLocaleData(localeZhs, 'zh-Hans', localeZhsExtra);\n\nimport localeZht from '@angular/common/locales/zh-Hant';\nimport localeZhtExtra from '@angular/common/locales/extra/zh-Hant';\nregisterLocaleData(localeZht, 'zh-Hant', localeZhtExtra);\n\nimport localePt from '@angular/common/locales/pt';\nimport localePtExtra from '@angular/common/locales/extra/pt';\nregisterLocaleData(localePt, 'pt-PT', localePtExtra);\nregisterLocaleData(localePt, 'pt-BR', localePtExtra);\n\nimport localeJa from '@angular/common/locales/ja';\nimport localeJaExtra from '@angular/common/locales/extra/ja';\nregisterLocaleData(localeJa, 'ja-JA', localeJaExtra);\n\nimport localeHe from '@angular/common/locales/he';\nimport localeHeExtra from '@angular/common/locales/extra/he';\nregisterLocaleData(localeHe, 'he-HE', localeHeExtra);\n\nimport localeAr from '@angular/common/locales/ar';\nimport localeArExtra from '@angular/common/locales/extra/ar';\nregisterLocaleData(localeAr, 'ar-AR', localeArExtra);\n\nimport localeTh from '@angular/common/locales/th';\nimport localeThExtra from '@angular/common/locales/extra/th';\nregisterLocaleData(localeTh, 'th-TH', localeThExtra);\n\nimport localeTr from '@angular/common/locales/tr';\nimport localeTrExtra from '@angular/common/locales/extra/tr';\nregisterLocaleData(localeTr, 'tr-TR', localeTrExtra);\n\nimport localeBg from '@angular/common/locales/bg';\nimport localeBgExtra from '@angular/common/locales/extra/bg';\nregisterLocaleData(localeBg, 'bg-BG', localeBgExtra);\n\nimport localeEl from '@angular/common/locales/el';\nimport localeElExtra from '@angular/common/locales/extra/el';\nregisterLocaleData(localeEl, 'el-EL', localeElExtra);\n\nimport localeSl from '@angular/common/locales/sl';\nimport localeSlExtra from '@angular/common/locales/extra/sl';\nregisterLocaleData(localeSl, 'sl-SL', localeSlExtra);\n\nimport localeSk from '@angular/common/locales/sk';\nimport localeSkExtra from '@angular/common/locales/extra/sk';\nregisterLocaleData(localeSk, 'sk-SK', localeSkExtra);\n"],"names":["tslib_1.__decorate","translate","AngularCommonModule"],"mappings":"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"}
