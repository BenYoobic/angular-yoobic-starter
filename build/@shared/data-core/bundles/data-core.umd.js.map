{"version":3,"file":"data-core.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://data-core/lib/services/config/config.service.ts","ng://data-core/lib/services/session/session.service.ts","ng://data-core/lib/services/loading-bar/loading-bar.service.ts","ng://data-core/lib/services/requestor/requestor.service.ts","ng://data-core/lib/services/algorithms/algorithms.service.ts","ng://data-core/lib/interfaces/cache/cache.interface.ts","ng://data-core/lib/services/cache/cache.service.ts","ng://data-core/lib/interfaces/model/model.interface.ts","ng://data-core/lib/interfaces/condition/icondition.interface.ts","ng://data-core/lib/services/models/models.service.ts","ng://data-core/lib/services/smartloc/smartloc.service.ts","ng://data-core/lib/services/googlemaps/googlemaps.service.ts","ng://data-core/lib/services/workplace/workplace.service.ts","ng://data-core/lib/services/files/files.service.ts","ng://data-core/lib/services/box/box.service.ts","ng://data-core/lib/services/unsplash/unsplash.service.ts","ng://data-core/lib/interfaces/response-object/response-object.interface.ts","ng://data-core/lib/services/broker/broker.service.ts","ng://data-core/lib/decorators/editable/editable.decorator.ts","ng://data-core/lib/decorators/searchable/searchable.decorator.ts","ng://data-core/lib/decorators/model/model.decorator.ts","ng://data-core/lib/interfaces/condition/condition.interface.ts","ng://data-core/lib/interfaces/constants/constants.interface.ts","ng://data-core/lib/interfaces/tenant/tenant.interface.ts","ng://data-core/lib/interfaces/location-type/location-type.interface.ts","ng://data-core/lib/decorators/mapping/mapping.decorator.ts","ng://data-core/lib/interfaces/location/location.interface.ts","ng://data-core/lib/interfaces/user/user.interface.ts","ng://data-core/lib/interfaces/notification/notification.interface.ts","ng://data-core/lib/services/push/push.service.ts","ng://data-core/lib/services/authentication/authentication.service.ts","ng://data-core/lib/services/authentication/authentication.guard.ts","ng://data-core/lib/services/backup/backup.service.ts","ng://data-core/lib/services/blog/blog.service.ts","ng://data-core/lib/services/authentication/current-session.resolver.ts","ng://data-core/lib/services/dashboard/dashboard.service.ts","ng://data-core/lib/services/files/files-broker.service.ts","ng://data-core/lib/services/googletranslate/googletranslate.service.ts","ng://data-core/lib/services/http-interceptor/http-interceptor.service.ts","ng://data-core/lib/services/platform/platform.service.ts","ng://data-core/lib/services/locations/locations.service.ts","ng://data-core/lib/services/loopback/loopback.service.ts","ng://data-core/lib/interfaces/mission-description/mission-description.interface.ts","ng://data-core/lib/services/missiondescriptions/missiondescriptions.service.ts","ng://data-core/lib/services/print/print.service.ts","ng://data-core/lib/interfaces/group/group.interface.ts","ng://data-core/lib/services/security/security.service.ts","ng://data-core/lib/services/tenants/tenants.service.ts","ng://data-core/lib/services/users/users.service.ts","ng://data-core/lib/services/version/version.service.ts","ng://data-core/lib/services/xlsx/xlsx.service.ts","ng://data-core/lib/pipes/filter/filter.pipe.ts","ng://data-core/lib/data-core.module.ts","ng://data-core/lib/interfaces/aggregate-log/aggregate-log.interface.ts","ng://data-core/lib/interfaces/algorithm/algorithm.interface.ts","ng://data-core/lib/interfaces/autorenew-config/autorenew-config.interface.ts","ng://data-core/lib/interfaces/backup/backup.interface.ts","ng://data-core/lib/interfaces/catalog/catalog.interface.ts","ng://data-core/lib/interfaces/chart-definition/chart-definition.interface.ts","ng://data-core/lib/interfaces/currency/currency.interface.ts","ng://data-core/lib/interfaces/dashboard/dashboard.interface.ts","ng://data-core/lib/interfaces/entity/entity.interface.ts","ng://data-core/lib/interfaces/file/file.interface.ts","ng://data-core/lib/interfaces/folder/folder.interface.ts","ng://data-core/lib/interfaces/dates/dates.interface.ts","ng://data-core/lib/interfaces/kpi/kpi.interface.ts","ng://data-core/lib/interfaces/mapping/mapping.interface.ts","ng://data-core/lib/interfaces/operation/operation.interface.ts","ng://data-core/lib/interfaces/product/product.interface.ts","ng://data-core/lib/interfaces/public-api-token/public-api-token.interface.ts","ng://data-core/lib/interfaces/slide/slide.interface.ts","ng://data-core/lib/interfaces/tableau/tableau.interface.ts","ng://data-core/lib/interfaces/tag-group/tag-group.interface.ts","ng://data-core/lib/interfaces/tag/tag.interface.ts","ng://data-core/lib/interfaces/todo/todo.interface.ts","ng://data-core/lib/interfaces/translation/translation.interface.ts","ng://data-core/lib/interfaces/workplace/workplace.interface.ts","ng://data-core/lib/services/activity/activity.service.ts","ng://data-core/lib/services/data-loader/data-loader.service.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LocalStorage, CoreConfig } from '@shared/common';\nimport { Translate } from '@shared/translate';\nimport { IConfigService } from '@shared/stencil';\n\n@Injectable()\nexport class Config implements IConfigService {\n  private static PROD_URL = 'https://api.yoobic.com/'; //https://yoobic-loopback-prod-v3.herokuapp.com/'; // 'https://api.yoobic.com/'\n  //private static CHINA_PROD_URL = 'https://china.yoobic.com/'; //https://yoobic-loopback-prod-v3.herokuapp.com/'; // 'https://api.yoobic.com/'\n  private static SANDBOX_URL = 'https://api-sandbox.yoobic.com/'; //https://yoobic-loopback-prod-v3.herokuapp.com/'; // 'https://api.yoobic.com/'\n  private static STAGING_URL = 'https://yoobic-loopback-staging-v3.herokuapp.com/';\n  private static DEMO_URL = 'https://api-demo.yoobic.com/';\n  private static DEMO_FRESH_URL = 'https://yoobic-loopback-demo-fresh.herokuapp.com/';\n  private static DEV_URL = 'https://yoobic-loopback-dev-v3.herokuapp.com/';\n  private static DEV1_URL = 'https://yoobic-loopback-dev1-v3.herokuapp.com/';\n  private static LOCALHOST_URL = 'https://localhost:3000/';\n  private static TESTPEN_URL = 'https://testpen.yoobic.com/';\n  private static TRIAL_URL = 'https://yoobic-loopback-trial.herokuapp.com/';\n  private static E2E_URL = 'https://yoobic-loopback-e2e.herokuapp.com/';\n\n  private static IMAGE_URL = 'https://upload.yoobic.com/api/'; // 'https://images.yoobic.com/api/ImageContainers/cloudinary/upload'; //'https://192.168.1.88:3000/api/ImageContainers/cloudinary/upload'//'http://localhost:3000/api/ImageContainers/cloudinary/upload'; //\n\n  private static ZAPIER_INSTAGRAM_PROD_URL = 'https://etl.yoobic.com/flows/zapier_instagram_start';\n  private server: string;\n\n  constructor(protected localStorage: LocalStorage, protected coreConfig: CoreConfig, protected translate: Translate) {}\n\n  public get servers() {\n    let servers = [\n      { _id: 'prod', name: 'Production', url: Config.PROD_URL },\n      { _id: 'sandbox', name: 'Sandbox', url: Config.SANDBOX_URL },\n      { _id: 'demo', name: 'Demo', url: Config.DEMO_URL },\n      { _id: 'demofresh', name: 'Demo Fresh', url: Config.DEMO_FRESH_URL },\n      { _id: 'staging', name: 'Staging', url: Config.STAGING_URL },\n      { _id: 'dev', name: 'Development', url: Config.DEV_URL },\n      { _id: 'dev1', name: 'Development 1', url: Config.DEV1_URL },\n      { _id: 'trial', name: 'Trial', url: Config.TRIAL_URL },\n      { _id: 'e2e', name: 'E2E', url: Config.E2E_URL }\n    ];\n\n    if (!this.coreConfig.isUniversal() || location.hostname === 'localhost') {\n      servers.push({ _id: 'localhost', name: 'Localhost', url: Config.LOCALHOST_URL });\n      servers.push({ _id: 'testpen', name: 'Testpen', url: Config.TESTPEN_URL });\n    }\n    if (this.isTestpen) {\n      servers = [{ _id: 'testpen', name: 'Testpen', url: Config.TESTPEN_URL }];\n    }\n    if (this.isSandbox) {\n      servers = [{ _id: 'sandbox', name: 'Sandbox', url: Config.SANDBOX_URL }];\n    }\n    return servers;\n  }\n\n  public get serverUrl() {\n    if (this.isTestpen) {\n      return Config.TESTPEN_URL;\n    }\n    if (this.isSandbox) {\n      return Config.SANDBOX_URL;\n    }\n    let defaultServer;\n    if (this.server && this.server !== '') {\n      defaultServer = this.server;\n    } else {\n      defaultServer = Config.PROD_URL; //Config.DEV_URL;\n    }\n    this.server = this.localStorage.get('SERVER') || defaultServer;\n    return this.server;\n  }\n\n  public get serverName() {\n    let server = this.servers.filter(s => s.url === this.serverUrl);\n    if (server && server.length === 1) {\n      return server[0].name;\n    }\n    return this.translate.get('CUSTOM');\n  }\n\n  public set serverUrl(url) {\n    this.localStorage.set('SERVER', url);\n  }\n\n  public get apiUrl() {\n    return this.serverUrl + 'api/';\n  }\n\n  public get publicApiUrl() {\n    return this.serverUrl + 'public/api/';\n  }\n\n  public get uploadUrl() {\n    return (this.localStorage.get('SERVER_IMAGE') || Config.IMAGE_URL) + 'ImageContainers/cloudinary/upload';\n  }\n\n  public get uploadProxyUrl() {\n    return (this.localStorage.get('SERVER_IMAGE') || Config.IMAGE_URL) + 'cloudinary/uploadProxyImage';\n  }\n\n  public get zapierInstagramUrl() {\n    let url = this.serverUrl;\n    switch (url) {\n      case Config.PROD_URL:\n        return Config.ZAPIER_INSTAGRAM_PROD_URL;\n      default:\n        return '';\n    }\n  }\n\n  public get isTestpen() {\n    return !this.coreConfig.isUniversal() && (location.hostname === 'testpen-dashboard.yoobic.com' || location.hostname === 'testpen-mobile.yoobic.com' || this.server === Config.TESTPEN_URL);\n  }\n\n  public get isSandbox() {\n    return !this.coreConfig.isUniversal() && (location.hostname === 'dashboard-sandbox.yoobic.com' || location.hostname === 'operations-sandbox.yoobic.com' || location.hostname === 'operations-mobile-sandbox.yoobic.com');\n  }\n\n  public get isE2E() {\n    return this.serverUrl === Config.E2E_URL;\n  }\n\n  public get isProduction() {\n    return this.serverUrl === Config.PROD_URL;\n  }\n\n  public get isDemo() {\n    return this.serverUrl === Config.DEMO_URL || this.serverUrl === Config.DEMO_FRESH_URL;\n  }\n\n  public getCurrentConfig() {\n    let items = this.servers.map(server => ({\n      title: server.name,\n      url: server.url,\n      _id: server._id,\n      icon: 'yo-servers'\n    }));\n    let custom: { title: string; url: string; _id: string; icon: string } = {\n      title: this.translate.get('CUSTOM'),\n      url: null,\n      _id: 'custom',\n      icon: 'yo-edit'\n    };\n    let selections = items.filter(s => s.url === this.serverUrl);\n    let initialSelection: { title: string; url: string; _id: string; icon: string };\n    if (selections.length <= 0) {\n      custom.url = this.serverUrl;\n      initialSelection = custom;\n    } else {\n      initialSelection = selections[0];\n    }\n    items.unshift(custom);\n\n    return { items, initialSelection, custom };\n  }\n}\n","import { Injectable } from '@angular/core';\n//import { User } from '../../interfaces/user/user.interface';\nimport { Currency } from '../../interfaces/currency/currency.interface';\nimport { Location } from '../../interfaces/location/location.interface';\nimport { Tenant } from '../../interfaces/tenant/tenant.interface';\nimport { Config } from '../config/config.service';\n\nimport { MissionDescription } from '../../interfaces/mission-description/mission-description.interface';\nimport { Persistent, LocalForageService } from '@shared/common';\nimport { IUser, ISessionService, ITranslation } from '@shared/stencil';\n\n@Injectable()\nexport class Session implements ISessionService {\n  public token: string;\n  public user: IUser;\n  public userId: string;\n  public currencies: Array<Currency>;\n  public groups: Array<string>;\n  public roles: Array<string>;\n  public tenant: Tenant;\n  public photoAnnotationTranslations: Array<ITranslation>;\n  public cameraStarted: boolean;\n  public hasScandit: boolean;\n\n  @Persistent('login.hideWalkthrough') public hideWalkthrough: boolean;\n  @Persistent('badges') localPendingBadges;\n  @Persistent('debugEvent') debugEvent: boolean;\n\n  public openedChannels: Array<string> = [];\n\n  public selectedMissionDescription: MissionDescription = null;\n  public selectedLocation: Location = null;\n\n  constructor(protected localForage: LocalForageService, protected config: Config) {}\n\n  get apiUrl() {\n    return this.config.apiUrl;\n  }\n\n  clear(clearUser = true) {\n    if (clearUser) {\n      this.token = '';\n      this.user = null;\n      this.userId = null;\n      this.tenant = null;\n      this.currencies = [];\n      this.groups = [];\n      this.roles = [];\n      this.hideWalkthrough = false;\n      this.localPendingBadges = {};\n      this.debugEvent = false;\n    }\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { isPresent } from '@shared/stencil';\n\nimport { Observable, Subscriber } from 'rxjs';\n\nexport enum LoadingBarEventType {\n  PROGRESS,\n  VISIBLE\n}\n\nexport class LoadingBarEvent {\n  constructor(public type: LoadingBarEventType, public value: any) {}\n}\n\n@Injectable()\nexport class LoadingBar {\n  public interval: number = 500; // in milliseconds\n  public observable: Observable<LoadingBarEvent>;\n\n  private _progress: number = 0;\n  private _visible: boolean = true;\n  private _intervalCounterId: any = 0;\n  private subscriber: Subscriber<LoadingBarEvent>;\n  private isStarting: boolean;\n\n  constructor() {\n    this.observable = new Observable<LoadingBarEvent>((subscriber: Subscriber<LoadingBarEvent>) => {\n      this.subscriber = subscriber;\n    });\n  }\n\n  set progress(value: number) {\n    if (isPresent(value)) {\n      if (value > 0) {\n        this.visible = true;\n      }\n      this._progress = value;\n      this.emitEvent(new LoadingBarEvent(LoadingBarEventType.PROGRESS, this._progress));\n    }\n  }\n\n  get progress(): number {\n    return this._progress;\n  }\n\n  set visible(value: boolean) {\n    if (isPresent(value)) {\n      this._visible = value;\n      this.emitEvent(new LoadingBarEvent(LoadingBarEventType.VISIBLE, this._visible));\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  start(onCompleted: Function = null) {\n    if (!this.isStarting) {\n      this.isStarting = true;\n      this.complete();\n      this.visible = true;\n      this._intervalCounterId = setInterval(() => {\n        this.progress++;\n        if (this.progress === 100) {\n          this.complete();\n        }\n      }, this.interval);\n      this.isStarting = false;\n    }\n  }\n\n  complete() {\n    if (this._intervalCounterId) {\n      clearInterval(this._intervalCounterId);\n      this._intervalCounterId = null;\n    }\n    this.progress = 100;\n    setTimeout(() => {\n      this.visible = false;\n      this.progress = 0;\n    }, 250);\n  }\n\n  private emitEvent(event: LoadingBarEvent) {\n    if (this.subscriber) {\n      this.subscriber.next(event);\n    }\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport { Session } from '../session/session.service';\nimport { Config } from '../config/config.service';\nimport { LoadingBar } from '../loading-bar/loading-bar.service';\n\nimport { CoreConfig } from '@shared/common';\n\n//import * as FileSaver from 'file-saver';\nimport saveAs from 'file-saver';\nimport { keys } from 'lodash-es';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n/* beautify ignore:start */\ndeclare var fetch;\n/* beautify ignore:end */\n\n@Injectable()\nexport class Requestor {\n  static unauthorizedEmitter = new EventEmitter<any>();\n  static payloadTooBigEmitter = new EventEmitter<any>();\n\n  constructor(protected http: HttpClient, public session: Session, protected config: Config, protected loadingBar: LoadingBar, protected coreConfig: CoreConfig) {}\n\n  fetch(url: string, options: any) {\n    if (options.body && typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    if (options.noHeader !== true) {\n      options.headers = this.buildFetchHeaders();\n    }\n    delete options.noHeader;\n    this.slimbarStart();\n    return fetch(url, options)\n      .then(res => {\n        this.slimbarComplete();\n        return res;\n      })\n      .catch(e => {\n        this.slimbarComplete();\n        return this.errorHandler(e, url);\n      });\n  }\n\n  post(url: string, body: any, token?: string, withCount: boolean = false, isTempToken: boolean = false, looseCount: boolean = false, partialUrl: boolean = false): Observable<any> {\n    this.slimbarStart();\n    if (partialUrl) {\n      url = this.config.apiUrl + url;\n    }\n    return this.http\n      .post(url, body ? JSON.stringify(body) : '', {\n        headers: this.buildHeaders(withCount, token, null, isTempToken, false, looseCount),\n        observe: 'response'\n      })\n      .pipe(\n        map(\n          (res: HttpResponse<any>): any => {\n            this.slimbarComplete();\n            this.updateToken(res);\n            if (res['_body'] === '') {\n              return {};\n            }\n            return this.formatResponse(res, withCount);\n          }\n        ),\n        catchError(e => {\n          this.slimbarComplete();\n          return this.errorHandler(e, url);\n        })\n      );\n  }\n\n  patch(url: string, body: any, token?: string, withCount: boolean = false, isTempToken: boolean = false, looseCount: boolean = false, partialUrl: boolean = false): Observable<any> {\n    this.slimbarStart();\n    if (partialUrl) {\n      url = this.config.apiUrl + url;\n    }\n    return this.http\n      .patch(url, body ? JSON.stringify(body) : '', {\n        headers: this.buildHeaders(withCount, token, null, isTempToken, false, looseCount),\n        observe: 'response'\n      })\n      .pipe(\n        map(\n          (res: HttpResponse<any>): any => {\n            this.slimbarComplete();\n            this.updateToken(res);\n            if (res['_body'] === '') {\n              return {};\n            }\n            return this.formatResponse(res, withCount);\n          }\n        ),\n        catchError(e => {\n          this.slimbarComplete();\n          return this.errorHandler(e, url);\n        })\n      );\n  }\n\n  postRaw(url: string, body: any, blob?: boolean, includeToken?: boolean) {\n    this.slimbarStart();\n    return this.http\n      .post(url, body ? JSON.stringify(body) : '', {\n        headers: this.buildHeaders(false, null, null, null, !includeToken),\n        responseType: <any>(blob ? 'arraybuffer' : 'json'),\n        observe: 'response'\n      })\n      .pipe(\n        map(\n          (res: HttpResponse<any>): any => {\n            this.slimbarComplete();\n            return res;\n          }\n        ),\n        catchError(e => {\n          this.slimbarComplete();\n          return this.errorHandler(e, url);\n        })\n      );\n  }\n\n  postMultiPart(url: string, data: Object) {\n    this.slimbarStart();\n    const formData = new FormData();\n    keys(data).forEach(key => {\n      formData.append(key, data[key]);\n    });\n    const headers = new HttpHeaders();\n    return this.http\n      .post(url, formData, { headers, observe: 'response', responseType: 'text' })\n      .pipe(\n        map((ret: HttpResponse<any>) => {\n          this.slimbarComplete();\n          return ret.body;\n        })\n      )\n      .pipe(\n        catchError(e => {\n          this.slimbarComplete();\n          throw e;\n        })\n      );\n  }\n\n  postFile(url: string, file: File): Observable<any> {\n    this.slimbarStart();\n    return new Observable(observer => {\n      let formData: FormData = new FormData();\n      formData.append('file', file, file.name);\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            observer.next(xhr.response ? JSON.parse(xhr.response) : '');\n            observer.complete();\n          } else {\n            observer.error(xhr.response);\n          }\n          this.slimbarComplete();\n        }\n      };\n      xhr.open('POST', url, true);\n      xhr.setRequestHeader('Authorization', 'Bearer ' + this.session.token);\n      xhr.setRequestHeader('X-Application-Id', this.coreConfig.getAppId());\n      xhr.setRequestHeader('Yoobic-Client-Version', this.coreConfig.getAppVersion());\n      xhr.send(formData);\n    });\n  }\n\n  get(url: string, withCount: boolean = false, token?: string, params?: Array<{ name: string; value: any }>, suppressToken?: boolean): Observable<any> {\n    this.slimbarStart();\n    let httpParams = new HttpParams();\n    if (params && params.length > 0) {\n      params.forEach(p => {\n        httpParams = httpParams.set(p.name, p.value);\n      });\n    }\n\n    return this.http\n      .get(url, {\n        headers: this.buildHeaders(withCount, token, null, null, suppressToken),\n        params: httpParams,\n        observe: 'response'\n      })\n      .pipe(\n        catchError(e => {\n          this.slimbarComplete();\n          return this.errorHandler(e, url);\n        }),\n        map((res: HttpResponse<any>) => {\n          this.slimbarComplete();\n          this.updateToken(res);\n          return this.formatResponse(res, withCount);\n        })\n      );\n  }\n\n  getBinaryContent(url: string): Observable<any> {\n    this.slimbarStart();\n    return this.http\n      .get(url, { responseType: 'arraybuffer' })\n      .pipe(\n        map(retVal => {\n          this.slimbarComplete();\n          return retVal;\n        })\n      )\n      .pipe(\n        catchError(e => {\n          this.slimbarComplete();\n          return this.errorHandler(e, url);\n        })\n      );\n  }\n\n  put(url: string, body: any): Observable<any> {\n    this.slimbarStart();\n    return this.http\n      .put(url, body ? JSON.stringify(body) : null, {\n        headers: this.buildHeaders(),\n        observe: 'response'\n      })\n      .pipe(\n        map((res: HttpResponse<any>) => {\n          this.updateToken(res);\n          this.slimbarComplete();\n          return res.body;\n        }),\n        catchError(e => {\n          this.slimbarComplete();\n          return this.errorHandler(e, url);\n        })\n      );\n  }\n\n  delete(url: string, body?: any): Observable<any> {\n    this.slimbarStart();\n    return this.http\n      .request('delete', url, {\n        headers: this.buildHeaders(),\n        observe: 'response',\n        body: body\n      })\n      .pipe(\n        map((res: HttpResponse<any>) => {\n          this.updateToken(res);\n          this.slimbarComplete();\n          return res.body;\n        }),\n        catchError(e => {\n          this.slimbarComplete();\n          return this.errorHandler(e, url);\n        })\n      );\n  }\n\n  downloadFile(filename: string, mediaType: string, url: string, options: any): Promise<any> {\n    this.slimbarStart();\n    return this.fetch(url, options)\n      .then(res => {\n        return res && res.blob ? res.blob() : null;\n      })\n      .then(blob => {\n        if (blob) {\n          (<any>saveAs)(blob, filename);\n        }\n        this.slimbarComplete();\n      })\n      .catch(e => {\n        this.slimbarComplete();\n        return this.errorHandler(e, url);\n      });\n  }\n\n  saveBlob(blob: Blob, filename: string) {\n    (<any>saveAs)(blob, filename);\n  }\n\n  saveArrayBuffer(array: ArrayBuffer, filename: string) {\n    let blob = new Blob([new Uint8Array(array)]);\n    (<any>saveAs)(blob, filename);\n  }\n\n  getFilenameSuffix(): string {\n    return '_' + new Date().toISOString().replace('.', '_');\n  }\n\n  private errorHandler(e: any, url) {\n    let isInvalidCredentials: boolean = false;\n    if (e && e.status === 401 && url && url.indexOf(this.config.serverUrl) >= 0 && e.error && e.error.error && (e.error.error.name === 'InvalidCredentials' || e.error.error.name === 'OnlySsoLoginAllowed' || e.error.error.message === 'Only SSO login allowed')) {\n      isInvalidCredentials = true;\n    }\n    if (e.status === 401 && url && url.indexOf(this.config.serverUrl) >= 0 && !isInvalidCredentials && url.indexOf('getCampaignScore') < 0 && e.error && e.error.error && e.error.error.name && e.error.error.name.toUpperCase() === 'LOGOUT') {\n      Requestor.unauthorizedEmitter.emit(e);\n    } else if (e.status === 413) {\n      Requestor.payloadTooBigEmitter.emit(e);\n    } else if (e.status === 404) {\n      return of(new HttpResponse<any>(<any>{ body: {}, status: 404 }));\n    } //else {\n    throw e;\n    //}\n    //return Observable.of(e);\n  }\n\n  private formatResponse(res: HttpResponse<any>, withCount: boolean = false) {\n    return withCount\n      ? {\n          data: res.body,\n          count: +(res.headers.get('x-total-count') || res.headers.get('X-Total-Count') || res.headers.get('x-loose-count') || res.headers.get('X-Loose-Count')) || 0\n        }\n      : res.body;\n  }\n\n  private buildHeaders(withCount: boolean = false, token?: string, contentType?: string, isTempToken?: boolean, suppressToken?: boolean, looseCount?: boolean) {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', contentType || 'application/json');\n    headers = headers.set('Accept', 'application/json');\n    headers = headers.set('X-Application-Id', this.coreConfig.getAppId());\n    headers = headers.set('Yoobic-Client-Version', this.coreConfig.getAppVersion());\n\n    if (withCount) {\n      if (looseCount) {\n        headers = headers.set('x-loose-count', 'true');\n      }\n      headers = headers.set('x-total-count', 'true');\n    } else {\n      headers = headers.set('x-loose-count', 'true');\n    }\n    if (suppressToken !== true) {\n      if (token) {\n        if (isTempToken) {\n          headers = headers.set('token', token);\n        } else {\n          headers = headers.set('Authorization', 'Bearer ' + token);\n        }\n      } else if (this.session.token) {\n        headers = headers.set('Authorization', 'Bearer ' + this.session.token);\n      }\n    }\n    return headers;\n  }\n\n  private buildFetchHeaders(withCount: boolean = false, token?: string, contentType?: string, isTempToken?: boolean, suppressToken?: boolean, looseCount?: boolean) {\n    try {\n      if (!this.coreConfig.isIE11() && Headers) {\n        let headers = new Headers();\n        headers.append('Content-Type', contentType || 'application/json');\n        headers.append('Accept', 'application/json');\n        headers.append('X-Application-Id', this.coreConfig.getAppId());\n        headers.append('Yoobic-Client-Version', this.coreConfig.getAppVersion());\n\n        if (withCount) {\n          if (looseCount) {\n            headers.append('x-loose-count', 'true');\n          }\n          headers.append('x-total-count', 'true');\n        }\n        if (suppressToken !== true) {\n          if (token) {\n            if (isTempToken) {\n              headers.append('token', token);\n            } else {\n              headers.append('Authorization', 'Bearer ' + token);\n            }\n          } else if (this.session.token) {\n            headers.append('Authorization', 'Bearer ' + this.session.token);\n          }\n        }\n        return headers;\n      }\n    } catch (err) {}\n    return this.buildFetchHeadersFallback(withCount, token, contentType, isTempToken, suppressToken, looseCount);\n  }\n\n  private buildFetchHeadersFallback(withCount: boolean = false, token?: string, contentType?: string, isTempToken?: boolean, suppressToken?: boolean, looseCount?: boolean) {\n    let headers = {};\n    headers['Content-Type'] = [contentType || 'application/json'];\n    headers['Accept'] = ['application/json'];\n    headers['X-Application-Id'] = [this.coreConfig.getAppId()];\n    headers['Yoobic-Client-Version'] = [this.coreConfig.getAppVersion()];\n\n    if (withCount) {\n      if (looseCount) {\n        headers['x-loose-count'] = ['true'];\n      }\n      headers['x-total-count'] = ['true'];\n    }\n    if (suppressToken !== true) {\n      if (token) {\n        if (isTempToken) {\n          headers['token'] = [token];\n        } else {\n          headers['Authorization'] = ['Bearer ' + token];\n        }\n      } else if (this.session.token) {\n        headers['Authorization'] = ['Bearer ' + this.session.token];\n      }\n    }\n    return headers;\n  }\n\n  private updateToken(res: HttpResponse<any>) {\n    if (res && res.url && res.url.indexOf(this.config.serverUrl) >= 0 && res.headers && res.headers.get('authorization')) {\n      this.session.token = res.headers.get('authorization');\n    }\n  }\n\n  private slimbarStart() {\n    this.loadingBar.start();\n  }\n\n  private slimbarComplete() {\n    this.loadingBar.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../config/config.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n@Injectable()\nexport class Algorithms {\n  constructor(private config: Config, private rq: Requestor) {}\n\n  process(imageUrl: string, algorithmId: string): Observable<any> {\n    let url = this.config.apiUrl + 'algorithm/process';\n    return this.rq.post(url, { image_url: imageUrl, algorithm_id: algorithmId }).pipe(\n      catchError(err => {\n        return throwError(err);\n      }),\n      map(retVal => {\n        return retVal && retVal.results ? retVal.results || {} : {};\n      })\n    );\n  }\n\n  processMultiple(imageUrls: Array<string>, algorithmId: string): Observable<any> {\n    let url = this.config.apiUrl + 'algorithm/process';\n    return this.rq.post(url, { image_url: imageUrls, algorithm_id: algorithmId }).pipe(\n      catchError(err => {\n        return throwError(err);\n      }),\n      map(retVal => {\n        return retVal && retVal.results ? retVal.results || {} : {};\n      })\n    );\n  }\n}\n","export const CACHE_KEYS = {\n  chart: 'chart',\n  missiondescriptions: 'missiondescriptions',\n  missiondatas: 'missiondatas',\n  missionhistory: 'missionhistory',\n  missionprogress: 'missionprogress',\n  missions: 'missions',\n  missionservices: 'missionservices',\n\n  addresses: 'addresses',\n  healthscore: 'healthscore',\n  database: 'database'\n};\n","import { Injectable } from '@angular/core';\n\nimport { IEntity, getUUID } from '@shared/stencil';\nimport { LocalForageService, PromiseService, Log } from '@shared/common';\n\nimport { CACHE_KEYS } from '../../interfaces/cache/cache.interface';\n\nimport { from } from 'rxjs';\nimport { keys } from 'lodash-es';\n\n@Injectable()\nexport class Cache {\n  public static OFFLINE_PREFIX = 'offline_';\n\n  constructor(protected localForage: LocalForageService, protected promise: PromiseService, protected log: Log) {}\n\n  add(cacheKey: string, entryKey: string, item: any) {\n    return this.localForage\n      .get(cacheKey)\n      .then((data: any) => {\n        data = data || {};\n        if (entryKey) {\n          data[entryKey] = item;\n        }\n        return this.localForage.set(cacheKey, data);\n      })\n      .then(() => item);\n  }\n\n  get(cacheKey: string, entryKey: string) {\n    return from(\n      this.localForage.get(cacheKey).then(data => {\n        data = data || {};\n        return data[entryKey] || {};\n      })\n    );\n  }\n\n  getAll(cacheKey: string) {\n    return this.localForage.get(cacheKey).then((data: any) => {\n      data = data || {};\n      let retVal = [];\n      keys(data).forEach(key => {\n        if (data[key]) {\n          retVal.push(data[key]);\n        }\n      });\n      return retVal;\n    });\n  }\n\n  remove(cacheKey: string, entryKey: string) {\n    return from(\n      this.localForage.get(cacheKey).then(data => {\n        data = data || {};\n        delete data[entryKey];\n        return this.localForage.set(cacheKey, data);\n      })\n    );\n  }\n\n  getDatabaseCacheKey(collectionName: string) {\n    return CACHE_KEYS.database + '.' + collectionName;\n  }\n\n  getDatabaseCollection<T = IEntity>(collectionName: string): Promise<Array<T>> {\n    let cacheKey = this.getDatabaseCacheKey(collectionName);\n    return this.localForage.get(cacheKey).then((data: Array<T>) => {\n      return data || [];\n    });\n  }\n\n  setDatabaseCollection<T = IEntity>(collectionName: string, items: Array<T>): Promise<Array<T>> {\n    let cacheKey = this.getDatabaseCacheKey(collectionName);\n    return this.localForage.set(cacheKey, items);\n  }\n\n  updateDatabaseCollection<T = IEntity>(collectionName: string, items: Array<T>, idField: string = '_id', deletedKeys?: Array<string>) {\n    let cacheKey = this.getDatabaseCacheKey(collectionName);\n    return this.localForage.get(cacheKey).then((data: Array<T>) => {\n      data = data || [];\n      if (items && items.length > 0) {\n        data = data.filter(d => items.findIndex(r => r[idField] === d[idField]) < 0);\n      }\n      data = [...data, ...items];\n      if (deletedKeys && deletedKeys.length > 0) {\n        data = data.filter(d => deletedKeys.findIndex(r => r[idField] === d[idField]) < 0);\n      }\n      this.log.log('Syncing Database - Syncing ' + collectionName + ' done : ' + data.length + ' entities locally');\n      return this.localForage.set(cacheKey, data);\n    });\n  }\n\n  clearDatabaseCollection(collectionName: string) {\n    let cacheKey = this.getDatabaseCacheKey(collectionName);\n    this.log.log('Syncing Database - Clearing ' + collectionName);\n    return this.localForage.remove(cacheKey);\n  }\n\n  upsertInDatabaseCollection<T = IEntity>(collectionName: string, entity: T, patch: boolean = false, idField: string = '_id') {\n    entity[idField] = entity[idField] || Cache.OFFLINE_PREFIX + getUUID();\n    return this.getByIdFromDatabaseCollection(collectionName, entity[idField]).then(retVal => {\n      if (retVal && patch) {\n        entity = { ...retVal, ...(entity as any) };\n      }\n      return this.updateDatabaseCollection(collectionName, [entity], idField).then(() => {\n        return entity;\n      });\n    });\n  }\n\n  removeFromDatabaseCollection<T = IEntity>(collectionName: string, id: string, idField: string = '_id') {\n    return this.getDatabaseCollection<T>(collectionName).then(data => {\n      data = data.filter(d => d[idField] !== id);\n      return this.setDatabaseCollection<T>(collectionName, data);\n    });\n  }\n\n  replaceFromDatabaseCollection<T = IEntity>(collectionName: string, id: string, newEntity: T, idField: string = '_id') {\n    return this.getDatabaseCollection<T>(collectionName).then(data => {\n      data = data.filter(d => d[idField] !== id);\n      data = [...data, newEntity];\n      return this.setDatabaseCollection<T>(collectionName, data);\n    });\n  }\n\n  getByIdFromDatabaseCollection<T = IEntity>(collectionName: string, id: string, idField: string = '_id') {\n    return this.getDatabaseCollection<T>(collectionName).then(data => {\n      let retVal = data.find(d => d[idField] === id);\n      return retVal;\n    });\n  }\n}\n","import { IFormField } from '@shared/stencil';\nimport { cloneDeep } from 'lodash-es';\n\nexport class IModel {\n  className: string;\n  collectionName: string;\n  searchableFields: Array<string>;\n  fields: Array<string>;\n  mappingFields: Map<number, string>;\n  appearance: Map<string, any>;\n  include: Array<string>;\n  searchSubquery: { collectionName: string; field: string; values: string };\n  feathersService?: string;\n  type: any;\n  isCustom?: boolean;\n  detailComponent?: string;\n  icon?: string;\n\n  private _formFields: Array<IFormField>;\n  public get formFields(): Array<IFormField> {\n    return cloneDeep(this._formFields);\n  }\n  public set formFields(f: Array<IFormField>) {\n    this._formFields = f;\n  }\n\n  constructor(className) {\n    this.className = className;\n    this.searchableFields = new Array<string>();\n    this.mappingFields = new Map<number, string>();\n    this._formFields = new Array<IFormField>();\n    this.appearance = new Map<string, any>();\n  }\n}\n","export const CONDITION_TYPES = ['field', 'tags', 'groups'];\nexport const CONDITION_ALL_OPERATORS = ['equals', 'notequals', 'in', 'notin', 'greaterthan', 'lessthan'];\nexport const SIMPLE_FIELD_TYPES = ['text', 'email', 'number', 'date', 'tel', 'time', 'range', 'starrating'];\nexport const WITH_VALUES_FIELD_TYPES = ['checkbox', 'toggle', 'select', 'selectmulti', 'selectbuttons', 'selectbuttonsmulti', 'autocomplete'];\n\nexport interface ICondition {\n  _id?: string;\n  type?: string;\n  operator?: string;\n  title?: string;\n  field?: any;\n  tags?: Array<string>;\n  group?: Array<string>;\n  values?: Array<any>;\n  value?: any;\n  key?: string;\n}\n\nexport const ROLES = [\n  'dashboard',\n  'admin',\n  'manager',\n  'team',\n  'teamplus',\n  'creator',\n  'service',\n  'supervisor',\n  'quora',\n  'kiosk',\n  'score',\n  'nochat',\n  'anonymous',\n  'stat',\n  'todo',\n  'serviceuser',\n  'polluser',\n  'newsuser',\n  'newscreator',\n  'documentsuser',\n  'calendaruser',\n  'store',\n  'clientadmin',\n  'missionanalysis',\n  'missionviewer',\n  'followup',\n  'followupnouser',\n  'profilenoedit',\n  'workplace',\n  'trial',\n  'videocall',\n  'academy',\n  'pharmaone',\n  'instagram',\n  'taskuser',\n  'taskcreator',\n  'bi',\n  'storeinsights',\n  'healthscore',\n  'visit',\n  'imagereco',\n  'productbatch',\n  'taskassign',\n  'scandit'\n];\n\nexport const ROLES_ASK = ['manager', 'creator', 'quora', 'academy', 'academyplus'];\n\nexport const ROLES_CONDITIONS = {\n  isAdmin: { type: 'roles', operator: 'in', group: ['admin'] },\n  isClientAdmin: { type: 'roles', operator: 'in', group: ['clientadmin'] },\n  isAdminOrClientAdmin: { type: 'roles', operator: 'in', group: ['admin', 'clientadmin'] },\n  isNotAdmin: { type: 'roles', operator: 'nin', group: ['admin'] },\n  isNeitherAdminNorClientAdmin: { type: 'roles', operator: 'nin', group: ['admin', 'clientadmin'] },\n  isManager: { type: 'roles', operator: 'in', group: ['manager'] },\n  isNotManager: { type: 'roles', operator: 'nin', group: ['manager', 'admin'] },\n  isTeam: { type: 'roles', operator: 'in', group: ['team'] },\n  isWorkplace: { type: 'roles', operator: 'in', group: ['admin', 'workplace'] },\n  hasTodoOrScore: { type: 'roles', operator: 'in', group: ['todo', 'score'] },\n  hasTodo: { type: 'roles', operator: 'in', group: ['todo'] },\n  hasScore: { type: 'roles', operator: 'in', group: ['score'] },\n  hasService: { type: 'roles', operator: 'in', group: ['admin', 'service'] },\n  hasProductBatch: { type: 'roles', operator: 'in', group: ['admin', 'productbatch'] },\n  hasMemoAssign: { type: 'roles', operator: 'in', group: ['admin', 'taskassign'] }\n};\n","import { Injectable, Type } from '@angular/core';\nimport { isPresent, dateFormat, dateAdd, Filters, FilterField, FilterOperator, SubQuery, IFormField, MOBILE_FORM_FIELDS_ALL, FormFieldType, isImageFile, isNumberField, isBooleanField, isPhotoField, isMultiPhotosField, isPhotoOrMultiPhotosField, isVideoField, isDateTimeField, isIntervalField, isMultipleField, isColoredField } from '@shared/stencil';\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\nimport { IModel } from '../../interfaces/model/model.interface';\nimport { ROLES_CONDITIONS } from '../../interfaces/condition/icondition.interface';\n\nimport { cloneDeep, compact, uniq, union, isArray, isObject, isString, map, pull, assign, isEmpty, get, findIndex } from 'lodash-es';\n\n/** @name Models\n * @angularType service\n * @description A powerful service which gets the model for a collection or class. The model could include form fields, searchable fields and mapping fields which are useful for generating forms or filters related to the collection or class.\n */\n@Injectable()\nexport class Models {\n  private static _models = new Map<string, IModel>();\n\n  public static addSearchableField(className: string, fieldName: string) {\n    let model = this.createOrGetModel(className);\n    model.searchableFields.push(fieldName);\n    this.updateModel(className, model);\n  }\n\n  public static addMappingField(className: string, fieldName: string, order: number) {\n    let model = this.createOrGetModel(className);\n    model.mappingFields.set(order, fieldName);\n    this.updateModel(className, model);\n  }\n\n  public static addAppearance(className: string, entityListItemProperty: string, appearance: any) {\n    let model = this.createOrGetModel(className);\n    model.appearance.set(entityListItemProperty, appearance);\n    this.updateModel(className, model);\n  }\n\n  public static addFormField(className: string, field: IFormField) {\n    let model = this.createOrGetModel(className);\n    let formFields = model.formFields;\n    formFields = formFields.filter(f => f.name !== field.name);\n    formFields.push(field);\n    model.formFields = formFields;\n    this.updateModel(className, model);\n  }\n\n  public static addBaseModel(className: string, baseClassName: string, target) {\n    let model = this.createOrGetModel(className);\n    let base = this.createOrGetModel(baseClassName);\n    let formFields = model.formFields || [];\n\n    let baseFields = [];\n    if (base.formFields) {\n      base.formFields.map(field => {\n        if (formFields.findIndex(f => f.name === field.name) < 0) {\n          baseFields.push(cloneDeep(field));\n        }\n      });\n    }\n\n    model.formFields = compact(union(baseFields, formFields));\n    model.searchableFields = uniq(union(cloneDeep(base.searchableFields), model.searchableFields));\n    model.type = target;\n    this.updateModel(className, model);\n  }\n\n  public static setCollectionName(className: string, collectionName: string, fields: any, include: any, searchSubquery: any, feathersService: string, target: any, isCustom?: boolean, detailComponent?: string, icon?: string) {\n    let model = this.createOrGetModel(className);\n    model.collectionName = collectionName;\n    model.fields = fields;\n    model.include = include;\n    model.searchSubquery = searchSubquery;\n    model.type = target;\n    model.feathersService = feathersService;\n    model.isCustom = isCustom;\n    model.detailComponent = detailComponent;\n    model.icon = icon;\n    if (model.collectionName && model.collectionName !== 'tenants') {\n      model.include = model.include || [];\n      if (model.include.indexOf('_tenant') < 0) {\n        model.include.push('_tenant');\n      }\n      if (model.fields && model.fields.length > 1) {\n        model.fields.push('_tenant.name');\n        model.fields.push('_tenant.title');\n        model.fields.push('_tenant.icon');\n      }\n    }\n    this.updateModel(className, model);\n  }\n\n  public static clearCollectionName(className: string) {\n    Models._models.delete(className);\n  }\n\n  public static getModel(className: string | Type<any>): IModel {\n    let retVal;\n    if (isString(className) === true) {\n      retVal = this.createOrGetModel(<string>className);\n    } else {\n      Models._models.forEach(m => {\n        if (m.type && m.type === className) {\n          retVal = m;\n        }\n      });\n    }\n    return retVal;\n  }\n\n  public static getModelByCollectionName(collectionName: string): IModel {\n    let model;\n    Models._models.forEach(m => {\n      if (m.collectionName === collectionName) {\n        model = m;\n      }\n    });\n    if (!model && collectionName && collectionName.endsWith('_store')) {\n      let name = collectionName.replace('_store', '');\n      if (name === 'missiondescription') {\n        name += 's';\n      }\n      return Models.getModelByCollectionName(name);\n    }\n    return model;\n  }\n\n  public static getFilterableFields(collectionName: string, advancedFiltersFields?: Array<IFormField>, campaignFields?: Array<IFormField>, isAdmin: boolean = false) {\n    let fields: Array<IFormField> = [];\n    let model = Models.getModelByCollectionName(collectionName);\n    if (model && model.formFields) {\n      fields = cloneDeep(model.formFields);\n    }\n\n    if (model && model.isCustom && fields) {\n      fields.forEach(f => {\n        f.filterable = f.searchable;\n        f.sortable = f.type === FormFieldType.date || f.type === FormFieldType.datetime || f.type === FormFieldType.number;\n        if (f.type === FormFieldType.location) {\n          f.filterName = f.name + 'Ref';\n        }\n      });\n    }\n\n    if (advancedFiltersFields && advancedFiltersFields.length > 0) {\n      advancedFiltersFields.forEach(af => {\n        let index = findIndex(fields, f => f.name === af.name);\n        if (index < 0) {\n          fields.push(af);\n        } else {\n          fields[index] = { ...fields[index], ...af };\n        }\n      });\n    }\n\n    if (campaignFields) {\n      campaignFields = cloneDeep(campaignFields);\n      campaignFields.forEach(c => {\n        c.name += '.value';\n        c.filterable = true;\n        //c.sortable = true;\n      });\n      fields = fields.concat(campaignFields);\n    }\n\n    let tenantIndex = findIndex(fields, f => f.name === '_tenant');\n    if (tenantIndex >= 0 && !isAdmin) {\n      fields[tenantIndex].filterable = false;\n    }\n    let finalFields: Array<IFormField> = [];\n    fields.forEach(f => {\n      finalFields.push(f);\n      if (f.collectionName && f.collectionName !== collectionName && f.filterable === true && f.showSubQueryFilters === true) {\n        Models.getModelByCollectionName(f.collectionName).formFields.forEach(subfield => {\n          subfield = cloneDeep(subfield);\n          delete subfield.advanced;\n          subfield.filterable = true;\n          subfield.icon = 'yo-tag';\n          //this is used in the chanel collection where we want to override the subQuery defined in the user interface\n          //this even allow us to filter on any subfield of a user to look for channel\n          if (f.subQuery) {\n            subfield.subQuery = subfield.subQuery || f.subQuery;\n            if (!subfield.sessionValues) {\n              subfield.collectionName = subfield.collectionName || f.collectionName;\n            }\n          }\n          if (subfield.subQuery) {\n            if (f.subQueryOverride) {\n              subfield.subQuery = f.subQueryOverride;\n            }\n            subfield.isSubQuery = true;\n            subfield.name = subfield.collectionName + '_' + subfield.name;\n            finalFields.push(subfield);\n          }\n        });\n      }\n    });\n    return finalFields;\n  }\n\n  public static getFieldName(field: IFormField) {\n    let fieldName = field.name + (field.columnDefinition && field.columnDefinition.name ? '.' + field.columnDefinition.name : '');\n    if (field.columnDefinition && field.columnDefinition.forceName) {\n      fieldName = field.columnDefinition.name;\n    }\n    return fieldName;\n  }\n\n  public static getFieldTitle(field: IFormField, translate: any) {\n    let fieldTitle = field.title || field.name;\n    fieldTitle = translate.polyglot(fieldTitle);\n    return fieldTitle;\n  }\n\n  public static isBooleanField(field: IFormField) {\n    return isBooleanField(field);\n  }\n\n  public static isNumberField(field: IFormField) {\n    return isNumberField(field);\n  }\n\n  public static isPhotoField(field: IFormField) {\n    return isPhotoField(field);\n  }\n\n  public static isMultiPhotosField(field: IFormField) {\n    return isMultiPhotosField(field);\n  }\n\n  public static isPhotoOrMultiPhotosField(field: IFormField) {\n    return isPhotoOrMultiPhotosField(field);\n  }\n\n  public static isVideoField(field: IFormField) {\n    return isVideoField(field);\n  }\n\n  public static isDateTimeField(field: IFormField) {\n    return isDateTimeField(field);\n  }\n\n  public static isIntervalField(field: IFormField) {\n    return isIntervalField(field);\n  }\n\n  public static isChartableAutoFieldNoPhoto(field: IFormField) {\n    return Models.isChartableAutoField(field, false);\n  }\n\n  public static isChartableAutoField(field: IFormField, includePhoto = true) {\n    switch (field.type) {\n      case FormFieldType.checkbox:\n      case FormFieldType.toggle:\n\n      case FormFieldType.select:\n      case FormFieldType.selectmulti:\n      case FormFieldType.selectbuttons:\n      case FormFieldType.selectbuttonsmulti:\n      case FormFieldType.starrating:\n      case FormFieldType.number:\n      case FormFieldType.range:\n      case FormFieldType.ranking:\n      case FormFieldType.formula:\n        return true;\n      case FormFieldType.photo:\n      case FormFieldType.multiphotos:\n        return includePhoto;\n\n      case FormFieldType.autocomplete:\n        return !field.collectionName || Models.getModel(field.collectionName).isCustom !== true;\n    }\n    return false;\n  }\n\n  public static isMultipleField(field: IFormField) {\n    return isMultipleField(field);\n  }\n\n  public static isColoredField(field: IFormField) {\n    return isColoredField(field);\n  }\n\n  public static getFieldOperator(field: IFormField): Array<FilterOperator> {\n    if (field.type === 'fieldselector') {\n      return [{ title: 'in', _id: 'inq' }];\n    } else if (Models.isBooleanField(field)) {\n      return [{ title: 'equals', _id: 'eq' }, { title: 'notequals', _id: 'neq' }];\n    } else if (Models.isPhotoField(field)) {\n      return [{ title: 'exists', _id: 'exists' }];\n    } else if (Models.isIntervalField(field) || Models.isDateTimeField(field)) {\n      return [{ title: 'greaterthan', _id: 'gte', interval: true }, { title: 'between', _id: 'between', interval: true }, { title: 'lessthan', _id: 'lte', interval: true }, { title: 'equals', _id: 'eq', interval: true }];\n    } else if (field.type === FormFieldType.autocomplete || field.type === FormFieldType.location) {\n      return [{ title: 'in', _id: 'inq' }, { title: 'notin', _id: 'nin' }, { title: 'all', _id: 'all' }];\n    } else {\n      return [{ title: 'like', _id: 'like' }, { title: 'notlike', _id: 'nlike' }, { title: 'equals', _id: 'eq' }, { title: 'notequals', _id: 'neq' }];\n    }\n  }\n\n  // public static getFormFieldFromMobileField(type) {\n  //     switch (type) {\n  //         case FormFieldType.photo:\n  //         case FormFieldType.signature:\n  //         case FormFieldType.image:\n  //         case FormFieldType.barcode:\n  //         case FormFieldType.video:\n  //         case FormFieldType.audio:\n  //         case FormFieldType.document:\n  //             return FormFieldType.photo;\n  //         case FormFieldType.date:\n  //             return FormFieldType.date;\n  //         default:\n  //             return FormFieldType[type] || FormFieldType.text;\n  //     }\n  // }\n\n  public static getMobileFieldIcon(type: string) {\n    let fields = [].concat(MOBILE_FORM_FIELDS_ALL).filter(field => field.type === type);\n    if (fields && fields.length > 0) {\n      return fields[0].icon;\n    }\n    return '';\n  }\n\n  public static exportWhere(collectionName: string, filters?: Filters, excludedFields = []) {\n    let retVal = filters.map(fs => {\n      let simplifiedFilters = [];\n      fs.forEach(f => {\n        if ((!f.subQuery || f.collectionName === collectionName) && (!excludedFields || excludedFields.indexOf(f.field) < 0)) {\n          //&& !f.isFieldSelector\n          let filter = Models.exportFilterField(f);\n          if (filter && !isEmpty(filter)) {\n            simplifiedFilters.push(filter);\n          }\n        }\n      });\n      if (simplifiedFilters.length === 0) {\n        return null;\n      } else if (simplifiedFilters.length === 1) {\n        return simplifiedFilters[0];\n      } else {\n        return { and: simplifiedFilters };\n      }\n    });\n\n    if (retVal) {\n      pull(retVal, null);\n    }\n\n    if (retVal && retVal.length === 1) {\n      return retVal[0];\n    } else if (retVal && retVal.length > 0) {\n      return { or: retVal };\n    }\n    return null;\n  }\n\n  public static exportSubQuery(collectionName: string, filters?: Filters | Object, isAggregationQuery?: boolean): SubQuery | Array<SubQuery> {\n    let retVal: Array<SubQuery> = [];\n    if (filters && isArray(filters) && (<Filters>filters).length > 0) {\n      (<Filters>filters).forEach(fs => {\n        fs.forEach(f => {\n          if (f.subQuery && f.collectionName !== collectionName) {\n            retVal.push({\n              collectionName: this.fixCollectionName(f.collectionName, isAggregationQuery),\n              where: Models.exportFilterField(f),\n              field: f.subQuery.field,\n              values: f.subQuery.values,\n              leftJoin: f.subQuery.leftJoin\n            });\n          }\n        });\n      });\n    }\n    return retVal.length === 1 ? retVal[0] : retVal.length > 1 ? retVal : null;\n  }\n\n  public static exportSearch(collectionName: string, search: string): any {\n    if (search && search.match && search.match(/^[0-9a-fA-F]{24}$/)) {\n      return { _id: search };\n    } else {\n      let retVal = Models.getModelByCollectionName(collectionName).searchableFields.map(field => {\n        let filter = {};\n        if (field === '_id' && collectionName !== 'groups') {\n          filter[field] = search;\n        } else {\n          filter[field] = { like: search, options: 'i' };\n        }\n        return filter;\n      });\n      if (retVal.length === 1) {\n        return retVal[0];\n      } else if (retVal.length > 0) {\n        return { or: retVal };\n      }\n      return null;\n    }\n  }\n\n  public static fixCollectionName(collectionName: string, isAggregationQuery?: boolean) {\n    switch (collectionName) {\n      case 'missiondescriptions':\n        return isAggregationQuery ? 'missiondescription' : collectionName;\n      case 'groups':\n        return isAggregationQuery ? 'group' : collectionName;\n      case 'feedsComments':\n        return isAggregationQuery ? 'feedsComment' : collectionName;\n      case 'users':\n        return 'user';\n      default:\n        return collectionName;\n    }\n  }\n\n  public static getPublicCollectionName(collectionName: string) {\n    switch (collectionName) {\n      case 'locations':\n        return 'stores';\n      case 'user':\n      case 'users':\n        return 'users';\n      case 'locationtypes':\n        return 'store-types';\n      case 'missiondescriptions':\n        return 'campaigns';\n      case 'feeds':\n        return 'news';\n      default:\n        return collectionName;\n    }\n  }\n\n  public static getPhotoFromParams(params) {\n    if (params && params.node && params.node.data) {\n      let row = params.node.data.toJS ? params.node.data.toJS() : params.node.data;\n      let f = params.colDef.field.replace('.value', '');\n      let photo = Models.extractPhoto(row[f], row, {}, f);\n      return photo;\n    }\n    return null;\n  }\n\n  // get photos for multiphoto component\n  public static getPhotosFromParams(params) {\n    if (params && params.node && params.node.data) {\n      let row = params.node.data.toJS ? params.node.data.toJS() : params.node.data;\n      let f = params.colDef.field.replace('.value', ''); // field name\n      let photos = [];\n      if (row && f && row[f] && row[f].value && isArray(row[f].value)) {\n        row[f].value.forEach((v, multiIndex) => {\n          photos.push(Models.extractPhoto(v, row, {}, f, FormFieldType.multiphotos, null, multiIndex));\n        });\n      }\n      return photos;\n    }\n    return null;\n  }\n\n  public static getEmptyUrl(collectionName: string) {\n    switch (collectionName) {\n      case 'dashboards':\n      case 'dashboard':\n        return 'dashboard.svg';\n\n      case 'missions':\n      case 'mission':\n        return 'mission.svg';\n\n      case 'missiondescriptions':\n      case 'missiondescription':\n      case 'campaign':\n        return 'campaign.svg';\n\n      case 'photos':\n      case 'photo':\n        return 'photo.svg';\n\n      case 'feeds':\n      case 'feed':\n        return 'feed.svg';\n\n      case 'files':\n      case 'file':\n        return 'file.svg';\n\n      case 'locations':\n      case 'location':\n        return 'location.svg';\n\n      case 'notes':\n      case 'note':\n        return 'note.svg';\n\n      case 'users':\n      case 'user':\n        return 'user.svg';\n    }\n    return 'empty.svg';\n  }\n\n  public static extractPhoto(data, missiondata, field, name, type?: string, hideUser: boolean = false, multiIndex?: number) {\n    let photo: any = {};\n    if (data || (field && field.type === 'image' && field.image && field.image._downloadURL)) {\n      if (data && data.value && ((data.value.indexOf && data.value.indexOf('http') === 0) || isImageFile(data.value)) && (!type || !data.fieldType || data.fieldType === type)) {\n        photo = {\n          value: data.value,\n          comments: data.comments,\n          tags: data.tags,\n          flagged: data.flagged,\n          edit: data.edit,\n          stitch: data.stitch,\n          editBy: data.editBy,\n          editWidth: data.editWidth,\n          editHeight: data.editHeight,\n          texts: data.texts,\n          svgData: data.svgData\n        };\n      } else if (data && ((data.indexOf && data.indexOf('http') === 0) || isImageFile(data))) {\n        if (type && type === FormFieldType.multiphotos) {\n          let fieldData = get(missiondata, field.name || name);\n          let extraData = fieldData && (<any>fieldData).extraData ? (<any>fieldData).extraData : {};\n          photo = {\n            value: data,\n            tags: extraData[multiIndex] ? extraData[multiIndex].tags : null,\n            flagged: extraData[multiIndex] ? extraData[multiIndex].flagged : null,\n            edit: extraData[multiIndex] ? extraData[multiIndex].edit : null,\n            stitch: extraData[multiIndex] ? extraData[multiIndex].stitch : null,\n            editBy: extraData[multiIndex] ? extraData[multiIndex].editBy : null,\n            editWidth: extraData[multiIndex] ? extraData[multiIndex].editWidth : null,\n            editHeight: extraData[multiIndex] ? extraData[multiIndex].editHeight : null,\n            texts: extraData[multiIndex] ? extraData[multiIndex].texts : [],\n            svgData: extraData[multiIndex] ? extraData[multiIndex].svgData : null,\n            isMulti: true\n          };\n        } else {\n          photo = { value: data };\n        }\n      } else if (field && field.type === 'image' && field.image && field.image._downloadURL) {\n        photo = {\n          name: field.name || name,\n          title: field.title,\n          value: field.image._downloadURL,\n          isImage: true\n        };\n      }\n      if (!isEmpty(photo)) {\n        if (!field || field.type !== 'image') {\n          assign(photo, {\n            title: field.title,\n            name: field.name || name,\n            multiIndex: multiIndex,\n            _id: missiondata._id + ' _' + (field.name || name),\n            missiondescriptionRef: missiondata.missiondescriptionRef,\n            missiondescription: missiondata.missiondescription,\n            missiondata: missiondata,\n            missiondataRef: missiondata._id,\n            mission: missiondata.mission,\n            missionRef: missiondata.missionRef,\n            userRef: missiondata.userRef,\n            userDisplayname: hideUser ? '' : missiondata.userDisplayname,\n            address: missiondata.address,\n            location: missiondata.location,\n            validated: missiondata.validated,\n            _acl: missiondata._acl\n          });\n        }\n\n        if (field.isImageRecognition && photo.stitch) {\n          photo.value = photo.stitch;\n        }\n        return photo;\n      }\n    }\n    return null;\n  }\n\n  /*\n       Return the transform to extract the fields from a mission description\n   */\n  public static getFieldTransform(types: Array<string> = []) {\n    function getFieldTransformInternal(res: ResponseObject) {\n      if (res.data && res.data.forEach) {\n        let fields = [];\n        res.data.forEach((missiondescription: any) => {\n          let missionFields = Models.getFields(missiondescription, types);\n          missionFields = missionFields.map((field: IFormField) => {\n            return assign(field, {\n              _id: field.name,\n              name: field.name + '.value',\n              operators: Models.getFieldOperator(field),\n              slideTitle: missiondescription.title\n            });\n          });\n          fields = fields.concat(missionFields);\n        });\n        res.data = fields;\n      }\n      return res;\n    }\n\n    return getFieldTransformInternal;\n  }\n\n  /*\n        Return the list of slide items fields from a mission description (mobile type)\n    */\n  public static getFields(missiondescription: any, types: Array<string> = [], excludedTypes: Array<string> = []) {\n    return Models.getFieldsFromSlides(missiondescription.slides, types, excludedTypes);\n  }\n\n  /*\n        Return the list of slide items fields from an array of slides (mobile type)\n    */\n  public static getFieldsFromSlides(slides: Array<any>, types: Array<string> = [], excludedTypes: Array<string> = []) {\n    let fields: Array<IFormField> = [];\n    if (slides) {\n      slides.forEach((slide, index) => {\n        if (slide.items) {\n          slide.items.forEach(item => {\n            item.slideTitle = slide.title;\n            if (!types || types.length === 0 || types.indexOf(item.type) >= 0) {\n              if (!excludedTypes || excludedTypes.length === 0 || excludedTypes.indexOf(item.type) < 0) {\n                item.slideIndex = index;\n                fields.push(item);\n              }\n            }\n          });\n        }\n      });\n    }\n    return fields;\n  }\n\n  private static exportFilterField(f: FilterField) {\n    let filter = {};\n    if (isArray(f.value) && f.value.length === 0) {\n      return filter;\n    }\n\n    if (f.handleUndefined && isPresent(f.value) && isArray(f.value)) {\n      if (f.value.indexOf(undefined) < 0 && f.value.indexOf('undefined') < 0) {\n        filter[f.field] = {};\n        filter[f.field][f.operator._id] = f.value;\n      } else {\n        let def = filter;\n        def[f.field] = {};\n        def[f.field][f.operator._id] = map(f.value, v => {\n          return v === undefined || v === 'undefined' ? null : v;\n        });\n      }\n    } else {\n      filter[f.field] = {};\n      if (f.type === FormFieldType.address && f.value && (isArray(f.value) || isArray(f.value._geoloc))) {\n        filter[f.field] = {\n          nearSphere: {\n            $geometry: {\n              type: 'Point',\n              coordinates: f.value && f.value._geoloc ? f.value._geoloc : f.value\n            },\n            $maxDistance: f.radius * 1000 || 40000\n          }\n        };\n      } else if (f.operator._id === 'nearSphere' && f.value && (isArray(f.value) || isArray(f.value._geoloc))) {\n        filter[f.field] = {\n          nearSphere: {\n            $geometry: {\n              type: 'Point',\n              coordinates: f.value && f.value._geoloc ? f.value._geoloc : f.value\n            },\n            $maxDistance: f.max || 40000\n          }\n        };\n      } else if (f.type === FormFieldType.date && f.operator._id === 'eq') {\n        filter[f.field]['between'] = [f.value, dateFormat(dateAdd(f.value, 'days', 1), 'YYYY-MM-dd')];\n      } else if (isPresent(f.value)) {\n        let value = isArray(f.value) && isObject(f.value[0]) ? map(f.value, '_id') : isArray(f.value) ? f.value : isObject(f.value) ? f.value._id : f.value;\n        if (f.operator && f.operator._id === 'eq') {\n          filter[f.field] = value;\n          // } else if (f.operator && f.operator._id === 'between' && isArray(f.value) && f.value.length > 1) {\n          //     filter[f.field] = { 'gte': f.value[0], 'lt': f.value[1] };\n        } else {\n          filter[f.field][f.operator._id] = value;\n        }\n      }\n      if (f.operator && (f.operator._id === 'like' || f.operator._id === 'nlike')) {\n        filter[f.field].options = 'i';\n      }\n    }\n    return filter;\n  }\n\n  private static createOrGetModel(className: string, override?: boolean): IModel {\n    Models._models = Models._models || new Map<string, IModel>();\n    if (Models._models.has(className) && override !== true) {\n      return Models._models.get(className);\n    } else {\n      let model = new IModel(className);\n      Models._models.set(className, model);\n      return model;\n    }\n  }\n\n  private static updateModel(className: string, model: IModel) {\n    let formFields = model.formFields || [];\n    if (formFields.findIndex(f => f.name === '_tenant') < 0 && model.collectionName && model.collectionName !== 'tenants') {\n      formFields.push({\n        required: true,\n        name: '_tenant',\n        title: 'TENANT',\n        type: FormFieldType.autocomplete,\n        condition: [ROLES_CONDITIONS.isAdmin],\n        collectionName: 'tenants',\n        multiple: false,\n        columnDefinition: { name: 'name' },\n        suppressExport: true,\n        visible: false\n      });\n    }\n    model.formFields = formFields;\n    Models._models.set(className, model);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../config/config.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Session } from '../session/session.service';\nimport { GeoLocation, Position } from '@shared/common';\n\n@Injectable()\nexport class Smartloc {\n  constructor(private session: Session, private geoLoc: GeoLocation, private config: Config, private rq: Requestor) {}\n\n  get defaultPosition() {\n    return this.geoLoc.defaultPosition;\n  }\n\n  getLocation(forceRefresh = false): Promise<Position> {\n    if (this.hasRole('store') && !this.hasRole('admin')) {\n      let promise;\n      if (this.session.user && this.session.user.location && this.session.user.location._geoloc) {\n        promise = Promise.resolve(this.session.user.location);\n      } else if (this.session.user && this.session.user.locationRef) {\n        promise = this.getLocationEntity(this.session.user.locationRef); //, ['_id', 'title', '_geoloc', 'address']\n      } else if (this.session.user && this.session.user.address && this.session.user.address._geoloc) {\n        promise = Promise.resolve(this.session.user.address);\n      }\n      if (promise) {\n        return promise.then(loc => {\n          if (loc && loc._geoloc && loc._geoloc.length > 1) {\n            this.session.user.location = loc;\n            let position = new Position({ latitude: loc._geoloc[1], longitude: loc._geoloc[0] });\n            return position;\n          }\n          return null;\n        });\n      }\n    }\n    return this.geoLoc.getLocation(forceRefresh);\n  }\n\n  getDistance(lat1: number, lon1: number, lat2: number, lon2: number, unit = 'K') {\n    return this.geoLoc.getDistance(lat1, lon1, lat2, lon2, unit);\n  }\n\n  getLocationEntity(id) {\n    let url = this.config.apiUrl + 'locations' + '/' + id;\n    return this.rq.get(url).toPromise();\n  }\n\n  hasRole(role: string) {\n    return this.session.roles && this.session.roles.indexOf(role) >= 0;\n  }\n}\n","/* tslint:disable:variable-name */\nimport { Injectable, Injector } from '@angular/core';\n\nimport { Position, Network } from '@shared/common';\nimport { Translate } from '@shared/translate';\n\nimport { Config } from '../config/config.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Cache } from '../cache/cache.service';\nimport { Smartloc } from '../smartloc/smartloc.service';\nimport { CACHE_KEYS } from '../../interfaces/cache/cache.interface';\n\nimport { IAutocompleteInput, IAutocompletePrediction, IAutocompleteResponse, IBounds, IGeocodeInput, IGeocodeResult, IGeocodeResponse, INearbySearchInput, INearbySearchResponse, IReverseGeocodeInput, IReverseGeocodeResponse, IResolvedAddressLocationInput, IResolvedAddressLocationResult } from '../../interfaces/googlemaps/googlemaps.interface';\n\nimport { concatMap, map } from 'rxjs/operators';\nimport { Observable, from, combineLatest } from 'rxjs';\nimport { isString, uniqBy } from 'lodash-es';\n\nfunction normalizeBounds(b: string | IBounds): string {\n  return b ? (typeof b === 'string' ? b : b.southwest.lat + ',' + b.southwest.lng + '|' + b.northeast.lat + ',' + b.northeast.lng) : '';\n}\n\nfunction normalizeLocation(p: string | Position): string {\n  return p ? (typeof p === 'string' ? p : p.toStringLoc()) : '';\n}\n\nfunction pipeJoin(p: string | string[]): string {\n  return p ? (typeof p === 'string' ? p : p.join('|')) : '';\n}\n\nfunction normalizeObservable<T>(o: Observable<T> | Promise<T> | T): Observable<T> {\n  return o instanceof Observable ? o : from(Promise.resolve(o));\n}\n\n@Injectable()\nexport class Googlemaps {\n  private translate: Translate;\n  constructor(private rq: Requestor, private geo: Smartloc, private config: Config, protected injector: Injector, protected network: Network, protected cache: Cache) {\n    this.translate = this.injector.get<Translate>(Translate);\n  }\n\n  public autocompleteFromSync(input: string, location: string | Position, offset: number = input.length, radius = 100000, language: string = this.translate.getCurrentLanguage(), types?: string, components?: string, query = false): Observable<IAutocompletePrediction[]> {\n    return this._autocomplete(\n      {\n        input,\n        offset,\n        location: normalizeLocation(location),\n        radius,\n        language,\n        types,\n        components\n      },\n      query\n    );\n  }\n\n  public autocompleteLocationObserver(input: string, offset: number = input.length, location: Observable<string | Position> | Promise<string | Position> | string | Position = from(this.geo.getLocation().then(pos => pos.toStringLoc())), radius = 1000, language: string = this.translate.getCurrentLanguage(), types?: string, components?: string, query = false): Observable<IAutocompletePrediction[]> {\n    return normalizeObservable(location).pipe(\n      map(\n        (loc): IAutocompleteInput => {\n          return {\n            input,\n            offset,\n            location: normalizeLocation(loc),\n            radius,\n            language,\n            types,\n            components\n          };\n        }\n      ),\n      concatMap(i => this._autocomplete(i, query))\n    );\n  }\n\n  public autocompleteMultiObserver(inputO: Observable<string>, offsetO: Observable<number> = inputO.pipe(map(s => s.length)), locationO: Observable<string | Position> = from(this.geo.getLocation().then(pos => pos.toStringLoc())), radius = 1000, language: string = this.translate.getCurrentLanguage(), types?: string, components?: string, query = false): Observable<IAutocompletePrediction[]> {\n    return combineLatest(inputO, offsetO, locationO).pipe(concatMap((i: any) => this._autocomplete(i, query)));\n  }\n\n  public nearbySearchFromSync(location: string | Position, radius = 1000, keyword?: string, language: string = this.translate.getCurrentLanguage(), name?: string | string[], minprice?: number, maxprice?: number, opennow?: boolean, rankby?: string, type?: string, types?: string | string[]): Observable<INearbySearchResponse> {\n    return this._nearbySearch({\n      location: normalizeLocation(location),\n      radius,\n      keyword,\n      language,\n      name: pipeJoin(name),\n      minprice,\n      maxprice,\n      opennow,\n      rankby,\n      type,\n      types: pipeJoin(types)\n    });\n  }\n\n  public nearbySearchNextResults(next_page_token: string): Observable<INearbySearchResponse> {\n    return this._nextSearchResults(next_page_token);\n  }\n\n  public nearbySearchLocationObserver(location: Observable<string | Position> | Promise<string | Position> | string | Position = from(this.geo.getLocation().then(pos => pos.toStringLoc())), radius = 1000, keyword?: string, language: string = this.translate.getCurrentLanguage(), name?: string | string[], minprice?: number, maxprice?: number, opennow?: boolean, rankby?: string, type?: string, types?: string | string[]): Observable<INearbySearchResponse> {\n    return normalizeObservable(location).pipe(\n      map(\n        (loc): INearbySearchInput => {\n          return {\n            location: normalizeLocation(loc),\n            radius,\n            keyword,\n            language,\n            name: pipeJoin(name),\n            minprice,\n            maxprice,\n            opennow,\n            rankby,\n            type,\n            types: pipeJoin(types)\n          };\n        }\n      ),\n      concatMap(input => this._nearbySearch(input))\n    );\n  }\n\n  public nearbySearchMultiObserver(locationO: Observable<string | Position> = from(this.geo.getLocation().then(pos => pos.toStringLoc())), keywordO?: Observable<string>, radius = 1000, language: string = this.translate.getCurrentLanguage(), nameO?: Observable<string | string[]>, minprice?: number, maxprice?: number, opennow?: boolean, rankby?: string, type?: string, types?: string | string[]): Observable<INearbySearchResponse> {\n    return combineLatest(keywordO, nameO, locationO).pipe(concatMap((i: any) => this._nearbySearch(i)));\n  }\n\n  public geocodeFromSync(address?: string, components?: string | string[], bounds?: string | IBounds, language: string = this.translate.getCurrentLanguage(), region?: string): Observable<IGeocodeResult[]> {\n    return this._geocode({\n      address,\n      components: pipeJoin(components),\n      bounds: normalizeBounds(bounds),\n      language,\n      region\n    });\n  }\n\n  public geocodeAddressObserver(address: Observable<string>, components?: string | string[], bounds?: string | IBounds, language: string = this.translate.getCurrentLanguage(), region?: string): Observable<IGeocodeResult[]> {\n    return address.pipe(\n      map(\n        (addr): IGeocodeInput => {\n          return {\n            address: addr,\n            components: pipeJoin(components),\n            bounds: normalizeBounds(bounds),\n            language,\n            region\n          };\n        }\n      ),\n      concatMap(i => this._geocode(i))\n    );\n  }\n\n  public reverseGeocodeFromSyncLocation(latlng: string | Position, language: string = this.translate.getCurrentLanguage(), result_type?: string, location_type?: string): Observable<IGeocodeResult[]> {\n    return this._reverseGeocode({\n      latlng: normalizeLocation(latlng),\n      language,\n      result_type,\n      location_type\n    });\n  }\n\n  public reverseGeocodeLatLngObserver(latlng: Observable<string | Position> | Promise<string | Position> | string | Position = from(this.geo.getLocation().then(pos => pos.toStringLoc())), language: string = this.translate.getCurrentLanguage(), result_type?: string, location_type?: string): Observable<IGeocodeResult[]> {\n    return normalizeObservable(latlng).pipe(\n      map(\n        (loc): IReverseGeocodeInput => {\n          return {\n            latlng: normalizeLocation(loc),\n            language,\n            result_type,\n            location_type\n          };\n        }\n      ),\n      concatMap(i => this._reverseGeocode(i))\n    );\n  }\n\n  public reverseGeocodeFromSyncPlaceID(place_id: string, language: string = this.translate.getCurrentLanguage(), result_type?: string, location_type?: string): Observable<IGeocodeResult> {\n    return this._reverseGeocode({\n      place_id,\n      language,\n      result_type,\n      location_type\n    }).pipe(map(results => results[0]));\n  }\n\n  public reverseGeocodePlaceIDObserver(place_idO: Observable<string>, language: string = this.translate.getCurrentLanguage(), result_type?: string, location_type?: string): Observable<IGeocodeResult> {\n    return place_idO.pipe(\n      map(\n        (place_id): IReverseGeocodeInput => {\n          return {\n            place_id,\n            language,\n            result_type,\n            location_type\n          };\n        }\n      ),\n      concatMap(i => this._reverseGeocode(i)),\n      map(results => results[0])\n    );\n  }\n\n  public placePredictionsLocationObserver(\n    input?: string,\n    location: Observable<string | Position> | Promise<string | Position> | string | Position = from(this.geo.getLocation().then(pos => pos.toStringLoc())),\n    language: string = this.translate.getCurrentLanguage(),\n    offset: number = input.length,\n    radius?: number,\n    types?: string,\n    components?: string,\n    address?: string,\n    search?: string,\n    type?: string,\n    limit?: number,\n    nearbyRadius?: number,\n    skipName?: boolean,\n    debug?: boolean\n  ): Observable<IGeocodeResult[]> {\n    return normalizeObservable(location).pipe(\n      map(\n        (loc): IAutocompleteInput | IResolvedAddressLocationInput => {\n          return {\n            input,\n            offset,\n            location: normalizeLocation(loc),\n            radius,\n            language,\n            types,\n            components,\n            address,\n            search,\n            type,\n            limit,\n            nearbyRadius,\n            skipName,\n            debug\n          };\n        }\n      ),\n      concatMap(i => this._placePredictions(i))\n    );\n  }\n  public placePredictionsFromSync(location: string | Position, input?: string, language: string = this.translate.getCurrentLanguage(), offset: number = input.length, radius?: number, types?: string, components?: string, address?: string, search?: string, type?: string, limit?: number, nearbyRadius?: number, skipName?: boolean, debug?: boolean): Observable<IGeocodeResult[]> {\n    return this._placePredictions({\n      input,\n      offset,\n      location: normalizeLocation(location),\n      radius,\n      language,\n      types,\n      components,\n      address,\n      search,\n      type,\n      limit,\n      nearbyRadius,\n      skipName,\n      debug\n    });\n  }\n\n  public nearbyPlaceCodesFromSync(location: string | Position, radius?: number, keyword?: string, language: string = this.translate.getCurrentLanguage(), name?: string | string[], minprice?: number, maxprice?: number, opennow?: boolean, rankby?: string, types?: string | string[], address?: string, search?: string, type?: string, limit?: number, nearbyRadius?: number, skipName?: boolean, debug?: boolean): Observable<IGeocodeResult[]> {\n    return this._nearbyPlaceCodes({\n      location: normalizeLocation(location),\n      radius,\n      keyword,\n      language,\n      name,\n      minprice,\n      maxprice,\n      opennow,\n      rankby,\n      types,\n      address,\n      search,\n      type,\n      limit,\n      nearbyRadius,\n      skipName,\n      debug\n    });\n  }\n\n  public resolveAddressLocation(address: string, language: string = this.translate.getCurrentLanguage(), search?: string, type?: string, limit?: number, nearbyRadius?: number, skipName?: boolean, debug?: boolean): Observable<IResolvedAddressLocationResult> {\n    return this._resolveAddressLocation({\n      address,\n      language,\n      search,\n      type,\n      limit,\n      nearbyRadius,\n      skipName,\n      debug\n    });\n  }\n\n  public getCurrentAddresses(forceRefresh = false) {\n    if (this.network.isOffline()) {\n      return this.cache.get(CACHE_KEYS.addresses, CACHE_KEYS.addresses).toPromise();\n    } else {\n      return this.geo\n        .getLocation(forceRefresh)\n        .then((p: Position) => {\n          return this.reverseGeocodeFromSyncLocation(p).toPromise();\n        })\n        .then(res => {\n          let retVal = [];\n          if (res && res.length > 0) {\n            retVal = res.map(d => {\n              let position = new Position(d.geometry.location);\n              return {\n                address: d.formatted_address,\n                _id: d.id || d.formatted_address,\n                _geoloc: position.toGeoLoc(true),\n                coords: position.toJson()\n              };\n            });\n          }\n          this.cache.add(CACHE_KEYS.addresses, CACHE_KEYS.addresses, retVal);\n          return retVal;\n        });\n    }\n  }\n\n  // public getStreetView(lat: number, lng: number) {\n  //   let url= this.apiUrl+'streetView?'\n  // }\n\n  private get apiUrl() {\n    return this.config.apiUrl + 'GoogleMaps/';\n  }\n\n  private _autocomplete(input: IAutocompleteInput, query: boolean): Observable<IAutocompletePrediction[]> {\n    return this.rq.post(`${this.apiUrl}place/autocomplete?query=${query}`, input).pipe(\n      map((res: IAutocompleteResponse) => {\n        return res.predictions;\n      })\n    );\n  }\n\n  private _placePredictions(input: IResolvedAddressLocationInput | IAutocompleteInput): Observable<IGeocodeResult[]> {\n    return this.rq.post(this.apiUrl + 'place/predictions', input);\n  }\n\n  private _nearbyPlaceCodes(input: IResolvedAddressLocationInput | INearbySearchInput): Observable<IGeocodeResult[]> {\n    return this.rq.post(this.apiUrl + 'place/nearby-place-codes', input);\n  }\n\n  private _resolveAddressLocation(input: IResolvedAddressLocationInput): Observable<IResolvedAddressLocationResult> {\n    return this.rq.post(this.apiUrl + 'resolve-address-location', input);\n  }\n\n  private _nearbySearch(input: INearbySearchInput): Observable<INearbySearchResponse> {\n    return this.rq.post(this.apiUrl + 'place/nearby', input);\n  }\n\n  private _nextSearchResults(next_page_token: string): Observable<INearbySearchResponse> {\n    return this.rq.post(this.apiUrl + 'place/nearby', { next_page_token });\n  }\n\n  private _geocode(input: IGeocodeInput): Observable<IGeocodeResult[]> {\n    return this.rq.post(this.apiUrl + 'geocode', input).pipe(\n      map((res: IGeocodeResponse) => {\n        return res.results;\n      })\n    );\n  }\n\n  private _reverseGeocode(input: IReverseGeocodeInput): Observable<IGeocodeResult[]> {\n    return this.rq.post(this.apiUrl + 'reverse-geocode', input).pipe(\n      map((res: IReverseGeocodeResponse) => {\n        if (isString(res)) {\n          res = JSON.parse(res);\n        }\n        return uniqBy(res.results, t => t.formatted_address);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Config } from '../config/config.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class Workplace {\n  private get apiUrl() {\n    return this.config.apiUrl + 'workplace/';\n  }\n\n  constructor(private rq: Requestor, private config: Config) {}\n\n  getAllGroups() {\n    let url = this.apiUrl + 'getGroups';\n    return this.rq\n      .post(url, {\n        query: {\n          limit: 20,\n          fields: 'icon, name, cover, description'\n        }\n      })\n      .pipe(\n        map(res => {\n          res.data.forEach(g => (g._id = g.id));\n          return res;\n        })\n      );\n  }\n\n  postOnGroup(groupIds: Array<string>, options: any): Observable<any> {\n    let url = this.apiUrl + 'post';\n    return this.rq.post(url, {\n      groupIds,\n      options\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CoreConfig, Log } from '@shared/common';\n\nimport { File } from '../../interfaces/file/file.interface';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Config } from '../config/config.service';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  IFilesService,\n  isFile as _isFile,\n  isBase64 as _isBase64,\n  isFileUri as _isFileUri,\n  isImageFile as _isImageFile,\n  read as _read,\n  getExtension as _getExtension,\n  changeExtension as _changeExtension,\n  getMaxSize as _getMaxSize,\n  toPng as _toPng,\n  isValid as _isValid,\n  isImage as _isImage,\n  isVideo as _isVideo,\n  isAudio as _isAudio,\n  isDocument as _isDocument,\n  getType as _getType,\n  getMimeType as _getMimeType,\n  getIcon as _getIcon,\n  getVideoPoster as _getVideoPoster,\n  b64toBlob as _b64toBlob,\n  blobToFile as _blobToFile,\n  b64ToFile as _b64ToFile,\n  saveBase64AsImageFile as _saveBase64AsImageFile,\n  resizeBase64Image as _resizeBase64Image,\n  getBase64MimeType as _getBase64MimeType,\n  getBase64Extension as _getBase64Extension,\n  resizeImage as _resizeImage,\n  getNativeDirectory as _getNativeDirectory,\n  resolveFilePath as _resolveFilePath,\n  fixImageOrientation as _fixImageOrientation,\n  moveToImageDirectory as _moveToImageDirectory,\n  moveToImageDirectoryBase as _moveToImageDirectoryBase,\n  fileNativeWriteFile as _fileNativeWriteFile,\n  fileNativeCheckFile as _fileNativeCheckFile,\n  fixAbsolutePath as _fixAbsolutePath,\n  getCloudinaryUrl as _getCloudinaryUrl,\n  getLocalFilePath as _getLocalFilePath,\n  getLocalFileName as _getLocalFileName,\n  saveToLocalFile as _saveToLocalFile,\n  cleanFileName as _cleanFileName,\n  getUrlWithAnnotations as _getUrlWithAnnotations,\n  showPdfOnDevice as _showPdfOnDevice,\n  downloadFileToDevice as _downloadFileToDevice,\n  openBlob as _openBlob,\n  afterOpenBlob as _afterOpenBlob\n} from '@shared/stencil';\n\n@Injectable()\nexport class Files implements IFilesService {\n  constructor(private rq: Requestor, private coreConfig: CoreConfig, private log: Log, protected config: Config) {}\n\n  isFile(file) {\n    return _isFile(file);\n  }\n\n  isBase64(file) {\n    return _isBase64(file);\n  }\n\n  isFileUri(file) {\n    return _isFileUri(file);\n  }\n\n  isImageFile(file) {\n    return _isImageFile(file);\n  }\n\n  read(nativeFile: File | Blob, type = 'blob', encoding?: string): Promise<string> {\n    return _read(<any>nativeFile, type, encoding);\n  }\n\n  getExtension(file: File | any) {\n    return _getExtension(file);\n  }\n\n  changeExtension(filename: string, extension: string): string {\n    return _changeExtension(filename, extension);\n  }\n\n  getMaxSize(extension) {\n    return _getMaxSize(extension);\n  }\n\n  toPng(value: string) {\n    return _toPng(value);\n  }\n\n  isValid(file: File) {\n    return _isValid(<any>file);\n  }\n\n  isImage(file: File | any) {\n    return _isImage(file);\n  }\n\n  isVideo(file: File | any) {\n    return _isVideo(file);\n  }\n\n  isAudio(file: File | any) {\n    return _isAudio(file);\n  }\n\n  isDocument(file: File | any) {\n    return _isDocument(file);\n  }\n\n  getType(file: File | any) {\n    return _getType(file);\n  }\n\n  getMimeType(file: File | any) {\n    return _getMimeType(file);\n  }\n\n  getIcon(file: File) {\n    return _getIcon(file);\n  }\n\n  getVideoPoster(value: string) {\n    return _getVideoPoster(value);\n  }\n\n  b64toBlob(b64Data, contentType = null, sliceSize = 512) {\n    return _b64toBlob(b64Data, contentType, sliceSize);\n  }\n\n  blobToFile(blob): any {\n    return _blobToFile(blob);\n  }\n\n  b64ToFile(data: string, file: File): any {\n    return _b64ToFile(data, file as any);\n  }\n\n  saveBase64AsImageFile(data: string) {\n    return _saveBase64AsImageFile(data);\n  }\n\n  resizeBase64Image(base64, maxWidth, maxHeight) {\n    return _resizeBase64Image(base64, maxWidth, maxHeight);\n  }\n\n  getBase64MimeType(base64: string) {\n    return _getBase64MimeType(base64);\n  }\n\n  getBase64Extension(base64: string) {\n    return _getBase64Extension(base64);\n  }\n\n  resizeImage(file: File, maxWidth: Number, maxHeight: Number): Promise<any> {\n    return _resizeImage(file as any, maxWidth, maxHeight);\n  }\n\n  getNativeDirectory(subfolder) {\n    return _getNativeDirectory(subfolder);\n  }\n\n  resolveFilePath(filePath: string) {\n    return _resolveFilePath(filePath);\n  }\n\n  fixImageOrientation(path, fileName) {\n    return _fixImageOrientation(path, fileName);\n  }\n\n  //should only be called in cordova\n  moveToImageDirectory(originalFilePath: string, disableOrientationFix: boolean = false): Promise<string> {\n    return _moveToImageDirectory(originalFilePath, disableOrientationFix);\n  }\n\n  moveToImageDirectoryBase(fileDirPath: string, fileEntry: any, newName: string, originalFilePath: string) {\n    return _moveToImageDirectoryBase(fileDirPath, fileEntry, newName, originalFilePath);\n  }\n\n  fileNativeWriteFile(path, fileName, text, options) {\n    return _fileNativeWriteFile(path, fileName, text, options);\n  }\n\n  fileNativeCheckFile(path, fileName) {\n    return _fileNativeCheckFile(path, fileName);\n  }\n\n  fixAbsolutePath(data: string) {\n    return _fixAbsolutePath(data);\n  }\n\n  getCloudinaryUrl(retVal) {\n    return _getCloudinaryUrl(retVal);\n  }\n\n  downloadFile(filename, mediaType, url, options) {\n    return this.rq.downloadFile(filename, mediaType, url, options);\n  }\n\n  getLocalFilePath() {\n    return _getLocalFilePath();\n  }\n\n  getLocalFileName(fileName: string) {\n    return _getLocalFileName(fileName);\n  }\n\n  saveToLocalFile(blob, fileName) {\n    return _saveToLocalFile(blob, fileName);\n  }\n\n  getUrlWithAnnotations(src: string, photo?: any) {\n    return _getUrlWithAnnotations(src, photo);\n  }\n\n  cleanFileName(fileName: string) {\n    return _cleanFileName(fileName);\n  }\n\n  downloadFileToDevice(source, target) {\n    return _downloadFileToDevice(source, target);\n  }\n\n  showPdfOnDevice(filePath: string, fileName: string = null) {\n    return _showPdfOnDevice(filePath, fileName);\n  }\n\n  uploadProxy(photoUrl: string): Observable<any> {\n    let url = this.config.uploadProxyUrl;\n    return this.rq.post(url, { url: photoUrl }).pipe(\n      map(retVal => {\n        return this.getCloudinaryUrl({ cloudinary: retVal });\n      })\n    );\n  }\n\n  exportToFile(content, type, encoding, filename) {\n    encoding = encoding || 'charset=ISO-8859-1';\n    filename = filename || 'data.csv';\n    type = type || 'data:application/csv;charset=ISO-8859-1;';\n\n    if (encoding === 'base64') {\n      content = this.b64toBlob(content, type);\n    }\n    let blob = new Blob([content], {\n      type: type\n    });\n    return this.rq.saveBlob(blob, filename);\n  }\n\n  openBlob(blob, fileName: string, mimeType: string) {\n    return _openBlob(blob, fileName, mimeType);\n  }\n\n  afterOpenBlob(filePath, mimeType) {\n    return _afterOpenBlob(filePath, mimeType);\n  }\n\n  _requestExternalStoragePermission() {\n    return new Promise((resolve, reject) => {\n      if (this.coreConfig.isAndroid() && this.coreConfig.isCordova()) {\n        let permissions = (<any>window.cordova.plugins).permissions;\n        permissions.hasPermission(permissions.READ_EXTERNAL_STORAGE, initialStatus => {\n          if (!initialStatus.hasPermission) {\n            let errorCallback = () => {\n              this.log.error('Storage permission is not turned on');\n              reject(false);\n            };\n            permissions.requestPermission(\n              permissions.READ_EXTERNAL_STORAGE,\n              status => {\n                if (!status.hasPermission) {\n                  errorCallback();\n                } else {\n                  resolve(true);\n                }\n              },\n              errorCallback\n            );\n          } else {\n            resolve(true);\n          }\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../config/config.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Observable } from 'rxjs';\nimport { CoreConfig } from '@shared/common';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class Box {\n  constructor(private config: Config, private rq: Requestor, private coreConfig: CoreConfig) {}\n\n  upload(documentUrl: string): Observable<any> {\n    let url = this.config.apiUrl + 'businesslogic/uploadToBox';\n    return this.rq.post(url, { params: { documentUrl } }).pipe(\n      map(retVal => {\n        if (retVal && retVal.data) {\n          return retVal.data.id;\n        }\n        return null;\n      })\n    );\n  }\n\n  createViewingSession(boxId: string): Observable<any> {\n    let url = this.config.apiUrl + 'businesslogic/createViewingSessionBox';\n    return this.rq.post(url, { params: { boxId } }).pipe(\n      map(retVal => {\n        if (retVal && retVal.data) {\n          return retVal.data;\n        }\n        return null;\n      })\n    );\n  }\n\n  getViewingContent(contentUrl: string): Observable<any> {\n    let url = this.config.apiUrl + 'businesslogic/getViewingContentBox';\n    return this.rq.post(url, { params: { contentUrl } }).pipe(\n      map(retVal => {\n        if (retVal && retVal.data) {\n          let content = retVal.data;\n          let headIndex = content.indexOf('<head>') + 6;\n          let overwriteStyle = '<style type=\"text/css\">';\n          overwriteStyle += '.controls-center .scroll-previous-btn, .controls-center .scroll-next-btn, .controls-right .zoom-in-btn, .controls-right .zoom-out-btn, .controls-right {';\n          overwriteStyle += '  display: initial !important;';\n          overwriteStyle += '}';\n          overwriteStyle += '.fullscreen-btn {';\n          overwriteStyle += '  display: none !important;';\n          overwriteStyle += '}';\n          overwriteStyle += '</style>';\n          let protocol = this.coreConfig.getProtocol();\n          content = [content.slice(0, headIndex), overwriteStyle, content.slice(headIndex)].join('');\n          content = content.replace(new RegExp('href=\"//', 'g'), 'href=\"' + protocol + '//');\n          content = content.replace(new RegExp('src=\"//', 'g'), 'src=\"' + protocol + '//');\n          return content;\n        }\n        return null;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CoreConfig } from '@shared/common';\n\nimport { Requestor } from '../requestor/requestor.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class Unsplash {\n  constructor(protected rq: Requestor, protected coreConfig: CoreConfig) {}\n\n  getAll(search?: string, skip?: number, limit?: number) {\n    let url;\n    if (search) {\n      url = 'https://api.unsplash.com/search/photos?client_id=' + this.coreConfig.getKey('unsplashAccessKey');\n      url += '&query=' + search;\n      url += '&page=' + (skip / limit + 1);\n      url += '&per_page=' + limit;\n    } else {\n      url = 'https://api.unsplash.com/photos?page=1&per_page=20&client_id=' + this.coreConfig.getKey('unsplashAccessKey');\n    }\n    return this.rq.get(url, null, null, null, true).pipe(\n      map(ret => {\n        //{\n        //count: search ? ret.total : 100,\n        //data:\n        return (search ? ret.results : ret).map(r => ({\n          _id: r.id,\n          title: r.description,\n          value: r.urls.raw,\n          thumb: r.urls.thumb\n        }));\n        //};\n      })\n    );\n  }\n}\n","export class ResponseObject {\n  data: Array<any>;\n  count: number;\n}\n","import { Injectable, EventEmitter, Injector } from '@angular/core';\nimport { Cache } from '../cache/cache.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Models } from '../models/models.service';\nimport { Googlemaps } from '../googlemaps/googlemaps.service';\nimport { Workplace } from '../workplace/workplace.service';\nimport { Session } from '../session/session.service';\nimport { Files } from '../files/files.service';\nimport { Box } from '../box/box.service';\nimport { Config } from '../config/config.service';\nimport { Smartloc } from '../smartloc/smartloc.service';\nimport { Unsplash } from '../unsplash/unsplash.service';\n\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\nimport { Location } from '../../interfaces/location/location.interface';\nexport * from '../../interfaces/response-object/response-object.interface';\n\nimport { Filters, Query, SubQuery, IEntity, ICustomModel, ISort, toDate, utc, dateAdd, startOf, cacheFile, isNullOrUndefined } from '@shared/stencil';\nimport { Position, CoreConfig, PromiseService, Log, LocalForageService, Network } from '@shared/common';\nimport { Translate } from '@shared/translate';\n\nimport { FileUploader } from 'ng2-file-upload';\nimport { FileTransfer } from '@ionic-native/file-transfer/ngx';\nimport { uniq, compact, get, set, assign, isArray, isString, isObject, isEmpty, flatten, forEach, concat, remove, cloneDeep, uniqBy, isEqual, intersection, orderBy, keys, map as lodashMap } from 'lodash-es';\n\nimport { Observable, Observer, forkJoin, from, of, combineLatest } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators'; //, groupBy, flatMap, reduce\n\n@Injectable()\nexport class Broker {\n  private isUploadingDatabase: boolean;\n\n  constructor(\n    private rq: Requestor,\n    private box: Box,\n    private googlemaps: Googlemaps,\n    private workplace: Workplace,\n    private session: Session,\n    private files: Files,\n    private promise: PromiseService,\n    private coreConfig: CoreConfig,\n    private log: Log,\n    private network: Network,\n    private transfer: FileTransfer,\n    private localForage: LocalForageService,\n    public config: Config,\n    protected injector: Injector,\n    protected cache: Cache,\n    protected geoloc: Smartloc,\n    protected translate: Translate,\n    protected unsplash: Unsplash\n  ) {\n    this.init();\n  }\n\n  init() {}\n\n  getApiUrl() {\n    return this.config.apiUrl;\n  }\n\n  getServerUrl() {\n    return this.config.serverUrl;\n  }\n\n  getCollectionName(collectionName: string) {\n    let model = Models.getModelByCollectionName(collectionName);\n    if (model && model.isCustom) {\n      return 'custommodelinstances';\n    }\n    return collectionName;\n  }\n\n  getById(collectionName: string, id: string, fields?: Array<string>, include?: Array<string>, idAttributeName?: string) {\n    let query = this.getQuery(collectionName, fields, include);\n    delete query.limit;\n    delete query.skip;\n    delete query.order;\n    delete query.subQuery;\n    if (this.network.isOffline()) {\n      return from(this.cache.getByIdFromDatabaseCollection(collectionName, id, idAttributeName));\n    } else if (!idAttributeName || idAttributeName === '_id') {\n      let url = this.config.apiUrl + this.getCollectionName(collectionName) + '/' + id + '?filter=' + encodeURIComponent(JSON.stringify(query));\n      return this.rq.get(url);\n    } else {\n      let filters: Filters = [[{ field: idAttributeName, operator: { _id: 'eq' }, value: id }]];\n      return this.getAll(collectionName, fields, include, null, filters).pipe(\n        map(res => {\n          if (res.data && res.data.length > 0) {\n            return res.data[0];\n          }\n          return null;\n        })\n      );\n    }\n  }\n\n  create(collectionName: string, entity: any) {\n    let url = this.config.apiUrl + this.getCollectionName(collectionName);\n    this.updateCustomModel(collectionName, entity);\n    if (this.network.isOffline()) {\n      return from(this.cache.upsertInDatabaseCollection(collectionName, entity));\n    } else {\n      return this.rq.post(url, entity);\n    }\n  }\n\n  update(collectionName: string, entity: any) {\n    if (this.network.isOffline() || this.isOfflineEntity(entity)) {\n      return from(this.cache.upsertInDatabaseCollection(collectionName, entity));\n    } else if (collectionName === 'groups') {\n      let url = this.config.apiUrl + this.getCollectionName(collectionName);\n      this.updateCustomModel(collectionName, entity);\n      return this.rq.put(url, entity);\n    } else {\n      if (entity._id) {\n        return this.patch(collectionName, entity);\n      } else {\n        return this.create(collectionName, entity);\n      }\n    }\n  }\n\n  save(collectionName: string, entity: any, fields?: Array<string>) {\n    if (this.network.isOffline() || this.isOfflineEntity(entity)) {\n      return from(this.cache.upsertInDatabaseCollection(collectionName, entity));\n    } else {\n      return this.upsert(collectionName, entity).pipe(mergeMap(res => this.getById(collectionName, res._id, fields)));\n    }\n  }\n\n  patch(collectionName: string, entity: any) {\n    if (!entity || !entity._id) {\n      throw new Error('Cant patch an empty entity or an entity without an id');\n    }\n    this.updateCustomModel(collectionName, entity);\n    if (this.network.isOffline() || this.isOfflineEntity(entity)) {\n      return from(this.cache.upsertInDatabaseCollection(collectionName, entity, true));\n    } else {\n      let url = this.config.apiUrl + this.getCollectionName(collectionName) + '/' + entity._id;\n      return this.rq.patch(url, entity);\n    }\n  }\n\n  upsert(collectionName: string, entity: Object, previousEntity?: Object, skipAcl?: boolean): Observable<any> {\n    if (!skipAcl) {\n      this.setAcl(entity, (<any>entity).group, false, collectionName);\n    }\n    this.incrementTags(collectionName, entity).subscribe(() => {});\n    let suffixs = collectionName === 'missiondatas' ? ['.value', '.edit', '.value.fieldValue'] : ['._downloadURL', '.edit'];\n    let hasFiles = this._hasFiles(entity, suffixs);\n    if (this.network.isOffline() || !hasFiles) {\n      return this.update(collectionName, entity);\n    } else {\n      return new Observable<ResponseObject>((observer: Observer<any>) => {\n        this.uploadEntityFiles(entity, suffixs).then(\n          () => {\n            this.update(collectionName, entity).subscribe(ret => {\n              if (ret._downloadURL && this.files.isDocument(ret._downloadURL)) {\n                this.box.upload(ret._downloadURL).subscribe(boxId => {\n                  if (boxId) {\n                    ret.boxId = boxId;\n                  }\n                  this.update(collectionName, ret).subscribe(retval => {\n                    observer.next(retval);\n                    observer.complete();\n                  });\n                });\n              } else {\n                observer.next(ret);\n                observer.complete();\n              }\n            });\n          },\n          err => {}\n        );\n      });\n    }\n  }\n\n  upsertAll(collectionName: string, entities: Array<Object>): Observable<any> {\n    let obs = entities.map(entity => this.upsert(collectionName, entity));\n    return forkJoin(obs);\n  }\n\n  uploadEntityFiles(entity, suffixs: Array<string> = [], progressEmitter?: EventEmitter<any>, tags?: Array<string>, promisesOnly = false, totalOffset = 0): Promise<any> {\n    let properties = this._getFileProperties(entity, suffixs);\n    let count = 0;\n    let promises: Array<Promise<any>> = properties.map(prop => {\n      let promise;\n      let file = get(entity, prop);\n      promise = ((offsetIndex, total) => {\n        return () =>\n          this.prepareUpload(file)\n            .then(f => {\n              return this.upload(f, progressEmitter, offsetIndex, total, tags, totalOffset);\n            })\n            .then(url => {\n              set(entity, prop, url);\n            })\n            .catch((err: any) => Promise.reject(err));\n      })(count, properties.length);\n      count += 1;\n      return promise;\n    });\n    if (promisesOnly) {\n      return promises.length > 0 ? promises : <any>[() => Promise.resolve('empty')];\n    }\n    return this.promise.sequential(promises);\n  }\n\n  uploadEntitiesFiles(entities: Array<any>, suffixs: Array<string> = [], progressEmitter?: EventEmitter<any>, tags?: Array<string>) {\n    let promises = entities.map(entity => {\n      return () => this.uploadEntityFiles(entity, suffixs, progressEmitter, tags, false);\n    });\n    return this.promise.sequential(promises);\n  }\n\n  prepareUpload(file) {\n    return this.files._requestExternalStoragePermission().then(() => {\n      if (this.files.isBase64(file)) {\n        return Promise.resolve(this.files.b64toBlob(file));\n      } else if (this.files.isFileUri(file)) {\n        return this.files.resolveFilePath(<string>file);\n      } else {\n        return Promise.resolve(file);\n      }\n    });\n  }\n\n  updateAll(collectionName: string, query: Query, entity: any) {\n    let rawQuery: any = assign({}, query.where);\n    if (query.subQuery) {\n      rawQuery.__options = { subQuery: query.subQuery };\n    }\n    if (entity.group) {\n      entity['_acl.groups.r'] = entity.group;\n    }\n    let url = this.config.apiUrl + this.getCollectionName(collectionName) + '/update?where=' + encodeURIComponent(JSON.stringify(rawQuery));\n    return this.rq.post(url, entity);\n  }\n\n  setAcl(entity, group?: string | Array<string>, addWrite: boolean = false, collectionName?: string, users?: Array<string>) {\n    //entity._acl = entity._acl || { groups: { r: ['admin'], w: ['admin', 'manager'] } };\n    entity._acl = entity._acl || { groups: { r: [], w: [] } };\n    entity._acl.creator = entity._acl && entity._acl.creator ? entity._acl.creator : this.session.user ? this.session.user._id : null;\n    entity._acl.groups = entity._acl && entity._acl.groups ? entity._acl.groups : {};\n    if (group) {\n      entity._acl.groups.r = uniq([].concat(group).concat(entity._acl.groups.r));\n    }\n    entity._acl.groups.r = compact(entity._acl.groups.r);\n    //entity._acl.groups.w = compact(uniq(['admin', 'manager'].concat(entity._acl.groups.w || [])));\n    entity._acl.groups.w = compact(uniq([].concat(entity._acl.groups.w || [])));\n\n    if (collectionName === 'translations' && group) {\n      entity._acl.groups.r = uniq([].concat(group));\n      entity._acl.groups.w = uniq([].concat(group));\n    }\n    if (addWrite && group) {\n      entity._acl.groups.w = compact(uniq([].concat(group).concat(entity._acl.groups.w)));\n    }\n    if (users && users.length > 0) {\n      //entity._acl.users = { r: users, w: users };\n      entity._acl.groups.r = entity._acl.groups.r.concat(users);\n    }\n  }\n\n  getCurrentGroups() {\n    if (this.session.roles.indexOf('admin') < 0) {\n      return this.session.groups;\n    } else {\n      return ['debug_v2'];\n    }\n  }\n\n  updateCustomModel(collectionName: string, entity: any) {\n    let model = Models.getModelByCollectionName(collectionName);\n    if (model && model.isCustom) {\n      entity._modelName = collectionName;\n      if (entity.location && entity.location._id) {\n        entity.locationRef = entity.location._id;\n      }\n    }\n  }\n\n  upload(file: any, progressEmitter?: EventEmitter<any>, offsetIndex = 0, total = 1, tags: Array<string> = [], totalOffset = 0): Promise<string> {\n    tags = concat([this.session.userId], tags);\n    //check for file created from base64 if we can send them through cordova transfert plugin.\n    if (this.coreConfig.isCordova() && file.nativeURL) {\n      let fileTransfer = this.transfer.create();\n      if (progressEmitter) {\n        fileTransfer.onProgress(ev => {\n          if (ev.lengthComputable) {\n            let percentage = ((ev.loaded / ev.total) * 100) / (total + totalOffset) + (offsetIndex * 100) / (total + totalOffset);\n            progressEmitter.next(percentage);\n          }\n        });\n      }\n      return fileTransfer\n        .upload(file.nativeURL, this.config.uploadUrl, {\n          fileKey: 'file',\n          fileName: file.name,\n          chunkedMode: false,\n          params: { tags: tags }\n        })\n        .then((result: any) => {\n          let retVal = JSON.parse(result.response);\n          return this.files.getCloudinaryUrl(retVal);\n        })\n        .catch((err: any) => {\n          let fileError = err && err.message ? err.message : 'File Error';\n          return Promise.reject(fileError);\n        });\n    } else {\n      let fileUploader = this.getFileUploader(null);\n      return new Promise((resolve, reject) => {\n        fileUploader.onBuildItemForm = (fileItem: any, form: any) => {\n          form.append('tags', JSON.stringify(tags));\n        };\n        fileUploader.onCompleteItem = (item: any, response: any, status: any, headers: any): any => {\n          this.log.log('upload finish');\n          fileUploader.clearQueue();\n          if (status === 200) {\n            let retVal = JSON.parse(response);\n            resolve(this.files.getCloudinaryUrl(retVal));\n          } else {\n            reject(response ? JSON.parse(response) : 'error');\n          }\n        };\n        if (progressEmitter) {\n          fileUploader.onProgressItem = (item: any, progress: any) => {\n            let percentage = progress / (total + totalOffset) + (offsetIndex * 100) / (total + totalOffset);\n            progressEmitter.next(percentage);\n          };\n        }\n        fileUploader.addToQueue([file]);\n        fileUploader.queue[0].alias = 'undefined';\n        //fileItem.alias = 'undefined';\n        this.log.log('upload begin');\n        fileUploader.uploadAll();\n      });\n    }\n  }\n\n  uploadData(data, progressEmitter?: EventEmitter<any>, offsetIndex = 0, total = 1) {\n    let file = this.files.b64toBlob(data);\n    return this.upload(file, progressEmitter, offsetIndex, total);\n  }\n\n  incrementTags(collectionName: string, entity: any): Observable<any> {\n    if (entity.tags && entity.tags.length > 0) {\n      entity.tags = uniq(compact([].concat(entity.tags)));\n      if (entity.tags.length > 0 && !this.network.isOffline()) {\n        let url = this.config.apiUrl + 'tags/incrementTags';\n        return this.rq.post(url, {\n          params: {\n            collectionName: Models.fixCollectionName(collectionName),\n            tags: entity.tags,\n            groups: [].concat(entity.group || entity._acl.groups.r),\n            entity\n          }\n        });\n      }\n    }\n    return of(null);\n  }\n\n  updateTags(collectionName: string) {\n    let url = this.config.apiUrl + 'tags/updateTags';\n    return this.rq.post(url, { params: { collection: collectionName } });\n  }\n\n  createAllTags() {\n    let url = this.config.apiUrl + 'businessLogic/createAllTags';\n    return this.rq.post(url, { params: {} });\n  }\n\n  delete(collectionName: string, id: string) {\n    if (this.isOfflineId(id)) {\n      return from(this.cache.removeFromDatabaseCollection(collectionName, id));\n    } else {\n      let url = this.config.apiUrl + this.getCollectionName(collectionName) + '/' + encodeURIComponent(id);\n      return this.rq.delete(url);\n    }\n  }\n\n  deleteAll(collectionName: string, query: Query) {\n    let url = this.config.apiUrl + this.getCollectionName(collectionName);\n    let rawQuery: any = assign({}, query.where || { _id: { exists: true } });\n    if (query.subQuery) {\n      rawQuery.__options = { subQuery: query.subQuery };\n    }\n    return this.rq.delete(url, rawQuery);\n  }\n\n  getQuery(collectionName: string, fields?: Array<string>, include?: Array<string>, search?: string, filters?: Filters | Object, sorts?: Array<ISort>, skip = 0, limit = 20, subQuery: SubQuery = null, customFilter = null): Query {\n    let model = Models.getModelByCollectionName(collectionName);\n    if (model) {\n      fields = fields && fields.length > 0 ? fields : model.fields;\n      include = include || model.include;\n      if (model && model.isCustom) {\n        if (!filters || (isArray(filters) && (<Array<any>>filters).length < 1)) {\n          filters = [[]];\n        }\n        if (isArray(filters)) {\n          filters = cloneDeep(filters);\n          (<any>filters).forEach(f => {\n            f.push({ field: '_modelName', operator: { _id: 'eq' }, value: model.collectionName });\n          });\n        }\n      }\n    }\n\n    let query: Query = {};\n    if (skip && skip > 0) {\n      query.skip = skip;\n    }\n\n    if (limit && limit > 0) {\n      query.limit = limit;\n    }\n\n    if (sorts && sorts.length > 0) {\n      query.order = sorts.filter(s => isString(s) || (s.colId && s.sort)).map(s => (isString(s) ? s : s.colId + ' ' + (s.sort ? s.sort.toUpperCase() : 'ASC')));\n    } else if (sorts && sorts.length === 0) {\n      query.order = [];\n    } else {\n      query.order = ['_lmt DESC'];\n    }\n    let searchWhere = null;\n    let filterWhere = null;\n    if (search && model && !model.searchSubquery) {\n      searchWhere = Models.exportSearch(collectionName, search);\n    }\n\n    if (filters && isArray(filters) && (<Array<any>>filters).length > 0) {\n      filterWhere = Models.exportWhere(collectionName, <Filters>filters);\n    } else if (filters && !isArray(filters) && isObject(filters)) {\n      filterWhere = filters;\n    }\n    if (searchWhere && filterWhere) {\n      query.where = { and: [searchWhere, filterWhere] };\n    } else if (searchWhere) {\n      query.where = searchWhere;\n    } else if (filterWhere) {\n      query.where = filterWhere;\n    }\n\n    if (customFilter && query.where) {\n      query.where = { and: [query.where, customFilter] };\n    } else if (customFilter) {\n      query.where = customFilter;\n    }\n\n    if (fields && fields.length > 0) {\n      query.fields = fields;\n    }\n\n    if (!isEmpty(include)) {\n      query.include = include;\n    }\n\n    if (subQuery) {\n      query.subQuery = subQuery;\n    }\n\n    let filterSubquery = Models.exportSubQuery(collectionName, filters);\n    if (filterSubquery) {\n      if (query.subQuery) {\n        query.subQuery = [].concat(query.subQuery, filterSubquery);\n      } else {\n        query.subQuery = filterSubquery;\n      }\n    }\n    //this is mainly used in the channel model because we want to filter on users properties\n    if (search && model && model.searchSubquery) {\n      searchWhere = Models.exportSearch(model.searchSubquery.collectionName, search);\n      if (!query.subQuery) {\n        query.subQuery = {\n          collectionName: model.searchSubquery.collectionName,\n          field: model.searchSubquery.field,\n          values: model.searchSubquery.values,\n          where: searchWhere\n        };\n      } else if (query.subQuery && !isArray(query.subQuery) && (<SubQuery>query.subQuery).where) {\n        (<SubQuery>query.subQuery).where = { and: [searchWhere, (<SubQuery>query.subQuery).where] };\n      }\n    }\n    return query;\n  }\n\n  getCount(collectionName: string, search?: string, filters?: Filters, subQuery: SubQuery = null, customFilter = null, noOffline: boolean = false): Observable<ResponseObject> {\n    if (this.network.isOffline()) {\n      return this.getAllOffline(collectionName, false, search, filters, null, null, null, customFilter, false).pipe(\n        map(ret => {\n          return { count: ret.count, data: [] };\n        })\n      );\n    } else {\n      let query = this.getQuery(collectionName, null, null, search, filters, null, null, null, subQuery, customFilter);\n      let url = this.config.apiUrl + this.getCollectionName(collectionName) + '/count'; //?where=' + encodeURIComponent(JSON.stringify(query.where || {}));\n      let finalQuery: any = {};\n      if (query.where) {\n        finalQuery.where = query.where;\n      }\n      if (query.subQuery) {\n        finalQuery.subQuery = query.subQuery;\n      }\n\n      let finalRes;\n      return this.rq\n        .post(url, finalQuery)\n        .pipe(\n          mergeMap(res => {\n            finalRes = res;\n            if (noOffline) {\n              return of([]);\n            } else {\n              return from(this.getAllOffline(collectionName, true, search, filters, null, null, null, customFilter));\n            }\n          })\n        )\n        .pipe(\n          map(offlineRes => {\n            let count = finalRes || 0;\n            if (offlineRes && offlineRes.count > 0) {\n              count += offlineRes.count;\n            }\n            return { count: count, data: [] };\n          })\n        );\n    }\n  }\n\n  getAll(collectionName: string, fields?: Array<string>, include?: Array<string>, search?: string, filters?: Filters, sorts?: Array<ISort>, skip = 0, limit = 20, tag = false, subQuery: SubQuery = null, customFilter = null, cacheId: string = null, looseCount: boolean = null, noCount: boolean = false, noOffline: boolean = false): Observable<ResponseObject> {\n    if (collectionName === 'googlemaps') {\n      return this.getAllGoogleMaps(search);\n    }\n    if (collectionName.indexOf('workplace_') >= 0) {\n      return this.getAllWorkplace(collectionName, search);\n    }\n    if (collectionName === 'unsplash') {\n      return this.getAllUnsplash(search, skip, limit);\n    }\n    if (tag === true) {\n      return this.getAllTags(collectionName, search, filters, skip, limit);\n    } else {\n      let query = this.getQuery(collectionName, fields, include, search, filters, sorts, skip, limit, subQuery, customFilter);\n      if (collectionName.indexOf('_store') >= 0) {\n        return this.getAllOperation(collectionName, query);\n      }\n      let obs;\n      if (this.network.isOffline()) {\n        if (cacheId) {\n          obs = from(this.localForage.get(cacheId)).pipe(\n            map(res => {\n              return res || (noCount ? [] : { count: 0, data: [] });\n            })\n          );\n        } else {\n          obs = this.getAllOffline(collectionName, false, search, filters, sorts, skip, limit, customFilter, noCount);\n        }\n      } else {\n        let finalRes;\n        obs = this.getAllQuery(collectionName, query, looseCount, noCount)\n          .pipe(\n            mergeMap(res => {\n              finalRes = res;\n              if (cacheId) {\n                this.localForage.set(cacheId, res);\n              }\n              if (noOffline) {\n                return of([]);\n              } else {\n                return from(this.getAllOffline(collectionName, true, search, filters, sorts, skip, limit, customFilter, noCount));\n              }\n            })\n          )\n          .pipe(\n            map((offlineRes: any) => {\n              if (noCount) {\n                finalRes = [...(offlineRes || []), ...(finalRes || [])];\n              } else {\n                finalRes.data = [...(offlineRes.data || []), ...(finalRes.data || [])];\n              }\n              return finalRes;\n            })\n          );\n      }\n      return obs;\n    }\n  }\n\n  getAllTags(collectionName: string, search?: string, filters?: Filters, skip = 0, limit = 20, useTagsCollection = false) {\n    filters = filters || [[]];\n    //fix for \"MongoError\",\"message\":\"$geoNear, $near, and $nearSphere are not allowed in this context\"\n    if (collectionName === 'locations') {\n      filters = filters.map(ff => {\n        return ff.filter(f => f.field !== '_geoloc');\n      });\n    }\n    if (this.network.isOffline()) {\n      return this.getAllTagsOffline({ collectionName, search, filters });\n    } else if (useTagsCollection) {\n      //this is not used anymore\n      let aggregateOptions = [{ $match: { collectionName: Models.fixCollectionName(collectionName) } }, { $group: { _id: '$tag', count: { $max: '$count' } } }, { $sort: { count: -1 } }, { $project: { _id: 1, tag: '$_id', count: 1 } }, { $group: { _id: 1, total: { $sum: 1 }, data: { $push: '$$ROOT' } } }, { $project: { count: '$total', data: { $slice: ['$data', skip, skip + limit] } } }];\n      return this.aggregateQuery('tags', filters, aggregateOptions, search).pipe(map((res: any) => (res && res.length > 0 ? { data: res[0].data, count: res[0].count } : { data: [], count: 0 })));\n    } else {\n      let aggregateOptions: Array<any> = [{ $unwind: '$tags' }];\n      if (search) {\n        aggregateOptions.push({\n          $match: { tags: { $regex: search.replace(/([^a-z0-9]+)/gi, ''), $options: 'i' } }\n        });\n      }\n\n      aggregateOptions = aggregateOptions.concat([{ $group: { _id: '$tags', count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { _id: 1, tag: '$_id', count: 1 } }, ...(skip > 0 ? [{ $skip: skip }] : []), ...(limit > 0 ? [{ $limit: limit }] : [])]);\n      return this.aggregateQuery(collectionName, filters, aggregateOptions).pipe(map((res: Array<any> = []) => ({ data: res, count: res.length })));\n    }\n  }\n\n  getAllTagsOffline(config: { collectionName: string; search?: string; filters?: Filters }) {\n    return this.getAllOffline(config.collectionName, false, config.search, config.filters, null, null, null, null, true).pipe(\n      map((res: Array<IEntity>) => {\n        let data = [];\n        let count: any = {};\n        if (res && res.length > 0) {\n          res.forEach(t => {\n            if (t.tags) {\n              [].concat(t.tags).forEach(tag => {\n                count[tag] = count[tag] > 0 ? count[tag] + 1 : 1;\n              });\n            }\n          });\n          keys(count).forEach(key => {\n            data.push({ _id: key, tag: key, count: count[key] });\n          });\n          data = orderBy(data, d => -d.count);\n        }\n        return { data, count: data.length, config };\n      })\n    );\n  }\n\n  getMultipleAllTags(config: { collectionName: string; search?: string; filters?: Filters; subQuery?: SubQuery }[], skip = 0, limit = 20) {\n    if (this.network.isOffline()) {\n      let obs = config.map(c => this.getAllTagsOffline(c));\n      return combineLatest(obs).pipe(\n        map(ret => {\n          return ret;\n        })\n      );\n    } else {\n      let aggregateOptions = [{ $unwind: '$tags' }, { $group: { _id: '$tags', count: { $sum: 1 } } }, { $sort: { count: -1 } }, { $project: { _id: 1, tag: '$_id', count: 1 } }, ...(skip > 0 ? [{ $skip: skip }] : []), ...(limit > 0 ? [{ $limit: limit }] : [])];\n      let queries: Query[] = config.map(conf => {\n        let filters = conf.filters || [];\n        if (conf.collectionName === 'locations') {\n          filters = filters.map(ff => {\n            return ff.filter(f => f.field !== '_geoloc');\n          });\n        }\n        return this.getAggregateQuery(conf.collectionName, filters, aggregateOptions, conf.search, null, null, null, conf.subQuery);\n      });\n      return this.aggregateQueries(queries).pipe(\n        map(rets => {\n          let retVal = rets.map((res, i) => ({ data: res, count: res.length, config: config[i] }));\n          return retVal;\n        })\n      );\n    }\n  }\n\n  getAllQuery(collectionName, query: Query, looseCount?: boolean, noCount?: boolean) {\n    let url = this.config.apiUrl + this.getCollectionName(collectionName) + '/find';\n    return this.rq.post(url, { filter: query }, null, !noCount, false, looseCount);\n    //let url = this.config.apiUrl + collectionName + '?filter=' + encodeURIComponent(JSON.stringify(query));\n    //return this.rq.get(url, true);\n  }\n\n  getAllGoogleMaps(search?: string) {\n    if (search) {\n      return this.googlemaps.placePredictionsLocationObserver(search).pipe(\n        map(predictions => {\n          let details = flatten(predictions).filter(d => d.geometry && d.geometry.location);\n          return {\n            count: details.length,\n            data: details.map(d => {\n              let position = new Position(d.geometry.location);\n              return {\n                address: d.formatted_address,\n                _id: d.id,\n                _geoloc: position.toGeoLoc(true),\n                coords: position.toJson()\n              };\n            })\n          };\n        })\n      );\n    } else {\n      return from(this.googlemaps.getCurrentAddresses(true)).pipe(\n        map(addresses => {\n          return { count: addresses.length, data: addresses };\n        })\n      );\n    }\n  }\n\n  getAllUnsplash(search?: string, skip?: number, limit?: number) {\n    return this.unsplash.getAll(search, skip, limit);\n  }\n\n  getAllWorkplace(collectionName: string, search?: string): Observable<ResponseObject> {\n    let graphEntity = collectionName.replace('workplace_', '');\n    switch (graphEntity) {\n      case 'groups':\n        return <any>this.workplace.getAllGroups();\n    }\n    return of({ count: 0, data: [] });\n  }\n\n  getAllOperation(collectionName: string, query: Query) {\n    let url = this.config.apiUrl + 'Operation/findDocument';\n    return this.rq\n      .post(\n        url,\n        {\n          collectionName: Models.fixCollectionName(collectionName.replace('_store', ''), true),\n          where: query.where,\n          //operationId: (<any>query.where).operationId.inq[0],\n          limit: query.limit,\n          skip: query.skip\n        },\n        null,\n        true\n      )\n      .pipe(\n        map(res => {\n          if (res.data && res.data.map) {\n            res.data = res.data; //.map(r => r.doc);\n          }\n          return res;\n        })\n      );\n  }\n\n  syncDatabase(lastSync?: Date, progressEvent?: EventEmitter<number>) {\n    let collections = this.coreConfig.getSyncedCollections();\n    if (collections && collections.length > 0) {\n      this.log.log('Syncing Database - Start');\n      let promises = collections.map((entry, i) => {\n        return () => {\n          if (entry.max <= 0) {\n            return;\n          }\n          this.log.log('Syncing Database - Syncing ' + entry.name);\n          return this.cache.getDatabaseCollection(entry.name).then(data => {\n            let filters: Filters = cloneDeep(entry.filters || [[]]);\n            filters.forEach(fs =>\n              fs.forEach(f => {\n                if (f.value && isArray(f.value) && f.value.indexOf('currentLanguage') >= 0) {\n                  f.value[f.value.indexOf('currentLanguage')] = this.translate.getCurrentLanguage();\n                }\n              })\n            );\n            if (lastSync && data.length > 0) {\n              // && ) {\n              filters.forEach(f => f.push({ field: '_lmt', operator: { _id: 'gte' }, value: lastSync }));\n            }\n\n            return (\n              this.getAll(entry.name, entry.fields, null, null, filters, null, 0, Math.min(entry.max || 1000, 1000), null, null, null, null, null, null, true)\n                .toPromise()\n                // let chunckNumber = (entry.max || 10000) / 100;\n                // let ps = [];\n                // for (let ii = 0; ii <= chunckNumber; ii++) {\n                //   ps.push(this.getAll(entry.name, entry.fields, null, null, filters, null, ii * 100, 100).toPromise());\n                //   //ps.push(this.aggregateQuery(entry.name, filters, [{ $skip: ii * 100 }, { $limit: 100 }], null, null, false, null, null).toPromise());\n                // }\n                // return Promise.all(ps)\n                // .then((ret: Array<ResponseObject>) => {\n                //   let d = [].concat.apply([], ret.map(r => r.data));\n                //   return {\n                //     count: d.length,\n                //     data: d\n                //   };\n                // })\n                .then(ret => {\n                  if (progressEvent) {\n                    progressEvent.emit((i / collections.length) * 100);\n                  }\n                  if (ret && ret.data) {\n                    let filePromises: Array<any> = [Promise.resolve(null)];\n                    let deletedKeys: Array<string>;\n                    if (lastSync) {\n                      filePromises = [\n                        this.getDeletedEntities(entry.name, data)\n                          .toPromise()\n                          .then((deletedkeys: Array<string>) => {\n                            deletedKeys = deletedkeys;\n                          })\n                      ];\n                    }\n                    if (entry.addToCache && entry.addToCache.length > 0) {\n                      entry.addToCache.forEach(key => {\n                        ret.data.forEach(item => {\n                          if (item[key]) {\n                            filePromises.push(() => cacheFile(item[key]));\n                          }\n                        });\n                      });\n                    }\n\n                    return Promise.all(filePromises).then(() => {\n                      return this.cache.updateDatabaseCollection(entry.name, ret.data, '_id', deletedKeys);\n                    });\n                  }\n                })\n            );\n          });\n        };\n      });\n      return this.promise.sequential(promises).then(ret => {\n        if (progressEvent) {\n          progressEvent.emit(100);\n        }\n        return ret;\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  clearDatabase() {\n    let collections = this.coreConfig.getSyncedCollections();\n    if (collections && collections.length > 0) {\n      let promises = collections.map(entry => {\n        return () => this.cache.clearDatabaseCollection(entry.name);\n      });\n      return this.promise.sequential(promises);\n    }\n    return Promise.resolve(null);\n  }\n\n  getDeletedEntities(collectionName: string, data: IEntity[]) {\n    data = data || [];\n    let url = this.config.apiUrl + 'businesslogic/getDeletedIds';\n    let modelName = Models.fixCollectionName(collectionName, true);\n    return this.rq.post(url, { modelName, ids: data.map(e => e._id) }).pipe(\n      map(retVal => {\n        if (retVal) {\n          return retVal || [];\n        }\n        return [];\n      })\n    );\n  }\n\n  getOfflineEntitiesCount() {\n    return this.uploadDatabaseOrGetCount(true);\n  }\n\n  uploadDatabase(progressEmitter?: EventEmitter<number>) {\n    return this.uploadDatabaseOrGetCount(false, progressEmitter);\n  }\n\n  uploadDatabaseOrGetCount(returnCount: boolean, progressEmitter?: EventEmitter<number>) {\n    let total = 0;\n    let count = 0;\n    let offlineData = {};\n\n    if (!this.isUploadingDatabase || this.network.isOffline()) {\n      this.isUploadingDatabase = true;\n      let collections = this.coreConfig.getSyncedCollections();\n\n      return this.cache.getDatabaseCollection<ICustomModel>('custommodels').then(custommodels => {\n        if (collections && collections.length > 0) {\n          collections = cloneDeep(collections);\n          collections = collections.concat(custommodels.map(c => ({ name: c.name })));\n          let promisesCount = collections.map(entry => {\n            return () =>\n              this.cache.getDatabaseCollection(entry.name).then(data => {\n                data = data.filter(e => this.isOfflineEntity(e) && (e as any).status !== 'draft');\n                offlineData[entry.name] = data;\n                total += data.length;\n              });\n          });\n          return this.promise.sequential(promisesCount).then(() => {\n            if (returnCount) {\n              this.isUploadingDatabase = false;\n              return total;\n            } else {\n              this.log.log('uploadDatabase', 'total', total);\n              if (progressEmitter) {\n                progressEmitter.emit(total > 0 ? (count / total) * 100 : 0);\n              }\n              let promises: Array<any> = [];\n              if (total > 0) {\n                collections.forEach(entry => {\n                  let data = offlineData[entry.name];\n                  data.forEach(entity => {\n                    promises.push(() => {\n                      let offlineId = entity._id;\n                      entity = { ...entity };\n                      delete entity._id;\n                      return this.upsert(entry.name, entity)\n                        .toPromise()\n                        .then(retVal => {\n                          count += 1;\n                          if (progressEmitter) {\n                            progressEmitter.emit((count / total) * 100);\n                          }\n                          this.log.log('uploadDatabase', 'count', count);\n                          return this.cache.replaceFromDatabaseCollection(entry.name, offlineId, retVal);\n                        });\n                    });\n                  });\n                });\n              }\n              return this.promise.sequential(promises).then(() => {\n                setTimeout(() => {\n                  if (progressEmitter) {\n                    progressEmitter.emit(100);\n                  }\n                }, 300);\n                this.isUploadingDatabase = false;\n                return total;\n              });\n            }\n          });\n        }\n      });\n    }\n    return Promise.resolve(returnCount ? 0 : null);\n  }\n\n  isOfflineEntity(entity: IEntity) {\n    return entity && entity._id && this.isOfflineId(entity._id);\n  }\n\n  isOfflineId(id: string) {\n    return id && id.startsWith && id.startsWith(Cache.OFFLINE_PREFIX);\n  }\n\n  getAllOffline(collectionName: string, offlineOnly: boolean, search?: string, filters?: Filters, sorts?: Array<ISort>, skip = 0, limit = 20, customFilter = null, noCount: boolean = false): Observable<any> {\n    return from(\n      this.cache.getDatabaseCollection(collectionName).then(data => {\n        let model = Models.getModelByCollectionName(collectionName);\n        if (offlineOnly) {\n          data = data.filter(d => this.isOfflineEntity(d));\n        }\n\n        if (filters && filters.length > 0) {\n          let newData: Array<IEntity> = [];\n          filters.forEach(fs => {\n            let subData = [...data];\n            fs.filter(f => f.removeFromOffline !== true).forEach(f => {\n              subData = subData.filter(e => {\n                let value = isArray(f.value) && isObject(f.value[0]) ? lodashMap(f.value, '_id') : isArray(f.value) ? f.value : isObject(f.value) ? f.value._id : f.value;\n                if (e && e[f.field] !== undefined && e[f.field] !== null) {\n                  switch (f.operator._id) {\n                    case 'eq':\n                      return isEqual(e[f.field], value);\n                    case 'neq':\n                      return !isEqual(e[f.field], value);\n                    case 'inq':\n                      return intersection([].concat(e[f.field]), [].concat(value)).length > 0;\n                    case 'nin':\n                      return intersection([].concat(e[f.field]), [].concat(value)).length <= 0;\n                    case 'gt':\n                      return e[f.field] > value;\n                    case 'gte':\n                      return e[f.field] >= value;\n                    case 'lt':\n                      return e[f.field] < value;\n                    case 'lte':\n                      return e[f.field] <= value;\n                    case 'nearSphere':\n                      (e as any).distance = this.geoloc.getDistance(e[f.field][1], e[f.field][0], value[1], value[0]);\n                      return (e as any).distance < f.max;\n                      break;\n                    case 'exists':\n                      return !isNullOrUndefined(e[f.field]);\n                      break;\n                  }\n                } else {\n                  switch (f.operator._id) {\n                    case 'neq':\n                    case 'nin':\n                      return true;\n\n                    case 'inq':\n                      return value && value.indexOf(null) >= 0;\n                  }\n                }\n              });\n            });\n            newData = [...newData, ...subData];\n          });\n          data = uniqBy(newData, e => e._id);\n        }\n\n        if (search && model && model.searchableFields) {\n          data = data.filter(d => {\n            if (\n              model.searchableFields.some(\n                name =>\n                  d[name] &&\n                  d[name]\n                    .toString()\n                    .toUpperCase()\n                    .indexOf(search.toUpperCase()) >= 0\n              )\n            ) {\n              return true;\n            }\n            return false;\n          });\n        }\n        if (filters && filters.some(fs => fs.some(f => f.operator._id === 'nearSphere'))) {\n          data = orderBy(data, ['distance']);\n        }\n        if (sorts) {\n          data = orderBy(data, sorts.map(s => s.colId), sorts.map(s => s.sort));\n        }\n        let total = data.length;\n        if (limit > 0) {\n          skip = skip || 0;\n          data = data.slice(skip, skip + limit);\n        }\n        return noCount ? data : { count: total, data: data };\n      })\n    );\n  }\n\n  aggregateQuery(collectionName: string, filters?: Filters, aggregateOptions?: Array<any>, search?: string, excludedFields?: Array<any>, includeCount = false, cacheId: string = null, customFilter?: any, subQuery?: SubQuery, aggregateOptionsOffline?: any) {\n    let obs: Observable<any>;\n    collectionName = Models.fixCollectionName(collectionName, true);\n    if (this.network.isOffline()) {\n      if (cacheId) {\n        obs = from(this.localForage.get(cacheId));\n      } else if (aggregateOptionsOffline) {\n        obs = from(\n          this.cache.getDatabaseCollection(collectionName).then(data => {\n            data = aggregateOptionsOffline(data);\n            if (includeCount) {\n              return { data: [{ count: data.length, data: data }] };\n            } else {\n              return { data: data };\n            }\n          })\n        );\n      } else {\n        obs = of({ count: 0, data: [] });\n      }\n    } else if (collectionName === 'aggregateLogs') {\n      return this.aggregateLogs(aggregateOptions);\n    } else {\n      let url = this.config.apiUrl + 'businesslogic/aggregateQuery';\n      let query: Query = this.getAggregateQuery(collectionName, filters, aggregateOptions, search, excludedFields, includeCount, customFilter, subQuery);\n      obs = this.rq.post(url, { params: query }).pipe(\n        map(retVal => {\n          if (cacheId) {\n            this.localForage.set(cacheId, retVal);\n          }\n          return retVal;\n        })\n      );\n    }\n\n    return obs.pipe(\n      map((retVal: any) => {\n        let data = [];\n        if (retVal && retVal.data && retVal.data.length > 0) {\n          if (includeCount) {\n            data = retVal.data[0];\n          } else {\n            data = retVal.data;\n          }\n        }\n        return data;\n      })\n    );\n  }\n\n  aggregateQueries(queries: Array<Query>, includeCount = false, cacheId: string = null) {\n    let obs: Observable<any>;\n    if (this.network.isOffline()) {\n      if (cacheId) {\n        obs = from(this.localForage.get(cacheId));\n      } else {\n        obs = of({ count: 0, data: [] });\n      }\n    } else {\n      let url = this.config.apiUrl + 'businesslogic/aggregateQueries';\n      obs = this.rq.post(url, queries).pipe(\n        map((retVal: { data: Array<any> }) => {\n          let finalArray = Array(queries.length);\n          for (let i = 0; i < finalArray.length; i++) {\n            finalArray[i] = [];\n          }\n          if (retVal && retVal.data && retVal.data.some(d => isObject(d.doc))) {\n            retVal.data.forEach((d: { index: number; doc: any }) => {\n              finalArray[d.index] = finalArray[d.index] || [];\n              finalArray[d.index].push(d.doc);\n            });\n            retVal.data = finalArray;\n          } else if (retVal && isArray(retVal.data) && retVal.data.length === 0) {\n            retVal.data = finalArray;\n          }\n\n          if (cacheId) {\n            this.localForage.set(cacheId, retVal);\n          }\n          return retVal;\n        })\n      );\n    }\n\n    return obs.pipe(\n      map((retVal: any) => {\n        let data = [];\n        if (retVal && retVal.data && retVal.data.length > 0) {\n          if (includeCount) {\n            data = retVal.data[0];\n          } else {\n            data = retVal.data;\n          }\n        }\n        return data;\n      })\n    );\n  }\n\n  getAggregateQuery(collectionName: string, filters?: Filters, aggregateOptions?: Array<any>, search?: string, excludedFields?: Array<any>, includeCount = false, customFilter?: any, subQuery?: SubQuery) {\n    let match = {};\n    let project = {};\n    let filterWhere = null;\n    let searchWhere = null;\n    let defaultFields = [];\n    let query: Query = <Query>{\n      collectionName: Models.fixCollectionName(collectionName, true),\n      includeCount\n    };\n    if (filters && filters.length > 0) {\n      filterWhere = Models.exportWhere(collectionName, filters, excludedFields);\n    }\n\n    if (search) {\n      searchWhere = Models.exportSearch(collectionName, search);\n    }\n\n    if (searchWhere && filterWhere) {\n      query.where = { and: [searchWhere, filterWhere] };\n    } else if (searchWhere) {\n      query.where = searchWhere;\n    } else if (filterWhere) {\n      query.where = filterWhere;\n    }\n\n    if (customFilter && query.where) {\n      query.where = { and: [query.where, customFilter] };\n    } else if (customFilter) {\n      query.where = customFilter;\n    }\n    query.where = query.where || {};\n\n    if (defaultFields && defaultFields.length > 0) {\n      defaultFields.forEach((field, i) => {\n        project[field] = 1;\n      });\n    }\n\n    if (!isEmpty(project)) {\n      aggregateOptions.unshift({ $project: project });\n    }\n    if (!isEmpty(match)) {\n      aggregateOptions.unshift({ $match: match });\n    }\n\n    query.options = aggregateOptions;\n    query.subQuery = Models.exportSubQuery(collectionName, filters, true);\n    if (subQuery) {\n      query.subQuery = subQuery;\n    }\n    return query;\n  }\n\n  aggregateLogs(stages?: Array<any>, groups?: Array<string>, userIds?: Array<string>) {\n    let url = this.config.apiUrl + 'AdminDashboard/aggregateLogs';\n    return this.rq.post(url, { stages, groups, userIds });\n  }\n\n  textSearch(query: string, collectionName: string) {\n    let url = this.config.apiUrl + 'businesslogic/textSearch';\n    return this.rq.post(url, { query, modelName: collectionName });\n  }\n\n  createFile(file: File, group: string | Array<string>, hideMobile = true, fileName?: string, tenantRef?: string) {\n    return this.upsert('files', {\n      _downloadURL: file,\n      _filename: file.name,\n      group: group,\n      hideMobile: hideMobile,\n      mimeType: file.type,\n      size: file.size,\n      _tenantRef: tenantRef\n    });\n  }\n\n  getFileUploader(fileTypes?, maxFileSize?) {\n    let options: any = {\n      maxFileSize: maxFileSize,\n      url: this.config.uploadUrl\n    };\n    // if (fileTypes && fileTypes.length > 0) {\n    //     options.allowedFileType = fileTypes;\n    // }\n    return new FileUploader(options);\n  }\n\n  execute(params) {\n    let url = this.config.apiUrl + 'Endpoints/execute';\n    return this.rq.post(url, { params });\n  }\n\n  undoOperation(operationId: string) {\n    let url = this.config.apiUrl + 'operation/undoDelete';\n    return this.rq.post(url, { operationId });\n  }\n\n  getMarkers(locations: Array<Location>) {\n    return locations\n      .filter((l: Location) => l._geoloc && l._geoloc.length > 1)\n      .map((l: Location) => {\n        return {\n          _id: l._id,\n          address: l.address,\n          latitude: l._geoloc[1],\n          longitude: l._geoloc[0],\n          title: l.title,\n          color: l.status === 'place' ? 'success' : l.status === 'file' ? 'info' : l.status === 'error' ? 'danger' : l.status === 'prediction' ? 'stable' : 'dark'\n        };\n      });\n  }\n\n  getUserOrLocationStat(\n    id: string | Array<string>,\n    mode: string,\n    customFilter?: any\n  ): Observable<\n    Array<{\n      _id: string;\n      booked: number;\n      count: number;\n      finished: number;\n      archived: number;\n      validated: number;\n      rejected: number;\n      tobevalidated: number;\n      available: number;\n    }>\n  > {\n    let value: Array<any> = <any>(isString(id) ? [{ _id: id }] : id);\n    let ref = mode === 'campaign' ? 'descriptionRef' : mode === 'location' ? 'locationRef' : 'ownerRef';\n    let filters = [[{ field: ref, operator: { _id: 'inq' }, value: value }]];\n\n    let options = [\n      {\n        $project: {\n          _id: '$' + ref,\n          booked: { $cond: { if: { $eq: ['$status', 'booked'] }, then: 1, else: 0 } },\n          finished: { $cond: { if: { $eq: ['$status', 'finished'] }, then: 1, else: 0 } },\n          archived: { $cond: { if: { $eq: ['$status', 'archived'] }, then: 1, else: 0 } },\n          validated: { $cond: { if: { $eq: ['$validated', true] }, then: 1, else: 0 } },\n          rejected: { $cond: { if: { $eq: ['$validated', false] }, then: 1, else: 0 } },\n          finishedDate: '$finishedDate'\n        }\n      },\n      {\n        $group: {\n          _id: '$_id',\n          booked: { $sum: '$booked' },\n          finished: { $sum: '$finished' },\n          archived: { $sum: '$archived' },\n          validated: { $sum: '$validated' },\n          rejected: { $sum: '$rejected' },\n          latest: { $max: '$finishedDate' },\n          count: { $sum: 1 }\n        }\n      }\n    ];\n    return this.aggregateQuery('missions', filters, options, null, null, false, null, customFilter).pipe(\n      map((stats: any) => {\n        if (stats && stats.length > 0) {\n          stats[0].available = (stats[0].count || 0) - (stats[0].finished || 0) - (stats[0].booked || 0) - (stats[0].archived || 0);\n          stats[0].tobevalidated = (stats[0].finished || 0) - (stats[0].validated || 0) - (stats[0].rejected || 0);\n        }\n        return stats;\n      })\n    );\n  }\n\n  setTimescale(filters: Filters, timescale: string, dateField = 'finishedDate', endDate?: Date | string, previous: boolean = false) {\n    if (timescale) {\n      filters = filters || [];\n      filters.forEach(fs => {\n        fs = fs || [];\n        remove(fs, (f: any) => f.field === dateField);\n        fs.push({\n          field: dateField,\n          operator: { _id: 'between', interval: true },\n          value: getStartAndEndDates(timescale, endDate, undefined, undefined, previous)\n        });\n      });\n    }\n  }\n\n  private _hasFiles(entity, suffixs: Array<string> = []): boolean {\n    let retVal = false;\n    for (let prop in entity) {\n      if (entity.hasOwnProperty(prop) && this.files.isImageFile(entity[prop])) {\n        retVal = true;\n      }\n      forEach(suffixs, suffix => {\n        if (suffix) {\n          let object = get(entity, prop + suffix);\n          if (isArray(object)) {\n            // for multiphoto field, value is an array;\n            let extraDataSuffix = '.extraData';\n            let extraData = get(entity, prop + extraDataSuffix);\n            object.forEach((v, index) => {\n              if (this.files.isImageFile(v)) {\n                retVal = true;\n              }\n              if (extraData && extraData[index] && extraData[index].edit) {\n                if (this.files.isImageFile(extraData[index].edit)) {\n                  retVal = true;\n                }\n              }\n            });\n          } else {\n            if (this.files.isImageFile(get(entity, prop + suffix))) {\n              retVal = true;\n            }\n          }\n        }\n      });\n    }\n    return retVal;\n  }\n\n  private _getFileProperties(entity, suffixs: Array<string> = []): Array<string> {\n    let retVal = [];\n    for (let prop in entity) {\n      if (entity.hasOwnProperty(prop) && this.files.isImageFile(entity[prop])) {\n        retVal.push(prop);\n      }\n      forEach(suffixs, suffix => {\n        if (suffix) {\n          let objectPath = get(entity, prop + suffix);\n          // for multiphoto field, value is an array; and for todo with linked multi photo we need to do it to\n          if (isArray(objectPath)) {\n            let extraDataSuffixs = ['.extraData', '.value.fieldExtra'];\n            extraDataSuffixs.forEach(extraDataSuffix => {\n              let extraData = get(entity, prop + extraDataSuffix);\n              objectPath.forEach((v, index) => {\n                if (this.files.isImageFile(v)) {\n                  retVal.push(prop + suffix + '[' + index + ']');\n                }\n                if (extraData && extraData[index] && extraData[index].edit) {\n                  if (this.files.isImageFile(extraData[index].edit)) {\n                    retVal.push(prop + extraDataSuffix + '[' + index + ']' + '.edit');\n                  }\n                }\n              });\n            });\n          } else {\n            if (this.files.isImageFile(objectPath)) {\n              retVal.push(prop + suffix);\n            }\n          }\n        }\n      });\n    }\n    retVal = uniq(retVal);\n    return retVal;\n  }\n}\n\nexport function getStartAndEndDates(timescale, endDate?: Date | string, amount?: number, notsliding?: boolean, previous: boolean = false) {\n  let lastDate = endDate || new Date();\n  amount = amount || 7;\n  let period = 'days';\n  let startof = 'day';\n  switch (timescale) {\n    case 'last30days':\n      amount = 30;\n      period = 'days';\n      break;\n    case 'last90days':\n      amount = 90;\n      period = 'days';\n      break;\n    case 'last365days':\n      amount = 365;\n      period = 'days';\n      break;\n    case 'lastweek':\n      amount = 0;\n      period = 'weeks';\n      break;\n    case 'lastmonth':\n      amount = 0;\n      period = 'months';\n      startof = 'month';\n      break;\n    case 'lastquarter':\n      amount = 2;\n      period = 'months';\n      startof = 'month';\n      break;\n    case 'lastyear':\n      amount = 0;\n      period = 'years';\n      startof = 'year';\n      break;\n    case 'last7days':\n      amount = 7;\n      period = 'days';\n      startof = 'day';\n      break;\n\n    default:\n      if (notsliding) {\n        amount = amount ? amount - 1 : 0;\n        period = timescale;\n        startof = timescale;\n      } else {\n        amount = amount || 1;\n        period = timescale;\n        startof = 'day';\n      }\n\n      break;\n  }\n\n  let dateFrom = startOf(dateAdd(utc(toDate(lastDate)), period, -amount), startof);\n  let dateTo = toDate(lastDate);\n\n  if (previous) {\n    dateFrom = dateAdd(dateFrom, period, -amount);\n    dateTo = dateAdd(dateTo, period, -amount);\n  }\n\n  //use .utc() to get the startOf with no offset issues\n  return [dateFrom.toISOString(), dateTo.toISOString()];\n}\n","import { Models } from '../../services/models/models.service';\nimport { IFormField } from '@shared/stencil';\n\nexport function Editable(className: string, config: IFormField) {\n  return function decoratorFactory(target: Object, decoratedPropertyName?: string): void {\n    config.name = config.name || decoratedPropertyName;\n    config.filterName = config.filterName || config.name;\n    if (!config.title) {\n      config.title = config.name.toUpperCase();\n    }\n    if (config.collectionName && !config.tag && config.name !== '_acl.groups.r' && config.collectionName !== 'groups') {\n      config.filterName += 'Ref';\n    }\n\n    if (Models) {\n      Models.addFormField(className, config);\n    }\n  };\n}\n","import { Models } from '../../services/models/models.service';\n\nexport function Searchable(className: string) {\n  return function decoratorFactory(target: Object, decoratedPropertyName: string): void {\n    if (Models) {\n      Models.addSearchableField(className, decoratedPropertyName);\n    }\n  };\n}\n","import { Entity } from '../../interfaces/entity/entity.interface';\nimport { Models } from '../../services/models/models.service';\n\nexport interface IModelConfig {\n  collectionName?: string;\n  className: string;\n  fields?: Array<string>;\n  include?: any;\n  searchSubquery?: { collectionName: string; field: string; values: string };\n  feathersService?: string;\n  detailComponent?: string;\n  icon?: string;\n}\n\nexport function Model(config: IModelConfig) {\n  return function(target: typeof Entity) {\n    if (Models) {\n      Models.setCollectionName(config.className, config.collectionName, config.fields, config.include, config.searchSubquery, config.feathersService, target, null, config.detailComponent, config.icon);\n    }\n  };\n}\n\nexport function ModelExtended(config: { baseClass: string; extendedClass: string }) {\n  return function(target: any) {\n    Models.addBaseModel(config.extendedClass, config.baseClass, target);\n  };\n}\n","import { IFormField, MOBILE_FORM_FIELDS_ALL, FormFieldType, ICondition, IConditionalField } from '@shared/stencil';\n\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { Model } from '../../decorators/model/model.decorator';\nimport { CONDITION_TYPES, ROLES, ROLES_ASK, ROLES_CONDITIONS } from './icondition.interface';\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\n\nimport { map } from 'lodash-es';\n\nexport { CONDITION_TYPES, ROLES, ROLES_ASK, ROLES_CONDITIONS };\n\nlet conditions = {\n  isNotField: 'type!=\"field\"',\n  isField: 'type==\"field\"',\n  isTag: 'type==\"tags\"',\n  isGroup: 'type==\"groups\"',\n  isSelect: 'field.type==\"selectmulti\" or field.type==\"selectbuttonsmulti\"',\n  isToggle: 'field.type==\"checkbox\" or field.type==\"toggle\"',\n  isAutocomplete: 'field.type==\"select\" or field.type==\"selectbuttons\" or field.type==\"autocomplete\"',\n  isFieldSimple: 'type==\"field\" and (field.type==\"text\" or field.type==\"email\" or field.type==\"number\" or field.type==\"formula\" or field.type==\"date\" or field.type==\"tel\" or field.type==\"time\" or field.type==\"range\" or field.type==\"starrating\")',\n  isFieldWithValues: 'type==\"field\" and (field.type==\"checkbox\" or field.type==\"toggle\" or field.type==\"select\" or field.type==\"selectmulti\" or field.type==\"selectbuttons\" or field.type==\"selectbuttonsmulti\" or field.type==\"autocomplete\" or field.type==\"selectimage\")'\n};\n\nexport function getGroupsTransform(res: ResponseObject) {\n  if (res.data && res.data.filter) {\n    res.data = res.data.filter(g => ROLES.indexOf(g._id) < 0 && g.isRole !== true);\n  }\n  return res;\n}\n\nexport function isNotInformationField(m) {\n  return m.type !== FormFieldType.information;\n}\n\nexport function getFormFieldValues() {\n  return map(MOBILE_FORM_FIELDS_ALL.filter(isNotInformationField), 'type');\n}\n\n@Model({ className: 'Condition' })\nexport class Condition extends ICondition {\n  @Editable('Condition', { type: FormFieldType.text, required: true })\n  title: string;\n\n  @Editable('Condition', {\n    type: FormFieldType.autocomplete,\n    translate: true,\n    values: CONDITION_TYPES,\n    required: true\n  })\n  type: string;\n\n  @Editable('Condition', {\n    type: FormFieldType.autocomplete,\n    condition: conditions.isField,\n    required: true,\n    idAttributeName: 'name'\n  })\n  field?: IFormField;\n\n  // { condition: conditions.isSelect, values: ['in', 'notin', 'containsall'] }\n  // contains all : check that all values are present.\n  // Deactivated for the moment to be compatible with the V2\n  @Editable('Condition', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    multiple: false,\n    translate: true,\n    condition: 'type',\n    conditionalValues: [{ condition: conditions.isNotField, values: ['in', 'notin'] }, { condition: conditions.isSelect, values: ['in', 'notin'] }, { condition: conditions.isToggle, values: ['equals', 'notequals'] }, { condition: conditions.isAutocomplete, values: ['equals', 'in', 'notin'] }],\n    defaultValues: ['equals', 'notequals', 'greaterthan', 'lessthan']\n  })\n  operator: string;\n\n  @Editable('Condition', {\n    type: FormFieldType.autocomplete,\n    condition: conditions.isTag,\n    tag: true,\n    multiple: true,\n    collectionName: 'locations',\n    required: true\n  })\n  tags?: Array<string>;\n\n  @Editable('Condition', {\n    title: 'GROUPS',\n    required: true,\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    condition: conditions.isGroup,\n    multiple: true,\n    clearable: false\n  })\n  group?: Array<string>;\n\n  @Editable('Condition', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    condition: conditions.isFieldWithValues,\n    dynamicValues: 'field.values',\n    defaultValues: ['true', 'false'],\n    multiple: true\n  })\n  values: Array<any>;\n\n  @Editable('Condition', {\n    dynamicType: 'field.type',\n    defaultType: FormFieldType.text,\n    required: true,\n    condition: conditions.isFieldSimple\n  })\n  value: any;\n}\n\n@Model({ className: 'ConditionalField' })\nexport class ConditionalField extends IConditionalField {\n  @Editable('ConditionalField', { type: FormFieldType.text, readonly: true, title: 'FIELDIF' })\n  fieldTitle: string;\n\n  @Editable('ConditionalField', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    multiple: false,\n    translate: true,\n    title: 'FIELDIS',\n    conditionalValues: [{ condition: conditions.isNotField, values: ['in', 'notin'] }, { condition: conditions.isSelect, values: ['in', 'notin'] }, { condition: conditions.isToggle, values: ['equals', 'notequals'] }, { condition: conditions.isAutocomplete, values: ['equals', 'in', 'notin'] }],\n    defaultValues: ['equals', 'notequals', 'greaterthan', 'lessthan']\n  })\n  operator: string;\n\n  @Editable('ConditionalField', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    condition: conditions.isFieldWithValues,\n    dynamicValues: 'field.values',\n    defaultValues: ['true', 'false'],\n    multiple: true\n  })\n  values: Array<any>;\n\n  @Editable('ConditionalField', {\n    dynamicType: 'field.type',\n    defaultType: FormFieldType.text,\n    required: true,\n    condition: conditions.isFieldSimple\n  })\n  value: any;\n\n  @Editable('ConditionalField', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    title: 'FIELDTYPE',\n    values: getFormFieldValues(),\n    translate: true\n  })\n  newFieldType: string;\n\n  @Editable('ConditionalField', { type: FormFieldType.text, required: true, title: 'TITLE' })\n  newfieldTitle: string;\n\n  @Editable('ConditionalField', { title: 'INSTRUCTIONS', type: FormFieldType.textarea })\n  newfieldDescription: string;\n\n  @Editable('ConditionalField', { title: 'MANDATORY', type: FormFieldType.checkbox })\n  newFieldRequired: boolean;\n}\n","export const ADMIN_FILES_TYPE = ['locations', 'user', 'geofilters', 'campaignfilters', 'products', 'locationtypes'];\nexport const FORMCREATOR_FILES_TYPE = ['pages'];\n\nexport const FORM_FILES_IMAGE_MIME = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif', 'image/bmp'];\nexport const FORM_FILES_IMAGE_FILTER = [[{ field: 'mimeType', operator: { _id: 'inq' }, value: FORM_FILES_IMAGE_MIME }]];\n\nexport const FORM_FILES_GROUP_FILTER = [[{ field: 'mimeType', operator: { _id: 'inq' }, value: FORM_FILES_IMAGE_MIME }, { field: 'tags', operator: { _id: 'inq' }, value: ['group'] }]];\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { FormFieldType, ITenant, ILocationKpi } from '@shared/stencil';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FORM_FILES_IMAGE_FILTER } from '../constants/constants.interface';\n\n@Model({\n  className: 'Tenant',\n  collectionName: 'tenants',\n  fields: ['*'],\n  include: [],\n  icon: 'yo-company'\n})\nexport class Tenant extends ITenant {\n  @Editable('Tenant', { required: true, type: FormFieldType.text })\n  @Searchable('Tenant')\n  name: string;\n\n  @Editable('Tenant', { required: false, type: FormFieldType.text })\n  @Searchable('Tenant')\n  title: string;\n\n  @Editable('Tenant', { required: false, type: FormFieldType.textarea })\n  @Searchable('Tenant')\n  description: string;\n\n  @Editable('Tenant', {\n    type: FormFieldType.autocomplete,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    clearable: true,\n    fixedPosition: true,\n    maxWidth: 160,\n    maxHeight: 160,\n    crop: 'circle',\n    collectionName: 'files',\n    title: 'ICON',\n    columnDefinition: { name: '_downloadURL' },\n    filterable: false,\n    sortable: false\n  })\n  icon: any;\n\n  @Editable('Tenant', { type: FormFieldType.toggle })\n  ssoOnly: boolean;\n\n  @Editable('Tenant', { type: FormFieldType.toggle })\n  protected: boolean;\n\n  @Editable('Tenant', {\n    type: FormFieldType.json,\n    filterable: false,\n    sortable: false,\n    suppressExport: true\n  })\n  locationKpis?: Array<ILocationKpi>;\n}\n","import { ILocationType, FormFieldType } from '@shared/stencil';\nimport { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { getGroupsTransform, ROLES_CONDITIONS } from '../condition/condition.interface';\nimport { Tenant } from '../tenant/tenant.interface';\n\n@Model({\n  className: 'LocationType',\n  collectionName: 'locationtypes',\n  fields: ['*'],\n  include: ['_tenant'],\n  icon: 'yo-categories'\n})\nexport class LocationType extends ILocationType {\n  // export class LocationType implements IEntity {\n  @Editable('LocationType', {\n    type: FormFieldType.text,\n    visible: false,\n    forceExport: true,\n    exportOrder: 1\n  })\n  _id?: string;\n\n  @Editable('LocationType', { type: FormFieldType.text, required: true, exportOrder: 2 })\n  @Searchable('LocationType')\n  name: string;\n\n  @Editable('LocationType', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    allowCustomTag: true,\n    collectionName: 'groups',\n    multiple: true,\n    clearable: false,\n    required: true,\n    idOnly: true,\n    filters: [[{ field: 'type', operator: { _id: 'nin' }, value: ['plan'] }, { field: 'isRole', operator: { _id: 'neq' }, value: true }]],\n    hiddenFields: ['isRole', 'type'],\n    mapTransform: getGroupsTransform\n  })\n  group?: Array<any>;\n\n  @Editable('LocationType', {\n    type: FormFieldType.number,\n    readonly: true,\n    visible: false,\n    forceExport: true,\n    exportOrder: 4\n  })\n  count?: number;\n\n  @Editable('LocationType', {\n    required: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    condition: [ROLES_CONDITIONS.isAdmin],\n    collectionName: 'tenants',\n    multiple: false,\n    columnDefinition: { name: 'name' }\n  })\n  _tenant: Tenant;\n  _tenantRef?: string;\n}\n","import { Models } from '../../services/models/models.service';\n\nexport function Mapping(className: string, config: { order: number }) {\n  return function decoratorFactory(target: Object, decoratedPropertyName: string): void {\n    if (Models) {\n      Models.addMappingField(className, decoratedPropertyName, config.order);\n    }\n  };\n}\n","import { IProperty } from '../entity/entity.interface';\nimport { FormFieldType, ILocation, IKpiData } from '@shared/stencil';\nimport { LocationType } from '../location-type/location-type.interface';\nimport { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { Mapping } from '../../decorators/mapping/mapping.decorator';\nimport { ROLES_CONDITIONS } from '../condition/icondition.interface';\nimport { Tenant } from '../tenant/tenant.interface';\n\nexport const LOCATION_GEOCODESTATUS = ['file', 'geocoder', 'place', 'prediction', 'error'];\n\nexport function onAddressChange(value, data, field) {\n  if (value && value._geoloc) {\n    data._geoloc = value._geoloc;\n    (<any>field)._geoloc = value._geoloc;\n    data.address = value.address;\n  }\n}\n\nexport function onTypeChange(value, data) {\n  if (value && value._id) {\n    data.typeRef = value._id;\n  }\n}\n\n@Model({\n  className: 'Location',\n  collectionName: 'locations',\n  fields: ['*', 'type.name'],\n  include: ['type', '_tenant'],\n  icon: 'yo-store'\n})\nexport class Location implements ILocation {\n  @Mapping('Location', { order: 12 })\n  @Editable('Location', {\n    type: FormFieldType.text,\n    visible: false,\n    forceExport: true,\n    exportOrder: 13,\n    filterable: false\n  })\n  _id: string;\n\n  @Mapping('Location', { order: 11 })\n  @Editable('Location', {\n    type: FormFieldType.text,\n    columnDefinition: { width: 100 },\n    exportOrder: 12\n  })\n  @Searchable('Location')\n  clientid: string;\n\n  @Mapping('Location', { order: 0 })\n  @Editable('Location', {\n    required: true,\n    type: FormFieldType.text,\n    exportOrder: 1,\n    sortable: true\n  })\n  @Searchable('Location')\n  title: string;\n\n  @Mapping('Location', { order: 1 })\n  @Editable('Location', {\n    required: true,\n    type: FormFieldType.address,\n    filterName: '_geoloc',\n    columnDefinition: { width: 350 },\n    showMap: true,\n    exportOrder: 2,\n    onChange: onAddressChange\n  })\n  @Searchable('Location')\n  address: string;\n\n  @Mapping('Location', { order: 15 })\n  @Editable('Location', {\n    type: FormFieldType.photo,\n    filterable: false,\n    title: 'PHOTO',\n    columnDefinition: { width: 52 },\n    exportOrder: 16,\n    sortable: false,\n    allowLibrary: true\n  })\n  imageData?: string;\n\n  @Mapping('Location', { order: 13 })\n  @Editable('Location', {\n    type: FormFieldType.checkbox,\n    columnDefinition: { width: 40 },\n    exportOrder: 14,\n    filterable: true\n  })\n  vip: boolean;\n\n  @Mapping('Location', { order: 9 })\n  @Editable('Location', {\n    title: 'LOCATIONTAGS',\n    type: FormFieldType.autocomplete,\n    tag: true,\n    collectionName: 'locations',\n    multiple: true,\n    subQuery: { field: 'locationRef', values: '_id' },\n    icon: 'yo-tag',\n    exportOrder: 10\n  })\n  tags: Array<string>;\n\n  @Mapping('Location', { order: 2 })\n  @Editable('Location', {\n    type: FormFieldType.autocomplete,\n    collectionName: 'locationtypes',\n    required: true,\n    columnDefinition: { name: 'name' },\n    exportOrder: 3,\n    filterableAdvanced: true,\n    onChange: onTypeChange,\n    filterable: true\n  })\n  type: LocationType;\n  typeRef: string;\n\n  @Mapping('Location', { order: 14 })\n  @Editable('Location', {\n    type: FormFieldType.autocomplete,\n    collectionName: 'missiondescriptions',\n    clearable: true,\n    multiple: true,\n    filterable: false,\n    sortable: false,\n    suppressExport: true,\n    filters: [[{ field: 'archived', operator: { _id: 'neq' }, value: true }]],\n    hiddenFields: ['archived']\n  })\n  missiondescriptions?;\n  missiondescriptionsRef?: Array<string>;\n\n  @Mapping('Location', { order: 10 })\n  @Editable('Location', {\n    title: 'NOTIFICATIONEMAILS',\n    type: FormFieldType.emailreport,\n    showUsers: true,\n    stateful: false,\n    tab: 'INFORMATION',\n    exportOrder: 11,\n    filterableAdvanced: true\n  })\n  notificationemail?: Array<string>;\n\n  @Mapping('Location', { order: 5 })\n  @Editable('Location', {\n    type: FormFieldType.text,\n    tab: 'INFORMATION',\n    exportOrder: 6,\n    filterableAdvanced: true\n  })\n  @Searchable('Location')\n  contactname?: string;\n\n  @Mapping('Location', { order: 6 })\n  @Editable('Location', {\n    type: FormFieldType.email,\n    tab: 'INFORMATION',\n    exportOrder: 7,\n    filterableAdvanced: true\n  })\n  contactemail?: string;\n\n  @Mapping('Location', { order: 7 })\n  @Editable('Location', {\n    type: FormFieldType.text,\n    tab: 'INFORMATION',\n    exportOrder: 8,\n    filterableAdvanced: true\n  })\n  contactphone?: string;\n\n  @Mapping('Location', { order: 8 })\n  @Editable('Location', {\n    type: FormFieldType.textarea,\n    tab: 'INFORMATION',\n    exportOrder: 9,\n    filterableAdvanced: true\n  })\n  info?: string;\n\n  @Editable('Location', {\n    readonly: true,\n    type: FormFieldType.autocomplete,\n    values: LOCATION_GEOCODESTATUS,\n    clearable: false,\n    filterableAdvanced: true,\n    suppressExport: true\n  })\n  status?: string;\n\n  @Mapping('Location', { order: 4 })\n  @Editable('Location', {\n    visible: false,\n    exportOrder: 5,\n    forceExport: true,\n    filterable: false,\n    sortable: false\n  })\n  placesearch?: string;\n\n  @Mapping('Location', { order: 3 })\n  @Editable('Location', {\n    visible: false,\n    forceExport: true,\n    exportOrder: 4,\n    filterable: false,\n    sortable: false\n  })\n  _geoloc: [number, number];\n\n  @Editable('Location', {\n    type: FormFieldType.autocomplete,\n    tab: 'PROPERTIES',\n    allowCustomTag: true,\n    multiple: true,\n    filterable: false,\n    sortable: false,\n    suppressExport: true,\n    condition: ROLES_CONDITIONS.hasProductBatch\n  })\n  aisles?: string[];\n\n  @Editable('Location', {\n    type: FormFieldType.text,\n    tab: 'PROPERTIES',\n    condition: ROLES_CONDITIONS.hasProductBatch\n  })\n  smartTagId?: string;\n\n  @Editable('Location', {\n    type: FormFieldType.json,\n    tab: 'PROPERTIES',\n    filterable: false,\n    sortable: false,\n    suppressExport: true,\n    condition: ROLES_CONDITIONS.isAdmin\n  })\n  properties?: IProperty[];\n\n  distance?: number;\n  stats?: Array<{ title: string; value: number; color: string }>;\n\n  @Editable('Location', {\n    required: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    condition: [ROLES_CONDITIONS.isAdmin],\n    collectionName: 'tenants',\n    multiple: false,\n    columnDefinition: { name: 'name' }\n  })\n  _tenant?: Tenant;\n  _tenantRef?: string;\n\n  lastVisit?: Date;\n  countVisits?: number;\n\n  @Editable('Location', {\n    visible: false,\n    type: FormFieldType.toggle,\n    filterable: false,\n    invertedSort: true\n  })\n  hasAvailableMissions?: boolean;\n\n  @Editable('Location', {\n    visible: false,\n    type: FormFieldType.number,\n    filterable: false,\n    invertedSort: true\n  })\n  availableMissions?: number;\n\n  kpiData?: Array<IKpiData>;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, IUser, IUserSettings, ISimpleUser, IRole, IRoles } from '@shared/stencil';\nimport { Location } from '../location/location.interface';\nimport { Tenant } from '../tenant/tenant.interface';\nimport { getGroupsTransform, ROLES_CONDITIONS } from '../condition/condition.interface';\n\nimport { startCase } from 'lodash-es';\n\nlet conditions = {\n  isCreate: 'not getAttributeValue(\"_ect\")',\n  isUpdate: 'getAttributeValue(\"_ect\")',\n  isNotUpdateMultiple: 'not (getAttributeValue(\"_id\") == \"multiple\")',\n  //isTeam: ' isTeam == 1',\n  //isNotTeam: ' not (isTeam == 1)',\n  isNotSarahMartin: 'not (username == \"smartin@yoobic.com\")',\n  isNotYoobicAdmin: 'not (endsWith(getAttributeValue(\"username\"),\"@yoobic.com\") == 1 and length(\"_acl.groups.r\") == 0)'\n};\n\nexport function onUserLocationChange(value, data) {\n  if (!value) {\n    data.locationRef = null;\n  }\n}\n\n@Model({\n  className: 'User',\n  collectionName: 'user',\n  fields: ['*'],\n  include: ['location', '_tenant'],\n  icon: 'yo-user'\n})\nexport class User extends IUser {\n  @Editable('User', {\n    type: FormFieldType.text,\n    visible: false,\n    forceExport: true,\n    exportOrder: 11\n  })\n  _id?: string;\n\n  @Editable('User', {\n    type: FormFieldType.photo,\n    filterable: false,\n    title: 'PHOTO',\n    columnDefinition: { width: 52 },\n    exportOrder: 10,\n    sortable: false,\n    allowLibrary: true\n  })\n  imageData?: string;\n\n  @Editable('User', {\n    required: true,\n    flex: 100,\n    type: FormFieldType.email,\n    sortable: true,\n    disableAutocomplete: true,\n    condition: conditions.isNotUpdateMultiple,\n    readonly: conditions.isUpdate,\n    exportOrder: 1\n  })\n  @Searchable('User')\n  username: string;\n\n  @Editable('User', {\n    required: false,\n    flex: 100,\n    type: FormFieldType.email,\n    disableAutocomplete: true,\n    exportOrder: 6\n  })\n  @Searchable('User')\n  email?: string;\n\n  @Editable('User', {\n    required: true,\n    type: FormFieldType.password,\n    secondary: true,\n    icon: 'yo-password',\n    disableAutocomplete: true,\n    condition: ROLES_CONDITIONS.isAdminOrClientAdmin,\n    filterable: false,\n    sortable: false,\n    exportOrder: 2\n  })\n  password?: string;\n\n  @Editable('User', {\n    required: true,\n    flex: 100,\n    type: FormFieldType.text,\n    sortable: true,\n    exportOrder: 4\n  })\n  @Searchable('User')\n  firstName?: string;\n\n  @Editable('User', {\n    flex: 100,\n    required: true,\n    type: FormFieldType.text,\n    sortable: true,\n    exportOrder: 5\n  })\n  @Searchable('User')\n  lastName?: string;\n\n  @Editable('User', {\n    required: true,\n    filterable: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    condition: [ROLES_CONDITIONS.isAdmin],\n    collectionName: 'tenants',\n    multiple: false,\n    columnDefinition: { name: 'name' }\n  })\n  _tenant: Tenant;\n\n  @Editable('User', {\n    type: FormFieldType.toggle,\n    flex: 100,\n    title: 'TEAM',\n    exportOrder: 12,\n    condition: [conditions.isCreate, ROLES_CONDITIONS.isAdmin],\n    filterableAdvanced: true\n  })\n  isTeam?: boolean;\n\n  @Editable('User', {\n    title: 'USERTAGS',\n    type: FormFieldType.autocomplete,\n    tag: true,\n    collectionName: 'user',\n    readonly: ROLES_CONDITIONS.isNeitherAdminNorClientAdmin,\n    multiple: true,\n    icon: 'yo-flag',\n    subQuery: { field: 'ownerRef', values: '_id' },\n    exportOrder: 13\n  })\n  tags?: Array<string>;\n\n  @Editable('User', {\n    flex: 100,\n    required: true,\n    filterable: true,\n    readonly: ROLES_CONDITIONS.isNeitherAdminNorClientAdmin,\n    type: FormFieldType.autocomplete,\n    exportOrder: 15,\n    values: IRoles,\n    translate: true,\n    filterableAdvanced: true\n  })\n  role?: IRole;\n\n  @Editable('User', {\n    flex: 50,\n    type: FormFieldType.tel,\n    exportOrder: 7,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  telephone?: string;\n\n  @Editable('User', {\n    flex: 50,\n    type: FormFieldType.text,\n    exportOrder: 8,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  company?: string;\n\n  //@Editable('User', { flex: 100, type: FormFieldType.text, exportOrder: 16, filterableAdvanced: true })\n  position?: string;\n\n  @Editable('User', {\n    flex: 50,\n    type: FormFieldType.date,\n    suppressExport: true,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  dateOfBirth?: string;\n\n  @Editable('User', {\n    flex: 50,\n    type: FormFieldType.autocomplete,\n    values: ['MALE', 'FEMALE'],\n    translate: true,\n    suppressExport: true,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  gender?: string;\n\n  //@Editable('User', { type: FormFieldType.email, condition: conditions.isNotTeam, exportOrder: 17, filterableAdvanced: true })\n\n  @Editable('User', { type: FormFieldType.address, exportOrder: 9, advanced: true })\n  address?: any;\n\n  @Editable('User', {\n    title: 'LOCATION',\n    filterable: true,\n    type: FormFieldType.autocomplete,\n    onChange: onUserLocationChange,\n    collectionName: 'locations',\n    deleteOnHidden: false,\n    readonly: ROLES_CONDITIONS.isNotManager,\n    suppressExport: true,\n    clearable: true\n  }) //, conditions.isNotYoobicAdmin\n  location?: Location;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    visible: false,\n    forceExport: true,\n    exportOrder: 14,\n    filterable: false\n  })\n  locationRef?: string;\n\n  @Editable('User', {\n    required: true,\n    name: '_acl.groups.r',\n    columnDefinition: { name: '_acl?.groups?.r', forceName: true },\n    title: 'GROUPS',\n    condition: <any>[ROLES_CONDITIONS.isAdminOrClientAdmin, <any>conditions.isNotSarahMartin, conditions.isNotYoobicAdmin],\n    type: FormFieldType.autocomplete,\n    allowCustomTag: true,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    multiple: true,\n    clearable: false,\n    exportOrder: 3,\n    deleteOnHidden: false,\n    mapTransform: getGroupsTransform\n  })\n  _aclGroupsR?: any;\n\n  @Editable('User', {\n    type: FormFieldType.date,\n    name: '_lmt',\n    title: 'LASTSEEN',\n    sortable: true,\n    filterable: true,\n    readonly: true,\n    suppressExport: true,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  lastSeen?: any;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    readonly: true,\n    suppressExport: false,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  version?: any;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    readonly: true,\n    suppressExport: false,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  mobileVersion?: any;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    readonly: true,\n    suppressExport: true,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  platform?: any;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    readonly: true,\n    suppressExport: true,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  language?: string;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    readonly: true,\n    suppressExport: true,\n    filterable: false,\n    advanced: true\n  })\n  device?: string;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    readonly: true,\n    suppressExport: true,\n    filterable: false,\n    advanced: true\n  })\n  uuid?: string;\n\n  @Editable('User', {\n    type: FormFieldType.text,\n    readonly: true,\n    suppressExport: true,\n    filterable: false,\n    advanced: true\n  })\n  target?: string;\n\n  @Editable('User', {\n    title: 'MAXWIDTH',\n    type: FormFieldType.number,\n    condition: ROLES_CONDITIONS.isAdmin,\n    suppressExport: true,\n    filterable: false\n  })\n  photoMaxWidth?: number;\n\n  @Editable('User', {\n    title: 'SSO',\n    type: FormFieldType.toggle,\n    condition: ROLES_CONDITIONS.isAdmin,\n    exportOrder: 18\n  })\n  sso?: boolean;\n\n  @Editable('User', {\n    type: FormFieldType.toggle,\n    condition: ROLES_CONDITIONS.isAdmin,\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  disableTracking?: boolean;\n\n  @Editable('User', {\n    type: FormFieldType.toggle,\n    condition: ROLES_CONDITIONS.isAdmin,\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  disableDatabaseSync?: boolean;\n\n  static getDisplayName(user: any): string {\n    if (user) {\n      let displayName = user.username;\n      if (user.firstName && user.lastName) {\n        displayName = startCase(user.firstName.toString().toLowerCase()) + ' ' + startCase(user.lastName.toString().toLowerCase());\n      } else if (user.first_name && user.last_name) {\n        displayName = startCase(user.first_name.toString().toLowerCase()) + ' ' + startCase(user.last_name.toString().toLowerCase());\n      } else if (user._socialIdentity && user._socialIdentity.facebook && user._socialIdentity.facebook.name) {\n        displayName = user._socialIdentity.facebook.name;\n      } else if (user.email) {\n        displayName = user.email;\n      } else if (user._socialIdentity && user._socialIdentity.facebook && user._socialIdentity.facebook.email) {\n        displayName = user._socialIdentity.facebook.email;\n      }\n      return displayName;\n    }\n    return '';\n  }\n\n  static getSimpleFields() {\n    return ['_id', 'imageData', 'firstName', 'lastName', 'email', 'telephone', 'username'];\n  }\n}\n\n@Model({ className: 'UserSettings' })\nexport class UserSettings extends IUserSettings {\n  //@Editable('UserSettings', { type: FormFieldType.toggle, flex: 100, suppressExport: true, filterable: false, sortable: false })\n  useBigFonts: boolean;\n\n  // @Editable('UserSettings', { type: FormFieldType.toggle, flex: 100, title: 'DISABLEHAPTICFEEDBACK', suppressExport: true, filterable: false, sortable: false })\n  disableHapticFeedback: boolean;\n\n  //@Editable('UserSettings', { type: FormFieldType.toggle, flex: 100, suppressExport: true, filterable: false, sortable: false })\n  showScrollbars: boolean;\n\n  @Editable('UserSettings', {\n    type: FormFieldType.toggle,\n    header: 'NOTIFICATIONS',\n    flex: 100,\n    title: 'DISABLEALLEMAILS',\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  disableEmailNotifications: boolean;\n\n  @Editable('UserSettings', {\n    type: FormFieldType.toggle,\n    flex: 100,\n    title: 'DISABLEALLPUSH',\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  disablePushNotifications: boolean;\n\n  @Editable('UserSettings', {\n    type: FormFieldType.toggle,\n    flex: 100,\n    title: 'DISABLEALLSMS',\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  disableSmsNotifications: boolean;\n\n  @Editable('UserSettings', {\n    type: FormFieldType.toggle,\n    flex: 100,\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  sendFinishedEmail: boolean;\n\n  @Editable('UserSettings', {\n    title: 'MAXWIDTH',\n    header: 'PHOTOS',\n    type: FormFieldType.number,\n    suppressExport: true,\n    filterable: false,\n    min: 600,\n    max: 10240\n  })\n  photoMaxWidth?: number;\n\n  @Editable('UserSettings', {\n    type: FormFieldType.toggle,\n    flex: 100,\n    title: 'DELETEPHOTOSINALBUM',\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  deletePhotos: boolean;\n\n  @Editable('UserSettings', {\n    type: FormFieldType.toggle,\n    flex: 100,\n    header: 'MISSIONS',\n    title: 'ENABLEMISSIONLIVESYNC',\n    condition: ROLES_CONDITIONS.isAdmin,\n    suppressExport: true,\n    filterable: false,\n    sortable: false\n  })\n  enableMissionLiveSync: boolean;\n\n  //@Editable('UserSettings', { type: FormFieldType.toggle, flex: 100, suppressExport: true, filterable: false, sortable: false })\n  allowPhotoEdit: boolean;\n\n  //@Editable('UserSettings', { type: FormFieldType.toggle, flex: 100, suppressExport: true, filterable: false, sortable: false })\n  disablePhotoOrientationAutoFix: boolean;\n\n  //@Editable('UserSettings', { type: FormFieldType.toggle, flex: 100, header: 'SERVICES', suppressExport: true, filterable: false, sortable: false })\n  orderServicesByDate: boolean;\n\n  //@Editable('UserSettings', { type: FormFieldType.toggle, header: 'MISSIONS', flex: 100, suppressExport: true, filterable: false, sortable: false })\n  goToBasket: boolean;\n\n  // @Editable('UserSettings', {\n  //   type: FormFieldType.range,\n  //   header: 'FILTERS',\n  //   min: 1,\n  //   max: 400,\n  //   suppressExport: true,\n  //   filterableAdvanced: true\n  // })\n  radius: any;\n\n  // @Editable('UserSettings', { type: FormFieldType.autocomplete, values: momentTimeZone.tz.names() })\n  timezone: any;\n\n  // @Editable('UserSettings', { type: FormFieldType.selectbuttons, flex: 100, suppressExport: true, filterable: false, sortable: false, values: ['YES', 'NO'] })\n  // test;\n}\n\n@Model({ className: 'SimpleUser' })\nexport class SimpleUser extends ISimpleUser {\n  // export class SimpleUser implements IEntity {\n  @Editable('SimpleUser', { type: FormFieldType.text, visible: false })\n  _id?: string;\n\n  @Editable('SimpleUser', {\n    visible: true,\n    type: FormFieldType.photo,\n    filterable: false,\n    title: 'PHOTO',\n    columnDefinition: { width: 52 }\n  })\n  imageData: string;\n\n  @Editable('SimpleUser', { required: true, type: FormFieldType.email })\n  @Searchable('SimpleUser')\n  username: string;\n\n  @Editable('SimpleUser', { visible: true, required: true, type: FormFieldType.email })\n  @Searchable('SimpleUser')\n  email: string;\n\n  @Editable('SimpleUser', {\n    required: true,\n    type: FormFieldType.password,\n    condition: conditions.isCreate,\n    filterable: false,\n    sortable: false\n  })\n  password: string;\n}\n","import { Editable } from '../../decorators/editable/editable.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { FormFieldType, INotification } from '@shared/stencil';\nimport { Model } from '../../decorators/model/model.decorator';\nimport { User } from '../user/user.interface';\n\n@Model({\n  className: 'Notification',\n  collectionName: 'notifications',\n  fields: ['*', 'sender._id', 'sender.firstName', 'sender.lastName', 'sender.username', 'sender.imageData', 'sender.email', 'sender.telephone'],\n  include: ['sender'], //'creator'\n  icon: 'yo-activity'\n})\nexport class Notification extends INotification {\n  @Editable('Notification', {\n    type: FormFieldType.autocomplete,\n    translate: true,\n    values: ['email', 'notification', 'allnotification'],\n    required: true,\n    filterable: true\n  })\n  mode: 'email' | 'notification' | 'allnotification';\n\n  @Editable('Notification', { type: FormFieldType.text, required: true })\n  @Searchable('Notification')\n  title: string;\n\n  @Editable('Notification', { type: FormFieldType.textarea, required: true })\n  body?: string;\n\n  @Editable('Notification', {\n    type: FormFieldType.datetime,\n    minDate: new Date(),\n    condition: 'mode!=\"sms\"'\n  })\n  scheduledDate?: Date;\n\n  //@Editable('Notification', { type: FormFieldType.autocomplete, values: ['com.ipelia.yoobicv3', 'com.kering.yoobic', 'com.ipelia.yooask'], condition: ROLES_CONDITIONS.isAdmin, clearable: true, translate: true, multiple: true, advanced: true })\n  apps?: Array<string>;\n\n  @Editable('Notification', {\n    type: FormFieldType.autocomplete,\n    collectionName: 'user',\n    icon: 'yo-user',\n    columnDefinition: { name: 'username' },\n    exportOrder: 24,\n    title: 'SENDBY',\n    filterable: true\n  })\n  sender?: User;\n  senderRef?: string;\n}\n","import { Injectable } from '@angular/core';\n\nimport { User } from '../../interfaces/user/user.interface';\nimport { Notification } from '../../interfaces/notification/notification.interface';\nimport { NotificationEvent } from '../../interfaces/notification-event/notification-event.interface';\nimport { Config } from '../config/config.service';\nimport { Requestor } from '../requestor/requestor.service';\n\nimport { Subscription, Observable, Subject, of } from 'rxjs';\n\nimport { Colors, CoreConfig, Log } from '@shared/common';\n\nimport { toDate } from '@shared/stencil';\n\nimport { OneSignal } from '@ionic-native/onesignal/ngx';\nimport { Push as PushNative } from '@ionic-native/push/ngx';\n\nexport * from '../../interfaces/notification/notification.interface';\n\nimport { pick, uniq, compact, union, without, isArray, uniqBy, filter, map, merge, isEmpty, get } from 'lodash-es';\n\n@Injectable()\nexport class Push {\n  private push: any;\n  private tags: Array<string> = ['username', 'language', 'isTeam'];\n  private _notificationReceived = new Subject<NotificationEvent>();\n  private _parentSubscription: Subscription;\n  private currentOneSignalId: string;\n  private registered: boolean = false;\n  private _oneSignalPlayerIdChange = new Subject<string>();\n\n  constructor(private coreConfig: CoreConfig, private log: Log, private config: Config, private rq: Requestor, private oneSignal: OneSignal, private pushNative: PushNative) {}\n\n  get oneSignalPlayerIdChange$(): Observable<string> {\n    return this._oneSignalPlayerIdChange.asObservable();\n  }\n\n  get notificationReceived$(): Observable<NotificationEvent> {\n    return this._notificationReceived.asObservable();\n  }\n\n  registerOneSignal(user: User) {\n    if (this.registered === true) {\n      //|| this.coreConfig.getAppId() === 'uk.co.boots.yoobicoperations'\n      return Promise.resolve(user);\n    }\n    this.registered = true;\n    let onesignalAppId = this.coreConfig.getKey('onesignalAppId');\n    this._parentSubscription = new Subscription();\n    if (this.coreConfig.isCordova()) {\n      //OneSignal.setLogLevel({ logLevel: 4, visualLevel: 4 });\n      this.oneSignal.startInit(onesignalAppId, this.coreConfig.getKey('googleProjectNumber'));\n      this.oneSignal.inFocusDisplaying(this.oneSignal.OSInFocusDisplayOption.None);\n      this._parentSubscription.add(this.oneSignal.handleNotificationReceived().subscribe(notif => this.onNotificationReceived(notif)));\n      this._parentSubscription.add(this.oneSignal.handleNotificationOpened().subscribe(notif => this.onNotificationOpened(notif)));\n      this.oneSignal.endInit();\n\n      return this.oneSignal.getIds().then(\n        retVal => {\n          this.oneSignal.setSubscription(true);\n          this.oneSignal.sendTags(pick(user, this.tags));\n          if (retVal && retVal.userId) {\n            this.currentOneSignalId = retVal.userId;\n            this.updateUserOneSignalIds(user, this.currentOneSignalId);\n            if (user.email) {\n              this.oneSignal.syncHashedEmail(user.email);\n            }\n            if (retVal.pushToken) {\n              this.addToken(user, retVal.pushToken);\n            }\n          }\n          this._oneSignalPlayerIdChange.next(retVal.userId);\n          return user;\n        },\n        err => {\n          this.log.forceLog(err);\n          return user;\n        }\n      );\n    } else if (this.coreConfig.isWeb() && window.OneSignal) {\n      return new Promise((resolve, reject) => {\n        if (!window.OneSignal.isPushNotificationsSupported() || location.hostname === 'localhost') {\n          return resolve(user);\n        }\n        window.OneSignal.push([\n          'init',\n          {\n            appId: onesignalAppId,\n            autoRegister: true,\n            notifyButton: { enable: false },\n            safari_web_id: this.coreConfig.getKey('onesignalSafariWebId')\n          }\n        ]);\n        window.OneSignal.push(() => {\n          window.OneSignal.sendTags(pick(user, this.tags));\n          window.OneSignal.on('notificationDisplay', ev => {\n            this.onNotificationReceived(ev);\n          });\n\n          window.OneSignal.getUserId().then(userId => {\n            this.currentOneSignalId = userId;\n            this.updateUserOneSignalIds(user, this.currentOneSignalId);\n            resolve(user);\n          });\n        });\n      });\n    } else {\n      return Promise.resolve(user);\n    }\n  }\n\n  updateUserOneSignalIds(user, oneSignalId) {\n    if (user) {\n      user.oneSignalId = uniq(compact(union([].concat(user.oneSignalId), [oneSignalId])));\n\n      user.oneSignalAppIds = user.oneSignalAppIds || {};\n      let bundleId = this.coreConfig.getAppId().replace(/\\./g, '_');\n      user.oneSignalAppIds[bundleId] = uniq(compact(union([].concat(user.oneSignalAppIds[bundleId]), [oneSignalId])));\n    }\n  }\n\n  onNotificationReceived(notif: any) {\n    this._notificationReceived.next({ type: 'received', notification: notif });\n  }\n\n  onNotificationOpened(notif: any) {\n    this._notificationReceived.next({\n      type: 'opened',\n      action: notif.action,\n      notification: notif.notification\n    });\n  }\n\n  unregisterOneSignal(user: User) {\n    if (this.coreConfig.isCordova()) {\n      this.oneSignal.setSubscription(false);\n      if (this._parentSubscription) {\n        this._parentSubscription.unsubscribe();\n        this._parentSubscription = null;\n      }\n      user.oneSignalId = without(user.oneSignalId, this.currentOneSignalId);\n      user.oneSignalAppIds = user.oneSignalAppIds || {};\n      let bundleId = this.coreConfig.getAppId().replace(/\\./g, '_');\n      user.oneSignalAppIds[bundleId] = without(user.oneSignalAppIds[bundleId], this.currentOneSignalId);\n      this.registered = false;\n    }\n  }\n\n  addToken(user: User, token: string) {\n    let platform = this.coreConfig.isIOS() ? 'ios' : 'android';\n    if (!user._messaging || !isArray(user._messaging.pushTokens)) {\n      user._messaging = { pushTokens: [] };\n    }\n    user._messaging.pushTokens.push({ token: token, platform: platform });\n    user._messaging.pushTokens = uniqBy(user._messaging.pushTokens, push => push.token);\n    delete (<any>user).messaging;\n  }\n\n  removeToken(user: User, token: string) {\n    if (user._messaging && isArray(user._messaging.pushTokens)) {\n      user._messaging.pushTokens = filter(user._messaging.pushTokens, push => push.token !== token);\n    }\n  }\n\n  getUserTokens(user: User, platform: string) {\n    let tokens = [];\n    if (user._messaging && user._messaging.pushTokens) {\n      tokens = union(map(filter(user._messaging.pushTokens, push => push.platform === platform), 'token'));\n    }\n    return tokens;\n  }\n\n  notifyGroups(groups: string | Array<string>, notification: Notification) {\n    groups = [].concat(groups);\n    if (groups && groups.length > 0) {\n      notification.group = groups;\n      //notification.userQuery = { where: { '_acl.groups.r': { inq: groups } } };\n      return this.notify(notification);\n    } else {\n      return of(null);\n    }\n  }\n\n  notifyUsers(users: Array<User>, notification: Notification) {\n    if (users && users.length > 0) {\n      return this.notify(notification, true, users.map(u => u._id));\n    } else {\n      return of(null);\n    }\n  }\n\n  notifyUserById(userId: string, notification: Notification) {\n    if (userId) {\n      return this.notify(notification, true, [userId]);\n    } else {\n      return of(null);\n    }\n  }\n\n  notifyUsersById(userIds: Array<string>, notification: Notification) {\n    if (userIds && userIds.length > 0) {\n      return this.notify(notification, true, userIds);\n    } else {\n      return of(null);\n    }\n  }\n\n  notifyUsersByQuery(userQuery: any, notification: Notification) {\n    if (!isEmpty(userQuery) && (!isEmpty(userQuery.where) || !isEmpty(userQuery.subQuery.where))) {\n      //notification.userQuery = { where: { _id: { inq: userIds } } };\n      notification.userQuery = userQuery;\n      notification._tenantRef = notification._tenantRef || get(userQuery, ['where', '_tenantRef']) || get(userQuery, ['subQuery', 'where', '_tenantRef']);\n      return this.notify(notification);\n    } else {\n      return of(null);\n    }\n  }\n\n  notify(notification: Notification, noQuery: boolean = false, userIds?: Array<string>) {\n    if (notification.scheduledDate) {\n      notification.scheduledDate = toDate(notification.scheduledDate);\n    }\n    if (notification.userQuery && notification.userQuery.limit !== undefined) {\n      delete notification.userQuery.limit;\n    }\n    if (notification.userQuery && notification.userQuery.field !== undefined) {\n      delete notification.userQuery.field;\n    }\n    notification.notificationOptions = merge(notification.notificationOptions || {}, {\n      ios_badgeType: 'Increase',\n      ios_badgeCount: 1\n    });\n    if (notification.mode === 'allnotification') {\n      (<any>notification).mode = 'all';\n    }\n    if (noQuery) {\n      let url = this.config.apiUrl + 'notifications/sendTargetedNotification';\n      return this.rq.post(url, { userIds, notification });\n    } else {\n      let url = this.config.apiUrl + 'businesslogic/sendNotification';\n      return this.rq.post(url, notification);\n    }\n  }\n\n  //deprecated\n  protected _registerNative(): Promise<string> {\n    if (this.coreConfig.isCordova()) {\n      return new Promise((resolve, reject) => {\n        let promiseFulfilled = false;\n        this.push = this.pushNative.init({\n          android: {\n            senderID: this.coreConfig.getKey('googleProjectNumber'),\n            iconColor: Colors.success,\n            icon: 'notify'\n          },\n          ios: { alert: 'true', badge: 'true', sound: 'false' }\n        });\n        this.push.on('registration').subscribe((data: any) => {\n          promiseFulfilled = true;\n          resolve(data.registrationId);\n        });\n\n        this.push.on('error').subscribe(error => {\n          reject(error);\n        });\n\n        this.push.on('notification').subscribe((data: any) => {});\n        //sometimes on ios if the push are not enable it will not send an error, so we check after 10 sec\n        setTimeout(() => {\n          if (!promiseFulfilled) {\n            reject('timeout');\n          }\n        }, 10000);\n      });\n    } else {\n      return <any>Promise.reject('not cordova');\n    }\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Broker } from '../broker/broker.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Session } from '../session/session.service';\nimport { Push } from '../push/push.service';\nimport { Config } from '../config/config.service';\nimport { User } from '../../interfaces/user/user.interface';\n\nimport { Observable, Subject, throwError, of } from 'rxjs';\nimport { map, catchError, mergeMap, flatMap } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Network, LocalStorage, LocalForageService, CoreConfig } from '@shared/common';\nimport { isPresent, ITenant, IPublicApiToken } from '@shared/stencil';\nimport { assign, some, map as _map, every, pick } from 'lodash-es';\n\n@Injectable()\nexport class Authentication {\n  protected static roleAdmin = 'admin';\n  protected static roleTeam = 'team';\n  protected static roleTrial = 'trial';\n  protected static roleDashboard = 'dashboard';\n  protected static roleManager = 'manager';\n  protected static roleMissionViewer = 'missionviewer';\n\n  public login$ = new Subject<string>();\n  public logout$ = new Subject<string>();\n  public profileUpdated$: EventEmitter<any>;\n\n  constructor(protected rq: Requestor, protected push: Push, protected config: Config, protected broker: Broker, protected network: Network, protected localStorage: LocalStorage, protected localForage: LocalForageService, protected session: Session, protected coreConfig: CoreConfig) {\n    this.profileUpdated$ = new EventEmitter<any>();\n  }\n\n  login(username: string, password: string, roles?: Array<string>): Observable<any> {\n    let url = this.broker.getServerUrl() + 'auth/login';\n    return this.rq.post(url, { username, password, roles }).pipe(\n      map(res => {\n        this.afterLogin(res);\n        return res;\n      }),\n      catchError(res => {\n        this.session.token = null;\n        let err;\n        if (res && res.json) {\n          err = res.json().error;\n        } else if (res && res.error && res.error.error) {\n          err = res.error.error;\n        } else if (res.name) {\n          err = { message: res.name.toUpperCase() };\n        } else {\n          err = { message: 'REQUESTERROR' };\n        }\n        return throwError(err);\n      })\n    );\n  }\n\n  loginSocial(accessToken: string, provider = 'facebook') {\n    let url = this.broker.getServerUrl() + 'auth/' + provider;\n    return this.rq.post(url, { accessToken }).pipe(\n      map(res => {\n        this.afterLogin(res);\n        return res;\n      }),\n      catchError(res => {\n        this.session.token = null;\n        return throwError(res.json().error);\n      })\n    );\n  }\n\n  getLoginAdvancedUrl(tenant: string, method: string, host: string) {\n    let url = this.broker.getServerUrl() + 'auth/' + tenant.toLowerCase() + '/' + method + '/login?host=' + host + '&tokenLocation=' + (this.coreConfig.isCordova() ? 'query' : 'fragment');\n    return url;\n  }\n\n  getTenantAdvancedLoginMethods(tenant: string) {\n    let url = this.broker.getServerUrl() + 'auth/' + tenant.toLowerCase() + '/providers';\n    return this.rq.get(url);\n  }\n\n  getTenantFromToken(token): { _tenantRef?: string; _tenantName?: string; sub?: string } {\n    let jwtHelper: JwtHelperService = new JwtHelperService({});\n    return jwtHelper.decodeToken(token) || {};\n  }\n\n  afterLogin(res) {\n    this.session.token = res.$mcfly$token;\n    this.session.userId = res.userId;\n    this.session.user = res.user;\n    this.session.tenant = res.tenant;\n    this.login$.next('');\n    this.cleanUpLocalStorage();\n    return res;\n  }\n\n  cleanUpLocalStorage() {\n    let keys = ['stats.kpiFilterFormData', 'stats.selectedDescription', 'stats.selectedDashboard', 'stats.customSelectedDashboard'];\n    keys.forEach(key => {\n      this.localStorage.remove(key);\n    });\n  }\n\n  getCurrentSession(): Observable<Session> {\n    if (this.network.isOffline()) {\n      return of(null);\n    }\n    return this.rq.get(this.broker.getApiUrl() + 'businesslogic/getCurrentSession').pipe(\n      map((res: any) => {\n        assign(this.session, res.data);\n        this.session.hasScandit = this.coreConfig.isCordova() ? this.hasRoles(['scandit']) : this.hasRoles(['scandit', 'admin']);\n        return <any>this.session;\n      }),\n      catchError(() => {\n        return of(null);\n      })\n    );\n  }\n\n  doLogout() {\n    let url = this.broker.getApiUrl() + 'user/logout';\n    return this.rq.post(url, {});\n  }\n\n  logout() {\n    let promise = Promise.resolve(null);\n    if (this.config.isTestpen) {\n      if (this.localStorage) {\n        this.localStorage.clear();\n      }\n      if (this.localForage) {\n        this.localForage.clear();\n      }\n    }\n    if (this.session && this.session.user && this.session.user._id) {\n      this.push.unregisterOneSignal(this.session.user);\n      promise = this.updateProfile(this.session.user).toPromise();\n    }\n    this.logout$.next('');\n    return promise.then(() => this.afterLogout(), () => this.afterLogout());\n  }\n\n  afterLogout() {\n    this.doLogout().subscribe(() => {}, () => {});\n    this.network.forceOffline(false, false);\n    this.session.clear().catch(() => {});\n    return Promise.resolve();\n  }\n\n  signup(email: string, imageData: any, password: string) {\n    let user = <any>{ username: email, email, password, imageData };\n    let url = this.broker.getApiUrl() + 'user/signup';\n    return this.rq.post(url, { user }).pipe(\n      mergeMap(() => {\n        return this.login(email, password);\n      })\n    );\n  }\n\n  inviteUsers(users: Array<{ email: string; roles: Array<string>; locationRef?: string }>, groups: Array<string>, password: string = null, sendPassword: boolean = true, appName?: string, appleStoreUrl?: string, playStoreUrl?: string, _tenantRef?: string): Observable<any> {\n    let url = this.broker.getApiUrl() + 'user/invite';\n    let finalPlayStoreUrl = playStoreUrl + this.coreConfig.getAppId();\n    return this.rq.post(url, {\n      users,\n      groups,\n      password,\n      sendPassword,\n      appName,\n      appleStoreUrl,\n      playStoreUrl: finalPlayStoreUrl,\n      _tenantRef\n    });\n  }\n\n  isLoggedIn() {\n    return this.session.token && this.session.token.length > 0 && !this.isTokenExpired(this.session.token);\n  }\n\n  hasRole(role: string) {\n    return this.session.roles && this.session.roles.indexOf(role) >= 0;\n  }\n\n  hasRoles(roles: Array<string>) {\n    return some(_map(roles, role => this.hasRole(role)), t => t === true);\n  }\n\n  hasAllRoles(roles: Array<string>) {\n    return every(roles, role => this.hasRole(role));\n  }\n\n  hasGroup(group: string) {\n    return this.session.groups && this.session.groups.indexOf(group) >= 0;\n  }\n\n  hasGroups(groups: Array<string>) {\n    return some(_map(groups, group => this.hasGroup(group)), t => t === true);\n  }\n\n  hasAllGroups(groups: Array<string>) {\n    return every(groups, group => this.hasGroup(group));\n  }\n\n  isAdmin(checkSmartin: boolean = false) {\n    let retVal = this.hasRole(Authentication.roleAdmin);\n    if (checkSmartin && this.session.user.username !== 'smartin@yoobic.com') {\n      retVal = false;\n    }\n    return retVal;\n  }\n\n  isTrial() {\n    return !this.hasRole(Authentication.roleAdmin) && this.hasRole(Authentication.roleTrial);\n  }\n\n  isDashboard() {\n    return this.hasRole(Authentication.roleDashboard) && !this.isAdmin() && !this.hasRole(Authentication.roleMissionViewer) && !this.hasRole(Authentication.roleManager);\n  }\n\n  isTeam() {\n    return this.hasRole(Authentication.roleTeam);\n  }\n\n  isCrowd() {\n    return !this.hasRole(Authentication.roleTeam);\n  }\n\n  isStore() {\n    return this.session.user && isPresent(this.session.user.locationRef);\n  }\n\n  isStoreManager() {\n    return this.hasRole('store') && this.session.user && this.session.user.locationRef;\n  }\n\n  isRoleAdmin() {\n    return this.getCurrentUser() && this.getCurrentUser().role === 'ROLEADMIN';\n  }\n\n  isRoleEditor() {\n    return this.getCurrentUser() && this.getCurrentUser().role === 'ROLEEDITOR';\n  }\n\n  isRoleViewer() {\n    return this.getCurrentUser() && this.getCurrentUser().role === 'ROLEVIEWER';\n  }\n\n  isRoleManager() {\n    return this.getCurrentUser() && this.getCurrentUser().role === 'ROLEMANAGER';\n  }\n\n  isRoleField() {\n    return this.getCurrentUser() && this.getCurrentUser().role === 'ROLEFIELD';\n  }\n\n  isRoleStoreManager() {\n    return this.getCurrentUser() && this.getCurrentUser().role === 'ROLESTOREMANAGER';\n  }\n\n  isRoleStore() {\n    return this.getCurrentUser() && this.getCurrentUser().role === 'ROLESTORE';\n  }\n\n  hasAccessToOperations() {\n    return this.hasRole('team');\n  }\n\n  hasAccessToBoost() {\n    return this.hasRole('academy');\n  }\n\n  getCurrentUser(): User {\n    return this.session.user;\n  }\n\n  passwordChange(oldPassword: string, newPassword: string) {\n    return this.rq.post(this.broker.getApiUrl() + 'user/changePassword', {\n      oldPassword,\n      newPassword\n    });\n  }\n\n  passwordReset(email, isMagicLink: boolean = false, urlPrefix: string = 'https://yoobic.app.link/') {\n    if (isMagicLink) {\n      return this.rq.post(this.broker.getApiUrl() + 'user/getMagicLink', {\n        username: email,\n        urlPrefix\n      });\n    } else {\n      return this.rq.post(this.broker.getApiUrl() + 'user/reset', { email: email });\n    }\n  }\n\n  passwordResetConfirm(token: string, password: string, host?: string) {\n    let url = host ? 'https://' + host + '/api/' : this.broker.getApiUrl();\n    return this.rq.post(url + 'Endpoints/resetPassword', { password: password }, token, null, true);\n  }\n\n  passwordResetAdmin(user: any, password: string, dontSendMail = false) {\n    return this.rq.post(this.broker.getApiUrl() + 'AdminDashboard/resetPassword', {\n      options: {\n        userPasswordList: [user].map((u: any) => ({\n          username: u.username,\n          _id: u._id,\n          password: password\n        })),\n        dontSendMail: dontSendMail\n      }\n    });\n  }\n\n  impersonate(username: string) {\n    return this.rq.post(this.broker.getApiUrl() + 'AdminDashboard/impersonate', {\n      username\n    });\n  }\n\n  forceLogout(username: string) {\n    return this.rq.post(this.broker.getApiUrl() + 'AdminDashboard/forceLogout', {\n      username\n    });\n  }\n\n  generatePassword() {\n    let length = 8;\n    let charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let retVal = '';\n    for (let i = 0, n = charset.length; i < length; ++i) {\n      retVal += charset.charAt(Math.floor(Math.random() * n));\n    }\n    return retVal;\n  }\n\n  updateProfile(user?: any, skipAcl = false, fields: Array<string> = []) {\n    let userToUpdate: any = user || this.getCurrentUser();\n    if (userToUpdate) {\n      if (!this.isAdmin() && !skipAcl) {\n        this.broker.setAcl(userToUpdate, this.session.groups);\n      }\n      if (fields && fields.length > 0) {\n        userToUpdate = <any>pick(userToUpdate, fields);\n        if (fields.indexOf('_acl') < 0) {\n          skipAcl = true;\n        }\n      }\n      return this.broker.upsert('user', userToUpdate, null, skipAcl).pipe(\n        flatMap(retVal => {\n          return this.broker.getById('user', retVal._id).pipe(\n            map(updatedUser => {\n              this.session.user = updatedUser;\n              return updatedUser;\n            })\n          );\n        })\n      );\n    } else {\n      return of(null);\n    }\n  }\n\n  isTokenExpired(token: string) {\n    let jwtHelper: JwtHelperService = new JwtHelperService({});\n    try {\n      return jwtHelper.isTokenExpired(token);\n    } catch (err) {\n      return true;\n    }\n  }\n\n  setToken(token: string, userId: string) {\n    this.session.token = token;\n    this.session.userId = userId;\n    return this.broker.getById('user', userId).pipe(\n      map((retVal: any) => {\n        this.session.user = retVal;\n        this.profileUpdated$.emit(retVal);\n        return retVal;\n      })\n    );\n  }\n\n  createPublicApiToken(tenant: ITenant) {\n    let url = this.broker.getApiUrl() + 'AdminDashboard/generateServiceAccount';\n\n    return this.rq.post(url, {\n      tenantId: tenant._id\n    });\n  }\n\n  invalidatePublicApiToken(token: IPublicApiToken) {\n    let url = this.broker.getApiUrl() + 'publicAPITokens/' + token._id + '/invalidate';\n    return this.rq.post(url, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanDeactivate, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Authentication } from './authentication.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private authentication: Authentication) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    let retVal = false;\n    if (this.authentication.isLoggedIn()) {\n      if (next.data && next.data['roles']) {\n        retVal = this.authentication.hasRoles(next.data['roles']) || this.authentication.isAdmin();\n      } else {\n        retVal = true;\n      }\n      if (next.data && next.data['excludedRoles'] && !this.authentication.isAdmin()) {\n        retVal = retVal && !this.authentication.hasRoles(next.data['excludedRoles']);\n      }\n    } else {\n      Requestor.unauthorizedEmitter.emit('not logged in');\n    }\n    return retVal;\n  }\n}\n\nexport interface CanComponentDeactivate {\n  canDeactivate: (component: CanComponentDeactivate, route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => boolean | Observable<boolean>;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate, route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    return component && component.canDeactivate ? component.canDeactivate(component, route, state) : true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Config } from '../config/config.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toDate, dateParse, dateFormat, fromNow } from '@shared/stencil';\n\n@Injectable()\nexport class BackupService {\n  private get apiUrl() {\n    return this.config.apiUrl + 'AdminDashboard/';\n  }\n\n  constructor(protected rq: Requestor, protected config: Config) {}\n\n  getAll(date?: Date) {\n    let url = this.apiUrl + 'listBackup';\n    return this.rq\n      .post(url, {\n        clusterName: 'rs-ds039424',\n        date: toDate(date || new Date()).toISOString()\n      })\n      .pipe(\n        map((res: Array<string>) => {\n          if (res && res.map) {\n            res = res\n              .map((name: string) => {\n                let backup: any = { _id: name };\n                let lastIndex = name.lastIndexOf('_');\n                let dateStr = name.substr(lastIndex + 1).replace('.tgz', '');\n                backup.title = fromNow(dateParse(dateStr, 'YYYY-MM-DDTHHmmss.sssZ'));\n                backup.badge = dateFormat(dateParse(dateStr, 'YYYY-MM-DDTHHmmss.sssZ'), 'L LT');\n                backup.description = name;\n                return backup;\n              })\n              .reverse();\n          }\n          return res;\n        })\n      );\n  }\n\n  restore(backupName: string, collections?: Array<string>): Observable<any> {\n    let url = this.apiUrl + 'restoreBackup ';\n    return this.rq.post(url, {\n      s3Key: backupName,\n      collections\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CoreConfig } from '@shared/common';\nimport { Translate } from '@shared/translate';\n\nimport { Config } from '../config/config.service';\nimport { Requestor } from '../requestor/requestor.service';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { isString } from 'lodash-es';\n\n@Injectable()\nexport class Blog {\n  constructor(protected coreConfig: CoreConfig, protected config: Config, protected rq: Requestor, protected translate: Translate) {}\n\n  getUrl() {\n    let url: string;\n    if (this.coreConfig.getAppName() === 'operations') {\n      if (this.translate.getCurrentLanguage() === 'fr') {\n        if (this.coreConfig.isIonic()) {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=20417&public_link=true';\n        } else {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=20415&public_link=true';\n        }\n      } else if (this.translate.getCurrentLanguage() === 'it') {\n        if (this.coreConfig.isIonic()) {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=21144&public_link=true';\n        } else {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=21143&public_link=true';\n        }\n      } else {\n        if (this.coreConfig.isIonic()) {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=20416&public_link=true';\n        } else {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=20414&public_link=true';\n        }\n      }\n    } else if (this.coreConfig.getAppName() === 'boost') {\n      if (this.translate.getCurrentLanguage() === 'fr') {\n        if (this.coreConfig.isIonic()) {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=25008&public_link=true';\n        } else {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=25006&public_link=true';\n        }\n      } else if (this.translate.getCurrentLanguage() === 'it') {\n        if (this.coreConfig.isIonic()) {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=25009&public_link=true';\n        } else {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=25010&public_link=true';\n        }\n      } else {\n        if (this.coreConfig.isIonic()) {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=25007&public_link=true';\n        } else {\n          url = 'https://yoobic.blogin.co/rss.xml?mt=521fe7a42642c458e2403084bad1f468504f2da6&c=25005&public_link=true';\n        }\n      }\n    }\n    return url;\n  }\n\n  get(blogUrl: string, limit?: number, skip?: number): Observable<any> {\n    let url = this.config.apiUrl + 'businesslogic/getBlog';\n    return this.rq.post(url, { url: blogUrl, limit, skip }).pipe(\n      map(retVal => {\n        let items = [];\n        if (retVal && retVal.rss && retVal.rss.channel && retVal.rss.channel.item && retVal.rss.channel.item.length > 0) {\n          items = [].concat(retVal.rss.channel.item);\n        }\n        items.forEach(b => {\n          try {\n            if (b && b.enclosure && b.enclosure.$ && b.enclosure.$.url) {\n              b.background = b.enclosure.$.url;\n            } else {\n              let content = b['content:encoded'];\n              let re = /<img[^>]+src=\"?([^\"\\s]+)\"?[^>]*\\/>/g;\n              let results = re.exec(content);\n              if (results) {\n                b.background = results[1];\n              }\n            }\n            if (b.pubDate && isString(b.pubDate)) {\n              b.pubDate = new Date(b.pubDate);\n            }\n            if (b.background) {\n              b.background = b.background.replace('blog.yoobic.com', 'yoobic.blogin.co');\n            }\n          } catch (err) {}\n        });\n        return items;\n      })\n    );\n  }\n\n  getLatestArticleDate(blogUrl: string) {\n    let url = this.config.apiUrl + 'businesslogic/getBlog';\n    return this.rq.post(url, { url: blogUrl, limit: 1 }).pipe(\n      map(retVal => {\n        let items = [];\n        if (retVal && retVal.rss && retVal.rss.channel && retVal.rss.channel.item && retVal.rss.channel.item.length > 0) {\n          items = [].concat(retVal.rss.channel.item);\n        }\n        if (items && items.length > 0 && items[0]) {\n          return items[0].pubDate;\n        }\n        return null;\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Authentication } from './authentication.service';\nimport { Session } from '../session/session.service';\n\nimport { Network } from '@shared/common';\nimport { Observable, of } from 'rxjs';\n\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\n\n@Injectable()\nexport class CurrentSessionResolver implements Resolve<any> {\n  constructor(private authentication: Authentication, private network: Network) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Session> {\n    if (this.network.isOffline()) {\n      return of(null);\n    }\n    return this.authentication.getCurrentSession();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Filters, SubQuery, IFormField, dateFormat, getUUID, FormFieldType } from '@shared/stencil';\nimport { Translate } from '@shared/translate';\n\nimport { ChartDefinition } from '../../interfaces/chart-definition/chart-definition.interface';\nimport { Dashboard as IDashboard } from '../../interfaces/dashboard/dashboard.interface';\nimport { User } from '../../interfaces/user/user.interface';\nimport { MissionDescription } from '../../interfaces/mission-description/mission-description.interface';\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\n\nimport { Broker } from '../broker/broker.service';\nimport { Session } from '../session/session.service';\n\nimport { cloneDeep, map } from 'lodash-es';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\n@Injectable()\nexport class Dashboard {\n  constructor(protected broker: Broker, protected translate: Translate, protected session: Session) {}\n\n  publish(dashboard: IDashboard, users: Array<User>) {\n    let dashboards = users\n      .filter(u => u._id !== this.session.user._id)\n      .map(user => {\n        let dashboardCopy = cloneDeep(dashboard);\n        // dashboardCopy.title += ' - ' + moment().format('L');\n        dashboardCopy.originalRef = dashboard._id;\n        delete dashboardCopy._id;\n\n        dashboardCopy._acl = user._acl;\n        this.broker.setAcl(dashboardCopy, null, null, null, [user._id]);\n        //dashboardCopy._acl.users = { r: [user._id], w: [user._id] };\n        dashboardCopy.creatorRef = user._id;\n        //dashboardCopy._acl.creator = user._id;\n        return dashboardCopy;\n      });\n\n    return this.broker\n      .deleteAll('dashboards', {\n        where: { originalRef: { inq: [dashboard._id] }, creatorRef: { inq: map(users, '_id') } }\n      })\n      .pipe(\n        mergeMap(() => {\n          return this.broker.upsertAll('dashboards', dashboards);\n        })\n      );\n  }\n\n  deletePublished(dashboard: IDashboard) {\n    return this.broker.deleteAll('dashboards', {\n      where: { originalRef: { inq: [dashboard._id] } }\n    });\n  }\n\n  updatePublished(dashboard: IDashboard) {\n    return this.broker.getAll('dashboards', ['_id', '_acl', '_ect', '_lmt'], null, null, [[{ field: 'originalRef', operator: { _id: 'inq' }, value: [dashboard._id] }]], null, 0, -1).pipe(\n      mergeMap(response => {\n        let dashboards: Array<IDashboard> = response.data;\n        dashboards.forEach(d => {\n          d.title = dashboard.title + ' - ' + dateFormat(new Date(), 'L');\n          d.description = dashboard.description;\n          d.tabs = dashboard.tabs;\n        });\n        return this.broker.upsertAll('dashboards', dashboards);\n      })\n    );\n  }\n\n  copy(dashboard: IDashboard, title: string) {\n    let newDashboard = cloneDeep(dashboard);\n    newDashboard.title = title;\n    delete newDashboard._id;\n    if (newDashboard.tabs) {\n      newDashboard.tabs.forEach(t => {\n        if (t.items) {\n          t.items.forEach(c => {\n            c.definition._id = getUUID();\n          });\n        }\n      });\n    }\n    return this.broker.upsert('dashboards', newDashboard);\n  }\n\n  aggregateQuery(collectionName: string, filters?: Filters, options?: Array<any>, excludedFields?: Array<any>, customFilter?: any, subQuery?: SubQuery): Observable<any> {\n    //, aggregateFormDefinition?: Array<IFormField>, aggregateData?: any) { //where ?: Filters, match?: Object, limit?: Number, lookup?: Object, projectBefore?: Object, group?: Object, projectAfter?: Object) {\n    options = options || [];\n    return this.broker.aggregateQuery(collectionName, filters, options, null, excludedFields, false, null, customFilter, subQuery);\n  }\n\n  setTimescale(filters: Filters, timescale: string, dateField = 'finishedDate', endDate?: Date | string, previous: boolean = false) {\n    return this.broker.setTimescale(filters, timescale, dateField, endDate, previous);\n  }\n\n  getChartDefinition(title: string, filters: Array<any> = [[]], collectionName = 'missions', dateGrouping = 'day', groupByDate = true, timeScale = 'last7days') {\n    let definition: ChartDefinition = <any>{\n      title: this.translate.get(title),\n      aggregateOptions: [],\n      timescale: timeScale,\n      collectionName: collectionName,\n      dateGrouping: dateGrouping,\n      filters: filters,\n      groupByDate: groupByDate,\n      palette: 'palette2',\n      showAs: 'chart',\n      type: 'areaspline',\n      datetimeFormat: 'dd'\n    };\n    return definition;\n  }\n\n  getPhotos(missionDescription?: MissionDescription, fields?: Array<IFormField>, start = 0, locationTags?: Array<string>): Observable<ResponseObject> {\n    let filters: Filters = [[]];\n    if (missionDescription && missionDescription._id) {\n      filters[0].push({\n        field: 'missiondescriptionRef',\n        operator: { _id: 'inq' },\n        value: [missionDescription._id]\n      });\n    }\n    if (fields) {\n      fields = [].concat(fields);\n      filters[0].push({\n        field: 'name',\n        operator: { _id: 'inq' },\n        value: fields.map(f => f.name.replace('.value', ''))\n      });\n    }\n    if (locationTags && locationTags.length) {\n      filters[0].push({\n        field: 'tags',\n        collectionName: 'locations',\n        operator: { _id: 'inq' },\n        value: locationTags,\n        type: FormFieldType.autocomplete,\n        subQuery: { field: 'locationRef', values: '_id' }\n      });\n    }\n    return this.broker.getAll('photos', null, null, null, filters, null, start, 10);\n  }\n\n  getFolderFolderStat(folderIds: Array<string>): Observable<Array<{ _id: string; folders: number }>> {\n    let filters = [[{ field: 'parent', operator: { _id: 'inq' }, value: folderIds }]];\n    let options = [\n      {\n        $project: {\n          _id: '$parent'\n        }\n      },\n      {\n        $group: {\n          _id: '$_id',\n          folders: { $sum: 1 }\n        }\n      }\n    ];\n    return this.aggregateQuery('folders', filters, options);\n  }\n\n  getFolderFileStat(folderIds: Array<string>, keepHideMobile = true): Observable<Array<{ _id: string; files: number }>> {\n    let filters: Filters = [[{ field: 'folder', operator: { _id: 'inq' }, value: folderIds }]];\n    if (keepHideMobile === false) {\n      filters[0].push({ field: 'hideMobile', operator: { _id: 'neq' }, value: true });\n    }\n    let options = [\n      {\n        $project: {\n          _id: '$folder'\n        }\n      },\n      {\n        $group: {\n          _id: '$_id',\n          files: { $sum: 1 }\n        }\n      }\n    ];\n    return this.aggregateQuery('files', filters, options);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Files } from '../files/files.service';\nimport { Broker } from '../broker/broker.service';\nimport { Dashboard } from '../dashboard/dashboard.service';\n\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\nimport { Folder } from '../../interfaces/folder/folder.interface';\n\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable()\nexport class FilesBroker {\n  constructor(private dashboard: Dashboard, private broker: Broker, protected files: Files) {}\n\n  getFilesTransform() {\n    return (res: ResponseObject) => {\n      if (res && res.data && res.data.map) {\n        res.data.forEach(f => this.updateFileIcon(f));\n      }\n      return res;\n    };\n  }\n\n  getFilesFoldersTransformAsync() {\n    return (res: ResponseObject, search, filters, start, pageSize) => {\n      return new Observable<ResponseObject>((observer: Observer<ResponseObject>) => {\n        if (res && res.data && res.data.length > 0) {\n          res.data.forEach(f => {\n            delete f.items;\n            if (f.fftype === 'file') {\n              this.updateFileIcon(f);\n            }\n          });\n          let ids = res.data.filter(f => f.fftype === 'folder').map((folder: Folder) => folder._id);\n          this.dashboard.getFolderFolderStat(ids).subscribe(stats => {\n            res.data.forEach((folder: Folder) => {\n              let stat = stats.find(s => s._id === folder._id);\n              let value = stat ? stat.folders || 0 : 0;\n              folder.stats = [{ title: 'FOLDERS', color: 'dark', value }];\n              (<any>folder).hasChildren = value > 0;\n            });\n            this.dashboard.getFolderFileStat(ids, false).subscribe(fileStats => {\n              res.data.forEach((folder: Folder) => {\n                let stat = fileStats.find(s => s._id === folder._id);\n                folder.stats.push({\n                  title: 'FILES',\n                  color: 'dark',\n                  value: stat ? stat.files || 0 : 0\n                });\n              });\n              observer.next({ count: res.count, data: <any>res.data });\n              observer.complete();\n            });\n          });\n        } else {\n          observer.next({ count: 0, data: [] });\n          observer.complete();\n        }\n      });\n    };\n  }\n\n  cleanupFolder(folderId) {\n    return this.broker.deleteAll('files', { where: { folder: folderId } });\n  }\n\n  updateFileIcon(f) {\n    if (this.files.isImage(f)) {\n      f.imgSrc = f._downloadURL;\n    } else if (this.files.isVideo(f)) {\n      f.imgSrc = this.files.getVideoPoster(f._downloadURL);\n    } else {\n      f.icon = this.files.getIcon(f);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Translate } from '@shared/translate';\nimport { Requestor } from '../requestor/requestor.service';\n\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class Googletranslate {\n  static get(query: string, source: string, target: string, rq: Requestor): Observable<any> {\n    let sourceLang = this.fixLanguage(source);\n    let targetLang = this.fixLanguage(target);\n    if (sourceLang === targetLang) {\n      return of(query);\n    } else {\n      let url = 'businesslogic/translate';\n      return rq.post(url, { query, sourceLang, targetLang }, null, null, null, null, true).pipe(\n        map(response => {\n          return response || query;\n        })\n      );\n    }\n  }\n\n  static fixLanguage(language: string) {\n    switch (language) {\n      case 'us':\n        return 'en';\n      case 'zhs':\n        return 'zh-CN';\n      case 'zht':\n        return 'zh-TW';\n      case 'ua':\n        return 'uk';\n      case 'kr':\n        return 'ko';\n      case 'cz':\n        return 'cs';\n      case 'gr':\n        return 'el';\n      case 'br':\n        return 'pt';\n      default:\n        return language;\n    }\n  }\n\n  static getAll(query: string, source: string, rq: Requestor) {\n    let observables = Translate.availablesLanguage\n      .filter(l => l !== source)\n      .filter(l => l !== 'key')\n      .map(l => {\n        return this.get(query, source, l, rq).pipe(\n          map(value => ({\n            language: l,\n            value: value || query\n          }))\n        );\n      });\n    return forkJoin(observables);\n  }\n\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Config } from '../config/config.service';\nimport { Network, Log } from '@shared/common';\n\n@Injectable()\nexport class HttpCustomInterceptor implements HttpInterceptor {\n  constructor(protected config: Config, protected network: Network, protected log: Log) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // if (req.url && req.url.indexOf(this.config.serverUrl) >= 0) {\n    //     const authReq = req.clone({ headers: req.headers.set('Yoobic-Client-Version', this.coreConfig.getAppVersion()) });\n    //     return next.handle(authReq);\n    // } else {\n\n    if (this.network.isOffline() && req.url && !req.url.startsWith('./')) {\n      this.log.error(req);\n    }\n    return next.handle(req);\n    //}\n  }\n}\n","/* tslint:disable:variable-name */\nimport { Injectable } from '@angular/core';\nimport { CoreConfig } from '@shared/common';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class PlatformService {\n  public data$: ReplaySubject<any> = new ReplaySubject<any>(1, 2000);\n\n  constructor(private coreConfig: CoreConfig) {}\n\n  handler(data) {\n    if (data) {\n      this.data$.next(data);\n    }\n  }\n\n  onReadyOrResume(debug = false) {\n    if (this.coreConfig.isCordova() && window.Branch) {\n      window.Branch.setDebug(debug);\n      window.Branch.initSession().then(data => {\n        this.handler(data);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IPosition, Network } from '@shared/common';\nimport { Broker } from '../broker/broker.service';\nimport { Smartloc } from '../smartloc/smartloc.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Googlemaps } from '../googlemaps/googlemaps.service';\nimport { Authentication } from '../authentication/authentication.service';\nimport { Config } from '../config/config.service';\nimport { Session } from '../session/session.service';\nimport { Cache } from '../cache/cache.service';\n\nimport { Location } from '../../interfaces/location/location.interface';\nimport { LocationType } from '../../interfaces/location-type/location-type.interface';\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\nimport { CACHE_KEYS } from '../../interfaces/cache/cache.interface';\n\nimport { Filters, SubQuery, IHealthscore, ISort, IKpiData } from '@shared/stencil';\n\nimport { Observable, Observer, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { isNumber } from 'lodash-es';\n\n@Injectable()\nexport class Locations {\n  constructor(private geoloc: Smartloc, private broker: Broker, protected rq: Requestor, protected config: Config, protected session: Session, protected network: Network, protected cache: Cache, protected authentication: Authentication, protected googleMaps: Googlemaps) {}\n\n  loadMarkers(position: IPosition, maxPoints = 5000) {\n    position = position || this.geoloc.defaultPosition;\n    let filters = [\n      [\n        {\n          field: '_geoloc',\n          operator: { _id: 'nearSphere' },\n          value: [position.longitude, position.latitude],\n          max: 40000\n        }\n      ]\n    ];\n    return this.broker.getAll('locations', ['_id', 'title', '_geoloc', 'address'], null, null, filters, null, 0, maxPoints).pipe(\n      map(retVal => {\n        return this.getMarkers(retVal.data);\n      })\n    );\n  }\n\n  getMarkers(locations: Array<Location>) {\n    return this.broker.getMarkers(locations);\n  }\n\n  getMarkersData(collectionName: string, maxPoints: number = 5000, fields?: Array<string>, filters?: Filters, subQuery?: SubQuery) {\n    return this.broker.getAll(collectionName, fields || ['_id', 'title', '_geoloc', 'address'], null, null, filters, null, 0, maxPoints, false, subQuery).pipe(\n      map(retVal => {\n        let markers = this.getMarkers(retVal.data);\n        let legendColors = {\n          available: 'energized',\n          booked: 'info',\n          validated: 'success',\n          rejected: 'danger',\n          tobevalidated: 'royal',\n          archived: 'dark'\n        };\n        return { markers, legendColors };\n      })\n    );\n  }\n\n  getLegendColors() {\n    let legendColors = {\n      available: 'energized',\n      booked: 'info',\n      validated: 'success',\n      rejected: 'danger',\n      tobevalidated: 'royal',\n      archived: 'dark'\n    };\n    return legendColors;\n  }\n\n  getLastVisitDate(locationIds: Array<string>, userId?: string): Observable<Array<{ _id: string; finishedDate: Date; count: number }>> {\n    let filters: Filters = [[{ field: 'locationRef', operator: { _id: 'inq' }, value: locationIds }, { field: 'ownerRef', operator: { _id: 'eq' }, value: userId || this.session.userId }, { field: 'status', operator: { _id: 'eq' }, value: 'finished' }]];\n\n    let options = [\n      {\n        $group: {\n          _id: '$locationRef',\n          finishedDate: { $max: '$finishedDate' },\n          count: { $sum: 1 }\n        }\n      }\n    ];\n    return this.broker.aggregateQuery('missions', filters, options, null, null, false, null);\n  }\n\n  getStatsAndDistanceTransformAsync(position?: IPosition) {\n    return (res: ResponseObject) => {\n      return new Observable<ResponseObject>((observer: Observer<ResponseObject>) => {\n        if (res && res.data && res.data.length > 0) {\n          if (position) {\n            res.data = this.calculateDistanceAndKpiData(res, position);\n          }\n          let ids = res.data.map((location: Location) => location._id);\n          this.getLastVisitDate(ids).subscribe(dates => {\n            res.data.forEach((location: Location) => {\n              let date = dates.find(d => d._id === location._id);\n              if (date && date.finishedDate) {\n                location.lastVisit = date.finishedDate;\n                location.countVisits = date.count;\n              }\n              observer.next({ count: res.count, data: <any>res.data });\n              observer.complete();\n            });\n          });\n        } else {\n          observer.next({ count: 0, data: [] });\n          observer.complete();\n        }\n      });\n    };\n  }\n\n  getDistanceTransform() {\n    return this.geoloc.getLocation().then((position: IPosition) => {\n      return (res: ResponseObject) => {\n        return new Observable<ResponseObject>((observer: Observer<ResponseObject>) => {\n          if (res && res.data && res.data.length > 0) {\n            res.data = this.calculateDistanceAndKpiData(res, position);\n            observer.next({ count: res.count, data: <any>res.data });\n            observer.complete();\n          } else {\n            observer.next({ count: 0, data: [] });\n            observer.complete();\n          }\n        });\n      };\n    });\n  }\n\n  getDistanceAndLastVisitTransform(position: IPosition) {\n    return (res: ResponseObject) => {\n      return new Observable<ResponseObject>((observer: Observer<ResponseObject>) => {\n        if (res && res.data && res.data.length > 0) {\n          res.data = this.calculateDistanceAndKpiData(res, position);\n          let ids = res.data.map((location: Location) => location._id);\n          this.getLastVisitDate(ids).subscribe(dates => {\n            res.data.forEach((location: Location) => {\n              let date = dates.find(d => d._id === location._id);\n              if (date && date.finishedDate) {\n                location.lastVisit = date.finishedDate;\n                location.countVisits = date.count;\n              }\n              observer.next({ count: res.count, data: <any>res.data });\n              observer.complete();\n            });\n          });\n        } else {\n          observer.next({ count: 0, data: [] });\n          observer.complete();\n        }\n      });\n    };\n  }\n\n  calculateDistanceAndKpiData(res: ResponseObject, position: IPosition) {\n    let retVal = res.data.map((location: Location) => {\n      if (location._geoloc && position && isNumber(position.latitude) && isNumber(position.longitude)) {\n        location.distance = this.geoloc.getDistance(position.latitude, position.longitude, location._geoloc[1], location._geoloc[0]);\n      }\n\n      let oldKpiData: Object = location.kpiData as any;\n      let kpiData: Array<IKpiData> = [];\n      if (this.session.tenant && this.session.tenant.locationKpis && this.session.tenant.locationKpis.length > 0) {\n        this.session.tenant.locationKpis.forEach(kpi => {\n          if (this.authentication.isAdmin() || (kpi.category === 'healthscore' && this.authentication.hasRole('healthscore')) || (kpi.category !== 'healthscore' && this.authentication.hasRole('storeinsights'))) {\n            kpiData.push({\n              category: kpi.category,\n              value: oldKpiData && oldKpiData[kpi.category] ? oldKpiData[kpi.category].value : null,\n              icon: kpi.icon,\n              extraSymbol: kpi.extraSymbol,\n              variation: oldKpiData && oldKpiData[kpi.category] ? oldKpiData[kpi.category].variation : null\n            });\n          }\n        });\n      }\n      location.kpiData = kpiData;\n\n      return location;\n    });\n    //retVal = orderBy(retVal, ['distance']);\n    return retVal;\n  }\n\n  getAroundMeFilter(aroundMe: boolean, stats: boolean, forceRefresh: boolean): Promise<{ filters: Filters; sortModel: ISort[]; mapTransform: any; position: IPosition }> {\n    let filters: Filters;\n    let sortModel: Array<any>;\n    let mapTransform: any;\n    return this.geoloc.getLocation(forceRefresh).then((res: any) => {\n      mapTransform = stats ? this.getStatsAndDistanceTransformAsync(res) : this.getDistanceAndLastVisitTransform(res);\n      if (!aroundMe || !res) {\n        filters = [[]];\n        sortModel = [{ colId: 'title', sort: 'asc' }];\n      } else {\n        sortModel = [];\n        filters = [\n          [\n            {\n              field: '_geoloc',\n              operator: { _id: 'nearSphere' },\n              value: [res.longitude, res.latitude],\n              max: 40000\n            }\n          ]\n        ];\n      }\n      return { filters, sortModel, mapTransform, position: res };\n    });\n  }\n\n  getLocationTypesTransform() {\n    return (res: ResponseObject, search, filters, start, pageSize) => {\n      return new Observable<ResponseObject>((observer: Observer<ResponseObject>) => {\n        if (res && res.data && res.data.length > 0) {\n          let ids = res.data.map((type: LocationType) => type._id);\n          this.getLocationTypesStat(ids).subscribe(stats => {\n            res.data.forEach((locationType: LocationType) => {\n              let stat = stats.find(s => s._id === locationType._id);\n              let count = stat ? stat.count || 0 : 0;\n              locationType.count = count;\n            });\n            observer.next({ count: res.count, data: <any>res.data });\n            observer.complete();\n          });\n        } else {\n          observer.next({ count: 0, data: [] });\n          observer.complete();\n        }\n      });\n    };\n  }\n\n  getLocationTypesStat(locationTypeIds: Array<string>): Observable<Array<{ _id: string; count: number }>> {\n    let filters: Filters = [[{ field: 'typeRef', operator: { _id: 'inq' }, value: locationTypeIds }]];\n    let options = [\n      {\n        $project: {\n          _id: '$typeRef'\n        }\n      },\n      {\n        $group: {\n          _id: '$_id',\n          count: { $sum: 1 }\n        }\n      }\n    ];\n    return this.broker.aggregateQuery('locations', filters, options);\n  }\n\n  getHealthscore(locationId: string, nbDays: Array<number> = [7, 30, 90]): Observable<Array<IHealthscore>> {\n    if (this.network.isOffline()) {\n      return from(this.cache.get(CACHE_KEYS.healthscore, locationId));\n    } else {\n      let url = this.config.apiUrl + 'locations/healthScore?storeId=' + locationId + '&days=[' + nbDays.toString() + ']';\n      return this.rq.get(url).pipe(\n        map(ret => {\n          let retVal = ret.data ? ret.data : ret;\n          this.cache.add(CACHE_KEYS.healthscore, locationId, retVal);\n          return retVal;\n        })\n      );\n    }\n  }\n\n  getUserLocations(userId: string) {\n    let url = this.config.apiUrl + 'businesslogic/getUserLocations';\n    return this.rq.post(url, { userId });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Session } from '../session/session.service';\n//require('yoobic-loopback-node-sdk/client/browserify.bundle');\n\n@Injectable()\nexport class Loopback {\n  private _client = (<any>window).loopbackClient;\n\n  constructor(private session: Session) {\n    if (this._client) {\n      //this._client.setBaseUrl(this._config.apiUrl);\n      this._client.setAccessToken(this.session.token);\n    }\n  }\n\n  get client() {\n    return this._client;\n  }\n}\n","import { Translate } from '@shared/translate';\nimport { IMissionDescription, IScoring, FormFieldType, IFormField, IRoles, IRole, SelectionQuery } from '@shared/stencil';\nimport { Slide } from '../slide/slide.interface';\nimport { Model } from '../../decorators/model/model.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { Condition, getGroupsTransform, ROLES_CONDITIONS } from '../condition/condition.interface';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { FORM_FILES_IMAGE_FILTER } from '../constants/constants.interface';\nimport { Tenant } from '../tenant/tenant.interface';\nimport { range } from 'lodash-es';\n\nexport const MISSION_TYPES_NO_ADMIN = ['mission'];\nexport const MISSION_TYPES = ['mission', 'service', 'poll', 'todo', 'lesson']; //'template',, 'memo'\nexport const MISSION_STATUS = ['booked', 'finished', 'archived', 'scheduled'];\n\nlet conditions = {\n  isPoll: 'type == \"poll\"',\n  isMission: 'type == \"mission\"',\n  isQuizz: 'quizz == 1',\n  isService: 'type == \"service\"',\n  notService: 'not (type == \"service\")',\n  notPollOrService: 'not (type == \"service\") and not (type == \"poll\")',\n  isPollOrService: 'type==\"poll\" or type==\"service\"' //,\n  //isUpdate: 'isNullOrEmpty(getAttributeValue(\"_ect\")) == 0'\n};\n\nexport function onMissionDescriptionTypeChange(value, data, field) {\n  // if (value && (value === 'service' || value === 'poll' || value === 'lesson')) {\n  //   setTimeout(() => {\n  //     controls.language.setValue(controls.language.getValue() || Translate.currentLanguage);\n  //   }, 300);\n  // }\n  // let groupIndex = formDefinition.findIndex(f => f.name === 'group');\n  // let group = formDefinition[groupIndex];\n  // if (value === 'service') {\n  //   group.title = 'SERVICEGROUPS';\n  // } else {\n  //   group.title = 'MISSIONGROUPS';\n  // }\n  // formDefinition[groupIndex] = { ...group };\n  // return true;\n}\n\n@Model({\n  className: 'MissionDescription',\n  collectionName: 'missiondescriptions',\n  fields: [\n    '_ect',\n    '_id',\n    '_lmt',\n    '_tenant',\n    '_tenantRef',\n    'allowMultiple',\n    'allowSameUserValidation',\n    'archived',\n    'audit',\n    'autoRenew',\n    'autoRenewOnBooking',\n    'background',\n    'bookingDuration', //\n    'category',\n    'categoryRef',\n    'count',\n    'duration',\n    'finishedGroups',\n    'generateTitle',\n    'group',\n    'icon',\n    'language',\n    'locationOptions',\n    'missionTags',\n    'multiple',\n    'notificationemail',\n    'notify',\n    'notifyBody',\n    'notifyScheduledDate',\n    'pdfMode',\n    'price',\n    'priority',\n    'public',\n    'quizz',\n    'quizzMode',\n    'recurring',\n    'scoring',\n    'showAnswers',\n    'skipValidation',\n    'submittext',\n    'successtext',\n    'tags',\n    'text',\n    'title',\n    'type',\n    'validFrom',\n    'validUntil',\n    'versionmin',\n    'storesQuery'\n  ],\n  include: ['_tenant'], //'category',\n  icon: 'yo-campaign'\n})\nexport class MissionDescription extends IMissionDescription {\n  @Editable('MissionDescription', {\n    type: FormFieldType.text,\n    visible: false,\n    forceExport: true,\n    exportOrder: 1\n  })\n  _id?: string;\n\n  @Editable('MissionDescription', {\n    type: FormFieldType.autocomplete,\n    title: 'TYPE',\n    values: MISSION_TYPES, //MISSION_TYPES_NO_ADMIN,\n    translate: true,\n    clearable: false,\n    required: true,\n    exportOrder: 3,\n    filterable: true,\n    onChange: onMissionDescriptionTypeChange\n  })\n  type: string;\n\n  @Editable('MissionDescription', {\n    required: true,\n    title: 'TITLE',\n    sortable: true,\n    type: FormFieldType.text,\n    exportOrder: 2\n  })\n  @Searchable('MissionDescription')\n  title: string;\n\n  @Editable('MissionDescription', {\n    required: true,\n    title: 'DESCRIPTION',\n    type: FormFieldType.textarea,\n    filterable: false,\n    sortable: false,\n    language: 'html'\n  }) //\n  text: string;\n\n  @Editable('MissionDescription', {\n    type: FormFieldType.autocomplete,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    maxWidth: 160,\n    maxHeight: 160,\n    crop: 'circle',\n    collectionName: 'files',\n    title: 'ICON',\n    required: true,\n    flex: 50,\n    columnDefinition: { name: '_downloadURL' },\n    filterable: false,\n    sortable: false\n  })\n  icon: any;\n\n  @Editable('MissionDescription', {\n    title: 'CAMPAIGNTAGS',\n    filterable: true,\n    type: FormFieldType.autocomplete,\n    clearable: true,\n    tag: true,\n    allowCustomTag: true,\n    collectionName: 'missiondescriptions',\n    multiple: true,\n    subQuery: { field: 'descriptionRef', values: '_id' },\n    filters: [[{ field: 'archived', operator: { _id: 'neq' }, value: true }]],\n    icon: 'yo-tag',\n    secondary: true\n  })\n  tags: Array<string>;\n\n  background: any;\n  group: Array<string>;\n  serviceGroups: Array<string>;\n  missionTags: Array<string>;\n  slides: Array<Slide>;\n  public: boolean;\n  skipValidation: boolean;\n  allowSameUserValidation: boolean;\n  allowMultiple: boolean;\n  quizz: boolean;\n  quizzMode: string;\n  showAnswers: boolean;\n  audit: boolean;\n  recurring: boolean;\n  category: MissionDescription;\n  language: string;\n  submittext: string;\n  successtext: string;\n  versionmin: string;\n  finishedGroups: Array<string>;\n  roles?: Array<IRole>;\n  archived: boolean;\n  count: number;\n  storesQuery?: SelectionQuery;\n  latest: Date;\n  _ect: any;\n  conditions: Array<Condition>;\n  scoring: Array<Scoring>;\n  _tenant: Tenant;\n  _tenantRef?: string;\n\n  //MissionDescriptionSchedule\n  validFrom: Date;\n  validUntil: Date;\n  duedate: Date;\n\n  //MissionDescriptionNotifications\n  notify?: boolean;\n  notifyBody?: string;\n  notifyScheduledDate?: Date;\n  notificationemail?: Array<string>;\n  disableLocationNotificationemail?: boolean;\n  pdfMode?: string;\n}\n\n@Model({\n  className: 'MissionDescriptionCreate'\n})\nexport class MissionDescriptionCreate extends IMissionDescription {\n  type: string;\n\n  @Editable('MissionDescriptionCreate', {\n    required: true,\n    title: 'TITLE',\n    sortable: true,\n    type: FormFieldType.text,\n    exportOrder: 2\n  })\n  title: string;\n\n  @Editable('MissionDescriptionCreate', {\n    required: true,\n    title: 'DESCRIPTION',\n    type: FormFieldType.textarea,\n    filterable: false,\n    sortable: false,\n    language: 'html'\n  })\n  text: string;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.autocomplete,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    maxWidth: 160,\n    maxHeight: 160,\n    crop: 'circle',\n    collectionName: 'files',\n    title: 'ICON',\n    required: true,\n    columnDefinition: { name: '_downloadURL' },\n    filterable: false,\n    sortable: false\n  })\n  icon: any;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.autocomplete,\n    values: range(1, 5)\n  })\n  priority: any;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.toggle,\n    condition: [conditions.isMission],\n    title: 'AUDIT',\n    columnDefinition: { width: 80 }\n  })\n  audit: boolean;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.toggle,\n    condition: [conditions.isMission],\n    title: 'RECURRING',\n    columnDefinition: { width: 80 }\n  })\n  recurring: boolean;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.toggle,\n    condition: conditions.isPoll,\n    columnDefinition: { width: 80 }\n  })\n  allowMultiple: boolean;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.toggle,\n    condition: conditions.isPoll,\n    title: 'QUIZZ',\n    columnDefinition: { width: 80 }\n  })\n  quizz: boolean;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.autocomplete,\n    condition: conditions.isQuizz,\n    flex: 100,\n    title: 'MODE',\n    values: ['ALLANSWERSVALID', 'ALLOWUNVALIDANSWERS', 'LIVEANSWERS'],\n    translate: true,\n    columnDefinition: { width: 80 }\n  })\n  quizzMode: string;\n\n  @Editable('MissionDescriptionCreate', {\n    type: FormFieldType.toggle,\n    condition: conditions.isQuizz,\n    flex: 100,\n    title: 'SHOWANSWERS',\n    columnDefinition: { width: 80 }\n  })\n  showAnswers: boolean;\n\n  @Editable('MissionDescription', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    condition: conditions.isPollOrService,\n    title: 'LANGUAGE',\n    flex: 100,\n    translate: true,\n    values: Translate.availablesLanguageAll,\n    clearable: false\n  })\n  language: string;\n\n  @Editable('MissionDescriptionCreate', {\n    title: 'CAMPAIGNTAGS',\n    filterable: true,\n    type: FormFieldType.autocomplete,\n    clearable: true,\n    tag: true,\n    allowCustomTag: true,\n    collectionName: 'missiondescriptions',\n    multiple: true,\n    subQuery: { field: 'descriptionRef', values: '_id' },\n    icon: 'yo-tag',\n    secondary: true\n  })\n  tags: Array<string>;\n\n  slides: Array<Slide>;\n\n  @Editable('MissionDescriptionCreate', {\n    required: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    condition: [ROLES_CONDITIONS.isAdmin],\n    collectionName: 'tenants',\n    multiple: false,\n    columnDefinition: { name: 'name' }\n  })\n  _tenant: Tenant;\n  _tenantRef?: string;\n}\n\n@Model({\n  className: 'MissionDescriptionSchedule'\n})\nexport class MissionDescriptionSchedule extends IMissionDescription {\n  @Editable('MissionDescriptionSchedule', {\n    title: 'MISSIONVALIDFROMTOOLTIP',\n    type: FormFieldType.datetime,\n    condition: conditions.notService,\n    externalValidators: [{ externalFieldName: 'validUntil', rule: 'lower' }]\n  })\n  validFrom: Date;\n\n  @Editable('MissionDescriptionSchedule', {\n    title: 'MISSIONVALIDUNTILTOOLTIP',\n    type: FormFieldType.datetime,\n    condition: conditions.notService,\n    externalValidators: [{ externalFieldName: 'validFrom', rule: 'higher' }]\n  })\n  validUntil: Date;\n\n  @Editable('MissionDescriptionSchedule', {\n    title: 'MISSIONDUEDATE',\n    type: FormFieldType.datetime,\n    condition: conditions.notService\n  })\n  duedate: Date;\n\n  // @Editable('MissionGenerate', {\n  //   tabIndex: 2,\n  //   tab: 'OPTIONS',\n  //   type: FormFieldType.schedule,\n  //   hideLabel: true,\n  //   condition: conditions.isScheduled,\n  //   flex: 100\n  // })\n  // schedule: boolean;\n}\n\n@Model({\n  className: 'MissionDescriptionNotifications'\n})\nexport class MissionDescriptionNotifications extends IMissionDescription {\n  @Editable('MissionDescriptionNotifications', {\n    type: FormFieldType.toggle,\n    condition: conditions.notService\n  })\n  notify: boolean;\n\n  @Editable('MissionDescriptionNotifications', {\n    title: 'NOTIFICATION',\n    required: true,\n    condition: 'notify == 1',\n    type: FormFieldType.textarea\n  })\n  notifyBody: string;\n\n  @Editable('MissionDescriptionNotifications', {\n    title: 'SCHEDULEDDATE',\n    required: false,\n    condition: 'notify == 1',\n    type: FormFieldType.datetime\n  })\n  notifyScheduledDate: Date;\n\n  @Editable('MissionDescriptionNotifications', {\n    title: 'NOTIFICATIONEMAILS',\n    type: FormFieldType.emailreport,\n    showUsers: true,\n    stateful: false,\n    filterable: false,\n    sortable: false\n  })\n  notificationemail: Array<string>;\n\n  @Editable('MissionDescriptionNotifications', {\n    type: FormFieldType.toggle,\n    columnDefinition: { width: 80 },\n    suppressExport: true\n  })\n  disableLocationNotificationemail: boolean;\n\n  @Editable('MissionDescriptionNotifications', {\n    title: 'PDFEXPORT',\n    type: FormFieldType.selectcard,\n    translate: true,\n    values: [\n      { title: 'PDFCLASSIC', description: 'PDFCLASSICDESCRIPTION', value: 'PDFCLASSIC' }, //\n      { title: 'PDFPHOTOREPORT', description: 'PDFPHOTOREPORTDESCRIPTION', value: 'PDFPHOTOREPORT' },\n      { title: 'PDFAUDITEXPORTS', description: 'PDFAUDITEXPORTSDESCRIPTION', value: 'PDFAUDITEXPORTS' },\n      { title: 'PDFCONTRACT', description: 'PDFCONTRACTDESCRIPTION', value: 'PDFCONTRACT' }\n    ],\n    filterable: false\n  })\n  pdfMode?: string;\n}\n\n@Model({\n  className: 'MissionDescriptionSettings'\n})\nexport class MissionDescriptionSettings extends IMissionDescription {\n  @Editable('MissionDescriptionSettings', {\n    required: true,\n    title: 'MISSIONGROUPS',\n    header: 'PERMISSIONS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false\n  })\n  group: Array<string>;\n\n  @Editable('MissionDescriptionSettings', {\n    required: false,\n    title: 'MISSIONGROUPS',\n    type: FormFieldType.autocomplete,\n    condition: conditions.isService,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false\n  })\n  serviceGroups: Array<string>;\n\n  @Editable('MissionDescriptionSettings', {\n    required: false,\n    title: 'FINISHEDGROUPS',\n    type: FormFieldType.autocomplete,\n    condition: [conditions.isMission],\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: true\n  })\n  finishedGroups: Array<string>;\n\n  @Editable('MissionDescriptionSettings', {\n    multiple: true,\n    type: FormFieldType.autocomplete,\n    exportOrder: 15,\n    values: IRoles,\n    translate: true,\n    filterableAdvanced: true\n  })\n  roles?: Array<IRole>;\n\n  @Editable('MissionDescriptionSettings', {\n    title: 'CATEGORIES',\n    type: FormFieldType.autocomplete,\n    tag: true,\n    collectionName: 'missions',\n    multiple: true,\n    subQuery: { field: 'descriptionRef', values: '_id' },\n    icon: 'yo-flag',\n    filterable: false\n  })\n  missionTags: Array<string>;\n\n  @Editable('MissionDescriptionSettings', {\n    header: 'COMPLIANCE',\n    type: FormFieldType.toggle,\n    title: 'SKIPVALIDATION',\n    columnDefinition: { width: 80 },\n    filterableAdvanced: true\n  })\n  skipValidation: boolean;\n\n  @Editable('MissionDescriptionSettings', {\n    type: FormFieldType.toggle,\n    title: 'ALLOWSAMEUSERVALIDATION',\n    condition: [ROLES_CONDITIONS.isManager, ROLES_CONDITIONS.isAdminOrClientAdmin],\n    columnDefinition: { width: 80 },\n    filterableAdvanced: true\n  })\n  allowSameUserValidation: boolean;\n\n  @Editable('MissionDescriptionSettings', {\n    header: 'MISSIONSETTINGS',\n    type: FormFieldType.toggle,\n    condition: conditions.notPollOrService,\n    flex: 100\n  })\n  autoRenew: boolean;\n\n  @Editable('MissionDescriptionSettings', {\n    type: FormFieldType.toggle,\n    condition: [conditions.notPollOrService]\n  }) //, readonly: conditions.isScheduled\n  autoRenewOnBooking: boolean;\n\n  @Editable('MissionDescriptionSettings', {\n    title: 'CHECK',\n    clearable: true,\n    type: FormFieldType.selectcard,\n    values: [\n      { title: 'AVAILABLE', description: 'CHECKAVAILABLE', value: 'CHECKAVAILABLE' }, //\n      { title: 'EXISTING', description: 'CHECKEXISTING', value: 'CHECKEXISTING' }\n    ],\n    translate: true,\n    condition: conditions.notPollOrService\n  })\n  locationOptions: string;\n\n  @Editable('MissionDescriptionSettings', {\n    header: 'MISC',\n    required: false,\n    title: 'MISSIONDURATION',\n    type: FormFieldType.number\n  })\n  duration: number;\n\n  @Editable('MissionDescriptionSettings', {\n    condition: conditions.isService,\n    title: 'SUBMITTEXT',\n    type: FormFieldType.text,\n    filterable: false,\n    sortable: false\n  })\n  submittext: string;\n\n  @Editable('MissionDescriptionSettings', {\n    condition: conditions.isService,\n    title: 'SUCCESSTEXT',\n    type: FormFieldType.text,\n    filterable: false,\n    sortable: false\n  })\n  successtext: string;\n\n  @Editable('MissionDescriptionSettings', {\n    title: 'VERSIONMIN',\n    type: FormFieldType.text,\n    sortable: false,\n    condition: ROLES_CONDITIONS.isAdmin,\n    filterableAdvanced: true\n  })\n  versionmin: string;\n}\n\nlet scoringConditions = {\n  isPercentage: 'isPercentage == 1'\n};\n\n@Model({ className: 'Scoring' })\nexport class Scoring extends IScoring {\n  @Editable('Scoring', { required: true, type: FormFieldType.text })\n  title: string;\n\n  @Editable('Scoring', { type: FormFieldType.textarea })\n  description: string;\n\n  @Editable('Scoring', {\n    title: 'INITIALSCORE',\n    type: FormFieldType.number,\n    advanced: true,\n    condition: ROLES_CONDITIONS.isAdmin\n  })\n  initialValue: number;\n\n  @Editable('Scoring', {\n    title: 'MINSCOREFORVALIDATION',\n    type: FormFieldType.number,\n    advanced: true\n  })\n  minValue: number;\n\n  @Editable('Scoring', {\n    type: FormFieldType.checkbox,\n    title: 'ISPRIMARYSCORE',\n    columnDefinition: { width: 80 }\n  })\n  isActive: boolean;\n\n  @Editable('Scoring', { type: FormFieldType.checkbox, title: 'ISLIVE', columnDefinition: { width: 80 } })\n  isLive: boolean;\n\n  @Editable('Scoring', {\n    type: FormFieldType.checkbox,\n    title: 'PERCENTAGE',\n    columnDefinition: { width: 80 },\n    advanced: true\n  })\n  isPercentage: boolean;\n\n  @Editable('Scoring', {\n    title: 'TOTAL',\n    type: FormFieldType.number,\n    condition: scoringConditions.isPercentage,\n    required: true\n  })\n  percentageBasis: number;\n\n  @Editable('Scoring', {\n    type: FormFieldType.autocomplete,\n    multiple: true,\n    title: 'FIELDS',\n    displayType: 'formfield'\n  })\n  selectedFields: Array<IFormField>;\n}\n","import { Injectable } from '@angular/core';\nimport { IFormField, FormFieldType } from '@shared/stencil';\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\nimport { MissionDescription, MISSION_STATUS } from '../../interfaces/mission-description/mission-description.interface';\nimport { Models } from '../models/models.service';\nimport { Slide } from '../../interfaces/slide/slide.interface';\n\nimport { cloneDeep, uniq, concat, forEach } from 'lodash-es';\n\n@Injectable()\nexport class Missiondescriptions {\n  /*\n        Return the transform to extract the fields from a mission description\n    */\n  static getFieldTransform(types: Array<string> = []): (res: ResponseObject) => ResponseObject {\n    return Models.getFieldTransform(types);\n  }\n\n  /*\n        Return the list of slide items fields from a mission description (mobile type)\n    */\n  static getFields(missiondescription: MissionDescription, types: Array<string> = [], excludedTypes: Array<string> = []) {\n    return Models.getFields(missiondescription, types, excludedTypes);\n  }\n\n  /*\n        Return the list of slide items fields from an array of slides (mobile type)\n    */\n  static getFieldsFromSlides(slides: Array<Slide>, types: Array<string> = [], excludedTypes: Array<string> = []) {\n    return Models.getFieldsFromSlides(slides, types, excludedTypes);\n  }\n\n  /*\n        Return the list of form field from a mission description. Used in the mission data grid and form\n    */\n  public static getFormFields(missiondescription: MissionDescription, translate, includeComments = false): Array<IFormField> {\n    let mobileFields = Models.getFields(missiondescription, null, ['information']);\n    mobileFields = mobileFields.reduce((previous: Array<IFormField>, current: IFormField) => {\n      let retVal = cloneDeep(current);\n      retVal.name += '.value';\n      retVal.operators = Models.getFieldOperator(current);\n      //retVal.type = Models.getFormFieldFromMobileField(retVal.type);\n      previous.push(retVal);\n\n      if (current.allowComments && includeComments) {\n        retVal = cloneDeep(current);\n        retVal.title = translate.polyglot(retVal.title) + ' .C';\n        retVal.name += '.comments';\n        retVal.type = FormFieldType.text;\n        previous.push(retVal);\n      }\n\n      if (current.allowTime && includeComments) {\n        retVal = cloneDeep(current);\n        retVal.title = translate.polyglot(retVal.title) + ' .T';\n        retVal.name += '.time';\n        retVal.type = FormFieldType.datetime;\n        previous.push(retVal);\n      }\n      return previous;\n    }, []);\n    if (missiondescription.type === 'service') {\n      mobileFields.unshift({\n        name: 'mission.status',\n        title: 'STATUS',\n        type: FormFieldType.autocomplete,\n        translate: true,\n        values: uniq(concat(MISSION_STATUS, [undefined])),\n        handleUndefined: true,\n        columnDefinition: { cellRenderer: 'missionStatusRenderer' },\n        operators: Models.getFieldOperator({ type: FormFieldType.autocomplete })\n      });\n      mobileFields.unshift({\n        name: 'mission.creatorDisplayName',\n        title: 'REQUESTOR',\n        type: FormFieldType.text,\n        operators: Models.getFieldOperator({ type: FormFieldType.text })\n      });\n      mobileFields.unshift({\n        name: 'mission._ect',\n        title: 'CREATIONDATE',\n        type: FormFieldType.datetime,\n        operators: Models.getFieldOperator({ type: FormFieldType.datetime })\n      });\n    }\n    if (missiondescription.scoring && missiondescription.scoring.length > 0) {\n      forEach(missiondescription.scoring, scoring => {\n        if (scoring.isActive !== true) {\n          mobileFields.unshift({\n            name: 'extraScores.' + scoring.title + '.value',\n            title: scoring.title,\n            type: FormFieldType.number\n          });\n        } else {\n          mobileFields.unshift({ name: 'score.value', title: scoring.title, type: FormFieldType.number });\n        }\n      });\n    }\n    return mobileFields;\n  }\n\n  static encodeScoringValue(v) {\n    if (v && v.toString) {\n      return v.toString().replace(/\\./, '_');\n    } else {\n      return v;\n    }\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Files } from '../files/files.service';\nimport { Config } from '../config/config.service';\nimport { Models } from '../models/models.service';\nimport { Authentication } from '../authentication/authentication.service';\n\nimport { IFormField, Query, SubQuery, FormFieldType, downloadFile, IColumnDefinition } from '@shared/stencil';\n\nimport { compact, sortBy, cloneDeep, uniq, get } from 'lodash-es';\nimport { timer, of } from 'rxjs';\nimport { concatMap, filter, take, catchError } from 'rxjs/operators';\n@Injectable()\nexport class Print {\n  protected excludedDashboardColumns: Array<string> = ['validated', 'validatedBy', 'owner.username', 'creator.username', 'user.username'];\n\n  constructor(protected rq: Requestor, protected config: Config, protected authentication: Authentication, protected files: Files) {}\n\n  printToMapping(collectionName: string, columns: Array<IFormField>, query: Query, subQuery: SubQuery, aggregateOptions: Array<any>, type: 'csv' | 'xlsx', campaignFields: Array<IFormField>, filename?: string, progress?: EventEmitter<number>) {\n    let publicCollectionName = Models.getPublicCollectionName(collectionName);\n    let url = this.config.publicApiUrl + publicCollectionName + '/export';\n    type = type === 'xlsx' ? 'xlsx' : 'csv';\n    //query.limit = 25500;\n    if (subQuery) {\n      query.subQuery = subQuery;\n    }\n\n    let model = Models.getModelByCollectionName(collectionName);\n    query.include = model.include;\n\n    let exportColumns = sortBy(cloneDeep(columns.filter(c => !c.suppressExport)), c => c.exportOrder || 100).map((c: any) => {\n      if (c.field) {\n        c.field = c.field.replace(/\\?/g, '');\n      }\n      return c;\n    });\n\n    if (this.authentication.isDashboard()) {\n      exportColumns = exportColumns.filter(c => this.excludedDashboardColumns.indexOf(c.field) < 0);\n    }\n    //let mime = type === 'csv' ? 'text/plain' : 'application/xlsx';\n    filename = this.files.cleanFileName(filename || publicCollectionName) + this.rq.getFilenameSuffix() + '.' + type;\n    let cacheQuery: any = {};\n    if (campaignFields && campaignFields.length > 0) {\n      let catalogs = uniq(campaignFields.filter(f => f.type === FormFieldType.catalog).map(f => f.catalog));\n      if (catalogs.length > 0) {\n        cacheQuery.products = { where: { catalogRef: { inq: catalogs } } };\n      }\n      let collectionNames = compact(uniq(campaignFields.filter(f => f.type === FormFieldType.autocomplete).map(f => f.collectionName)));\n      if (collectionNames.length > 0) {\n        cacheQuery.custommodels = { where: { name: { inq: collectionNames } }, cacheKey: 'name' };\n      }\n    }\n    query = cloneDeep(query);\n    delete query.fields;\n    return this.rq\n      .get(url, false, null, [{ name: 'filter', value: JSON.stringify(query) }, { name: 'type', value: type === 'xlsx' ? 'excel' : 'csv' }]) //r.token\n      .toPromise()\n      .then(ret => {\n        if (ret._id) {\n          return timer(1000, 500)\n            .pipe(\n              concatMap(() => {\n                return this.rq.get(this.config.publicApiUrl + 'jobs/' + ret._id, false, null).pipe(\n                  catchError(() => {\n                    return of({});\n                  })\n                );\n              })\n            )\n            .pipe(\n              filter(s => {\n                if (progress && s && s.progress) {\n                  progress.emit(s.progress * 100);\n                }\n                return s && s.progress === 1;\n              })\n            )\n            .pipe(take(1))\n            .toPromise()\n            .then(res => {\n              let fileUrl = get(res, 'data.output.data.download_url');\n              if (fileUrl) {\n                return downloadFile(fileUrl, filename);\n              }\n            });\n        }\n      });\n  }\n\n  printToSpreadsheet(collectionName: string, columns: Array<IColumnDefinition>, query: Query, subQuery: SubQuery, aggregateOptions: Array<any>, channel: string, type: string, campaignFields: Array<IFormField>, filename?: string) {\n    let url = this.config.apiUrl + 'print/write-spreadsheet';\n    let fixedCollectionName = Models.fixCollectionName(collectionName);\n    type = type === 'csv' ? 'csv' : 'xlsx';\n    //query.limit = 25500;\n    if (subQuery) {\n      query.subQuery = subQuery;\n    }\n\n    let model = Models.getModelByCollectionName(collectionName);\n    query.include = model.include;\n\n    let exportColumns = sortBy(cloneDeep(columns.filter(c => !c.suppressExport)), (c: any) => c.exportOrder || 100).map((c: any) => {\n      if (c.field) {\n        c.field = c.field.replace(/\\?/g, '');\n      }\n      return c;\n    });\n\n    if (this.authentication.isDashboard()) {\n      exportColumns = exportColumns.filter(c => this.excludedDashboardColumns.indexOf(c.field) < 0);\n    }\n    let mime = type === 'csv' ? 'text/plain' : 'application/xlsx';\n    filename = this.files.cleanFileName(filename || fixedCollectionName) + this.rq.getFilenameSuffix() + '.' + type;\n    let cacheQuery: any = {};\n    if (campaignFields && campaignFields.length > 0) {\n      let catalogs = uniq(campaignFields.filter(f => f.type === FormFieldType.catalog).map(f => f.catalog));\n      if (catalogs.length > 0) {\n        cacheQuery.products = { where: { catalogRef: { inq: catalogs } } };\n      }\n      let collectionNames = compact(uniq(campaignFields.filter(f => f.type === FormFieldType.autocomplete).map(f => f.collectionName)));\n      if (collectionNames.length > 0) {\n        cacheQuery.custommodels = { where: { name: { inq: collectionNames } }, cacheKey: 'name' };\n      }\n    }\n\n    let body = {\n      collectionName: fixedCollectionName,\n      columns: exportColumns,\n      query,\n      aggregateOptions,\n      channel,\n      type,\n      cacheQuery\n    };\n    return this.rq.downloadFile(filename, mime, url, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: body\n    });\n  }\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, IGroup } from '@shared/stencil';\nimport { Tenant } from '../tenant/tenant.interface';\nimport { ROLES_CONDITIONS } from '../condition/icondition.interface';\nimport { FORM_FILES_GROUP_FILTER } from '../constants/constants.interface';\n\nlet conditions = {\n  isUpdate: 'getAttributeValue(\"_ect\")',\n  isCreate: 'not getAttributeValue(\"_ect\")',\n  isNotRole: 'not (isRole == 1)'\n};\n\n@Model({\n  className: 'Group',\n  collectionName: 'groups',\n  fields: ['*'],\n  include: ['_tenant'],\n  icon: 'yo-group'\n})\nexport class Group extends IGroup {\n  @Editable('Group', {\n    required: true,\n    title: 'ID',\n    type: FormFieldType.text,\n    readonly: conditions.isUpdate,\n    forceExport: true,\n    exportOrder: 1\n  })\n  @Searchable('Group')\n  _id: string;\n\n  @Editable('Group', { required: false, type: FormFieldType.text })\n  @Searchable('Group')\n  title: string;\n\n  @Editable('Group', { required: false, type: FormFieldType.textarea })\n  @Searchable('Group')\n  description: string;\n\n  @Editable('Group', {\n    type: FormFieldType.autocomplete,\n    filters: FORM_FILES_GROUP_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    clearable: true,\n    fixedPosition: true,\n    maxWidth: 160,\n    maxHeight: 160,\n    crop: 'circle',\n    collectionName: 'files',\n    title: 'ICON',\n    columnDefinition: { name: '_downloadURL' },\n    filterable: false,\n    sortable: false\n  })\n  icon: any;\n\n  @Editable('Group', {\n    required: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    condition: [ROLES_CONDITIONS.isAdmin, conditions.isNotRole],\n    collectionName: 'tenants',\n    multiple: false,\n    columnDefinition: { name: 'name' }\n  })\n  _tenant: Tenant;\n\n  @Editable('Group', {\n    type: FormFieldType.toggle,\n    condition: [conditions.isCreate, ROLES_CONDITIONS.isAdmin]\n  })\n  team?: boolean;\n\n  @Editable('Group', {\n    title: 'ROLE',\n    type: FormFieldType.toggle,\n    condition: [ROLES_CONDITIONS.isAdmin]\n  })\n  isRole?: boolean;\n\n  @Editable('Group', {\n    type: FormFieldType.toggle,\n    condition: [conditions.isCreate, ROLES_CONDITIONS.isAdmin]\n  })\n  service?: boolean;\n\n  @Editable('Group', {\n    readonly: true,\n    visible: false,\n    forceExport: true,\n    filterable: false,\n    columnDefinition: { name: 'list.length' },\n    type: FormFieldType.number,\n    exportOrder: 2\n  })\n  users?: any;\n\n  @Editable('Group', {\n    readonly: true,\n    visible: false,\n    forceExport: true,\n    filterable: false,\n    columnDefinition: { name: 'length' },\n    type: FormFieldType.number,\n    exportOrder: 3\n  })\n  groups?: any;\n\n  @Editable('Group', {\n    name: '_ect',\n    title: 'CREATIONDATE',\n    type: FormFieldType.date,\n    readonly: true\n  })\n  _ect?: any;\n}\n","import { Injectable } from '@angular/core';\nimport { Broker } from '../broker/broker.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { User } from '../../interfaces/user/user.interface';\nimport { Group } from '../../interfaces/group/group.interface';\nexport * from '../../interfaces/group/group.interface';\nimport { ROLES as ROLES_LIST, ROLES_ASK } from '../../interfaces/condition/condition.interface';\nimport { Config } from '../config/config.service';\n\nimport { Observable } from 'rxjs';\nimport { flatMap, map as map$ } from 'rxjs/operators';\n\nimport { uniq, concat, map, difference } from 'lodash-es';\n\n@Injectable()\nexport class Security {\n  public static ROLES = ROLES_LIST;\n  public static ROLES_ASK = ROLES_ASK;\n\n  constructor(protected broker: Broker, protected rq: Requestor, protected config: Config) {}\n  /**\n    Return the list of groups and roles for a specific user\n    */\n  getUserSession(userId: string): Observable<any> {\n    return this.rq.post(this.broker.getApiUrl() + 'businesslogic/getUserSession', { userId });\n  }\n\n  /**\n    Add the specified users to the group\n    */\n  addGroupUsers(group: Group, users: User[]): Observable<any> {\n    this.initGroup(group);\n    if (group._id) {\n      return this.broker.patch('groups', {\n        _id: group._id,\n        $addToSet: { 'users.list': { $each: map(users, '_id') } }\n      });\n    } else {\n      //not used\n      group.users.list = uniq(concat(group.users.list, map(users, '_id')));\n      return this.broker.create('groups', group);\n    }\n  }\n\n  /**\n    Remove the specified users to the group\n    */\n  removeGroupUsers(group: Group, users: User[]): Observable<any> {\n    this.initGroup(group);\n    if (group._id) {\n      return this.broker.patch('groups', {\n        _id: group._id,\n        $pullAll: { 'users.list': map(users, '_id') }\n      });\n    } else {\n      //not used\n      group.users.list = uniq(difference(group.users.list, map(users, '_id')));\n      return this.broker.create('groups', group);\n    }\n  }\n\n  /**\n       Add the specified groups to the group\n       */\n  addGroupGroups(group: Group, groups: Group[]): Observable<any> {\n    this.initGroup(group);\n    if (group._id) {\n      return this.broker.patch('groups', {\n        _id: group._id,\n        $addToSet: { groups: { $each: map(groups, '_id') } }\n      });\n    } else {\n      group.groups = uniq(concat(group.groups, map(groups, '_id')));\n      return this.broker.create('groups', group);\n    }\n  }\n\n  /**\n   Remove the specified groups to the group\n   */\n  removeGroupGroups(group: Group, groups: Group[]): Observable<any> {\n    this.initGroup(group);\n    if (group._id) {\n      return this.broker.patch('groups', {\n        _id: group._id,\n        $pullAll: { groups: map(groups, '_id') }\n      });\n    } else {\n      group.groups = uniq(difference(group.groups, map(groups, '_id')));\n      return this.broker.create('groups', group);\n    }\n  }\n\n  updateGroup(id: string, addedUsers: Array<User>, removedUsers: Array<User> = [], addedGroups: Array<Group> = [], removedGroups: Array<Group> = []): Observable<any> {\n    return this.broker\n      .patch('groups', {\n        _id: id,\n        $pullAll: {\n          'users.list': map(removedUsers, '_id'),\n          groups: map(removedGroups, '_id')\n        }\n      })\n      .pipe(\n        flatMap(() => {\n          return this.broker.patch('groups', {\n            _id: id,\n            $addToSet: {\n              'users.list': { $each: map(addedUsers, '_id') },\n              groups: { $each: map(addedGroups, '_id') }\n            }\n          });\n        })\n      );\n  }\n\n  initGroup(group: Group) {\n    group.groups = group.groups || [];\n    group.users = group.users || {};\n    group.users.list = group.users.list || [];\n  }\n\n  /**\n        Returns the subquery used in the group's tab user grid\n        */\n  getGroupUserSubQuery(group: Group) {\n    return {\n      collectionName: 'group',\n      where: { _id: group._id },\n      field: '_id',\n      values: 'users.list'\n    };\n  }\n\n  /**\n    Returns the subquery used in the group's tab sub group grid\n    */\n  getGroupGroupSubQuery(group: Group) {\n    return {\n      collectionName: 'group',\n      where: { _id: group._id },\n      field: '_id',\n      values: 'groups'\n    };\n  }\n\n  getAncestry(groupIds: string[], mode: 'ancestors' | 'descendants' | 'both' = 'descendants') {\n    let url = this.config.apiUrl + 'groups/getAncestry';\n    return this.rq\n      .post(url, {\n        groupIds\n      })\n      .pipe(\n        map$(retVal => {\n          if (mode === 'descendants') {\n            return uniq([].concat(retVal.descendants || []).concat(groupIds || []));\n          } else if (mode === 'ancestors') {\n            return uniq([].concat(retVal.groups || []).concat(groupIds || []));\n          } else if (mode === 'both') {\n            return uniq(\n              []\n                .concat(retVal.descendants || [])\n                .concat(retVal.groups || [])\n                .concat(groupIds || [])\n            );\n          }\n        })\n      );\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Broker } from '../broker/broker.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { Config } from '../config/config.service';\n\nimport { ITenant } from '@shared/stencil';\nimport { timer, of } from 'rxjs';\nimport { concatMap, catchError, filter, take } from 'rxjs/operators';\nimport { get } from 'lodash-es';\n\n@Injectable()\nexport class Tenants {\n  constructor(protected rq: Requestor, protected broker: Broker, protected config: Config) {}\n\n  clone(from: ITenant, to: ITenant, progress?: EventEmitter<number>) {\n    return this.rq\n      .post(this.broker.getApiUrl() + 'demoManagement/CopyTenantToTenant', {\n        copyFromId: from._id,\n        copyToId: to._id\n      })\n      .toPromise()\n      .then(ret => {\n        if (ret._id) {\n          return timer(1000, 500)\n            .pipe(\n              concatMap(() => {\n                return this.rq.get(this.config.publicApiUrl + 'jobs/' + ret._id, false, null).pipe(\n                  catchError(() => {\n                    return of({});\n                  })\n                );\n              })\n            )\n            .pipe(\n              filter(s => {\n                if (progress && s && s.progress) {\n                  progress.emit(s.progress * 100);\n                }\n                return s && s.progress === 1;\n              })\n            )\n            .pipe(take(1))\n            .toPromise()\n            .then(res => {\n              let errors = get(res, 'data.output.errors');\n              let data = get(res, 'data.output.data');\n              return { data, errors };\n            });\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Broker } from '../broker/broker.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { User } from '../../interfaces/user/user.interface';\nimport { SubQuery, Query } from '@shared/stencil';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { uniq } from 'lodash-es';\n\n@Injectable()\nexport class Users {\n  public static adminIds: Array<any> = [{ _id: '53fb03c6546847ee0536386a' }];\n  public static simplifiedFields: Array<string> = ['_id', 'imageData', 'firstName', 'lastName', 'email', 'telephone', 'username'];\n\n  constructor(protected broker: Broker, protected rq: Requestor) {}\n\n  getSimplifiedProfile(\n    userId\n  ): Observable<{\n    _id?: string;\n    imageData?: string;\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    telephone?: string;\n    username?: string;\n  }> {\n    return this.broker.getById('user', userId, Users.simplifiedFields);\n  }\n\n  getFreshdeskUrl() {\n    let url = this.broker.getApiUrl() + 'endpoints/getFreshdeskUrl';\n    return this.rq.post(url, { host_url: 'support-mobile.operations.yoobic.com' }).pipe(\n      map(res => {\n        return res;\n      })\n    );\n  }\n\n  setAcl(user: User, groups: Array<string>) {\n    this.broker.setAcl(user, groups);\n  }\n\n  getCustomFilterNoAdmin(showMe: boolean = true) {\n    let ids = Users.adminIds.map(i => i._id);\n    if (!showMe) {\n      ids.push(this.rq.session.userId);\n    }\n    return { _id: { nin: ids } };\n  }\n\n  isUsernameTaken(username: string) {\n    return this.rq.post(this.broker.getApiUrl() + 'businesslogic/isUsernameTaken', { params: { username } }).pipe(map(res => res.data));\n  }\n\n  getUsersByLocation(locationId: string) {\n    return this.broker.getAll('user', Users.simplifiedFields, null, null, [[{ field: 'locationRef', operator: { _id: 'eq' }, value: locationId }]]).pipe(map(res => res.data));\n  }\n\n  getGeofilterUsers(locationId: string, userTags?: Array<string>) {\n    let where = { _id: { inq: [locationId] } };\n    let geofilterQuery: Query = {\n      limit: 0,\n      fields: ['userRef'],\n      subQuery: <SubQuery>{\n        collectionName: 'locations',\n        field: 'locationsRef',\n        values: '_id',\n        where: where\n      }\n    };\n    return this.broker.getAllQuery('geofilters', geofilterQuery).pipe(\n      mergeMap(geofilters => {\n        let userIds: Array<string> = geofilters.data.map(geofilter => geofilter.userRef);\n        userIds = uniq(userIds);\n        let userFilter = [[{ field: '_id', operator: { _id: 'inq' }, value: userIds }]];\n        if (userTags && userTags.length > 0) {\n          userFilter[0].push({ field: 'tags', operator: { _id: 'inq' }, value: userTags });\n        }\n        return this.broker.getAll('user', Users.simplifiedFields, null, null, userFilter).pipe(map(res => res.data));\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '../config/config.service';\n\nimport { CoreConfig } from '@shared/common';\n\n@Injectable()\nexport class Version {\n  constructor(private config: Config, private coreConfig: CoreConfig) {}\n\n  public get(includeServerName: boolean) {\n    let retVal: string;\n    let serverName = this.config.serverName.toUpperCase();\n    if (includeServerName && serverName !== 'PRODUCTION') {\n      retVal = this.coreConfig.getAppVersion() + ' - ' + serverName;\n    } else {\n      retVal = this.coreConfig.getAppVersion();\n    }\n    // if (this.coreConfig.isWKWebView()) {\n    //   retVal += ' W';\n    // }\n    return retVal;\n  }\n\n  isCurrentVersionHigherThan(version: string): boolean {\n    let currentVersion = this.coreConfig.getAppVersion();\n    if (currentVersion === version) {\n      return true;\n    }\n\n    let current = currentVersion.split('.');\n    let required = version.split('.');\n    let len = Math.min(current.length, required.length);\n\n    // loop while the components are equal\n    for (let i = 0; i < len; i++) {\n      // A bigger than B\n      if (parseInt(current[i], null) > parseInt(required[i], null)) {\n        return true;\n      }\n      // B bigger than A\n      if (parseInt(current[i], null) < parseInt(required[i], null)) {\n        return false;\n      }\n    }\n    // If one's a prefix of the other, the longer one is greater.\n    if (current.length > required.length) {\n      return true;\n    }\n    if (current.length < required.length) {\n      return false;\n    }\n    // Otherwise they are the same.\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\n//import { WorkBook, read, readFile, utils, SSF, write } from 'xlsx';\nimport * as XLSX from 'xlsx';\n//const XLSX = require('xlsx');\nimport { toDate, getUTCOffset, dateAdd, dateFormat } from '@shared/stencil';\n\n//import * as FileSaver from 'file-saver';\nimport saveAs from 'file-saver';\nimport { parse } from 'papaparse';\n\nimport { forEach, get, isArray, isObject, isNumber, keys, find, isDate } from 'lodash-es';\n\n//declare const System: System;\n\n@Injectable()\nexport class Xlsx {\n  // private _xlsx: any;\n  // private _papaparse: any;\n\n  constructor() {}\n\n  // getXlsx() {\n  //     if (this._xlsx) {\n  //         return Promise.resolve(this._xlsx);\n  //     }\n  //     return System.import(/* webpackChunkName: \"xlsx\" */'xlsx').then((xlsx) => {\n  //         this._xlsx = xlsx;\n  //         return xlsx;\n  //     });\n  // }\n\n  // getPapaParse() {\n  //     if (this._papaparse) {\n  //         return Promise.resolve(this._papaparse);\n  //     }\n  //     return System.import(/* webpackChunkName: \"xlsx\" */'papaparse').then((papaparse) => {\n  //         this._papaparse = papaparse;\n  //         return papaparse;\n  //     });\n  // }\n\n  readFile(nativeFile: File | Blob, type = 'blob', encoding?: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      let fileReader = new FileReader();\n      fileReader.onload = (e: any) => {\n        resolve(e.target.result);\n      };\n      fileReader.onerror = e => reject(e);\n      if (type === 'blob') {\n        fileReader.readAsDataURL(<any>nativeFile);\n      } else if (type === 'binary') {\n        fileReader.readAsBinaryString(<any>nativeFile);\n      } else {\n        fileReader.readAsText(<any>nativeFile, encoding);\n      }\n    });\n  }\n\n  read(file: File) {\n    //return this.getXlsx().then((xlsx: any) => {\n    //return this.getPapaParse().then((papaparse: any) => {\n    return this.readFile(file, 'binary').then(data => {\n      let csv = '';\n      if (file.name.endsWith('csv')) {\n        csv = data;\n      } else {\n        let workbook = XLSX.read(data, { type: 'binary' });\n        let worksheet = workbook.Sheets[workbook.SheetNames[0]];\n        csv = XLSX.utils['sheet_to_csv'](worksheet, { FS: ';' });\n      }\n      let retVal = parse(csv, { skipEmptyLines: true });\n      return retVal.data;\n    });\n    //});\n    //});\n  }\n\n  exportToFile(content, type, encoding, filename) {\n    encoding = encoding || 'charset=ISO-8859-1';\n    filename = filename || 'data.csv';\n    type = type || 'data:application/csv;charset=ISO-8859-1;';\n\n    if (encoding === 'base64') {\n      content = this.b64toBlob(content, type);\n    }\n    let blob = new Blob([content], {\n      type: type\n    });\n    return this.saveBlob(blob, filename);\n  }\n\n  saveBlob(blob: Blob, filename: string) {\n    (<any>saveAs)(blob, filename);\n  }\n\n  getBase64MimeType(base64) {\n    return base64.split(';')[0].replace('data:', '');\n  }\n\n  b64toBlob(b64Data, contentType = null, sliceSize = 512) {\n    if (!contentType) {\n      contentType = this.getBase64MimeType(b64Data);\n    }\n    b64Data = b64Data.replace('data:' + contentType + ';base64,', '').replace(/\\s/g, '');\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n\n  readSheets(file: File) {\n    //return this.getXlsx().then((xlsx: any) => {\n    //return this.getPapaParse().then((papaparse: any) => {\n    return this.readFile(file, 'binary').then(data => {\n      let retVal = [];\n      if (file.name.endsWith('csv')) {\n        retVal.push(parse(data, { skipEmptyLines: true }).data);\n      } else {\n        let workbook = XLSX.read(data, { type: 'binary' });\n        workbook.SheetNames.forEach(sheet => {\n          let v = XLSX.utils['sheet_to_csv'](workbook.Sheets[sheet], { FS: ';' });\n          retVal.push(parse(v, { skipEmptyLines: true }).data);\n        });\n      }\n      return retVal;\n    });\n    //});\n    //});\n  }\n\n  write(title: string, sheets: Array<{ columns: Array<any>; data: Array<any>; title: string }>) {\n    //return this.getXlsx().then((xlsx: any) => {\n    let tables = new Array<any>();\n    let headers = new Array<any>();\n    forEach(sheets, s => {\n      let hasHeader = false;\n      let table = [];\n      let header = [];\n      forEach(s.data, function(d) {\n        let row = [];\n        forEach(s.columns, function(c) {\n          if (!((c.visible === false || c.suppressExport === true || c.action) && c.forceExport !== true)) {\n            let value: any = get(d, c.name);\n            if (c.type === 'address') {\n              value = value && value.address ? value.address : value;\n              if (typeof value === 'object') {\n                value = null;\n              }\n            }\n            if (c.type === 'catalog') {\n              delete value.valid;\n              let retVal = '';\n              keys(value).forEach(function(pid) {\n                let product = find(c.products, (p: any) => {\n                  return p._id === pid;\n                });\n                if (product) {\n                  retVal += product.reference + ' * ' + value[pid] + ',';\n                }\n              });\n              value = retVal; //JSON.stringify(value).replace('{', '').replace('}', '');\n            }\n            if (c.type === 'date' && value) {\n              let m = toDate(value);\n              m = dateAdd(m, 'minutes', getUTCOffset(m));\n              value = m;\n            }\n            if (c.type === 'time' && value) {\n              let t = toDate(value);\n              //t = t.add(t.utcOffset(), 'minutes');\n              value = dateFormat(t, 'HH:mm:ss');\n            }\n            if (c.type === 'datetime' && value) {\n              let dt = toDate(value);\n              //t = t.add(t.utcOffset(), 'minutes');\n              value = dateFormat(dt, 'L LT');\n            }\n            if (c.name === '_acl') {\n              value = value.groups.r; //_difference(value.groups.r, roles);\n            }\n            if (value && value._downloadURL) {\n              value = value._downloadURL;\n            }\n            if (isObject(value) && !isDate(value) && !isArray(value)) {\n              //&& _isEmpty(value)\n              value = null;\n            }\n\n            row.push(value);\n            if (!hasHeader) {\n              header.push(c.displayName || c.name);\n            }\n          }\n        });\n        hasHeader = true;\n        table.push(row);\n      });\n      tables.push(table);\n      headers.push(header);\n    });\n    let wb = { SheetNames: [], Sheets: {}, Props: null };\n    for (let i = 0; i < tables.length; i++) {\n      tables[i].unshift(headers[i]);\n      let wsName = sheets[i].title || 'SheetJs_' + i;\n      let ws = this.sheetFromArrayOfArrays(tables[i]);\n      wb.SheetNames.push(wsName);\n      wb.Sheets[wsName] = ws;\n    }\n    let wbout = XLSX.write(wb, <any>{ bookType: 'xlsx', bookSST: true, type: 'binary' });\n    let filename = title + '-' + dateFormat(new Date(), 'YYYY-MM-DDTHH:MM') + '.xlsx';\n    this.exportToFile(this.s2ab(wbout), 'application/octet-stream', '', filename);\n    //});\n  }\n\n  private datenum(v: any, date1904?: boolean) {\n    if (date1904) {\n      v += 1462;\n    }\n    let epoch: any = Date.parse(v);\n    return (epoch - <any>new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n  }\n\n  private sheetFromArrayOfArrays(data, opts?) {\n    let ws = {};\n    let range = { s: { c: 10000000, r: 10000000 }, e: { c: 0, r: 0 } };\n    for (let R = 0; R !== data.length; ++R) {\n      for (let C = 0; C !== data[R].length; ++C) {\n        if (range.s.r > R) {\n          range.s.r = R;\n        }\n        if (range.s.c > C) {\n          range.s.c = C;\n        }\n        if (range.e.r < R) {\n          range.e.r = R;\n        }\n        if (range.e.c < C) {\n          range.e.c = C;\n        }\n        let cell: any = {\n          v: data[R][C]\n        };\n        if (cell.v === null) {\n          continue;\n        }\n\n        let cellRef = XLSX.utils.encode_cell({ c: C, r: R });\n\n        if (typeof cell.v === 'number') {\n          cell.t = 'n';\n        } else if (typeof cell.v === 'boolean') {\n          cell.t = 'b';\n        } else if (cell.v instanceof Date) {\n          cell.t = 'n';\n          cell.z = (<any>XLSX.SSF)._table[14];\n          cell.v = this.datenum(cell.v);\n        } else if (isArray(cell.v) && cell.v.length > 0 && isNumber(cell.v[0])) {\n          cell.t = 's';\n          cell.v = '[' + cell.v.join(',') + ']';\n        } else if (isArray(cell.v) && cell.v.length > 0 && !isNumber(cell.v[0])) {\n          cell.t = 's';\n          cell.v = cell.v.join(',');\n        } else if (isArray(cell.v) && cell.v.length === 0) {\n          cell.t = 's';\n          cell.v = '';\n        } else {\n          cell.t = 's';\n        }\n\n        ws[cellRef] = cell;\n      }\n    }\n    if (range.s.c < 10000000) {\n      ws['!ref'] = XLSX.utils.encode_range(range.s, range.e);\n    }\n    return ws;\n  }\n\n  private s2ab(s) {\n    let buf = new ArrayBuffer(s.length);\n    let view = new Uint8Array(buf);\n    for (let i = 0; i !== s.length; ++i) {\n      view[i] = s.charCodeAt(i) & 0xff;\n    }\n    return buf;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Translate } from '@shared/translate';\nimport { isBlank } from '@shared/stencil';\nimport { keys as _keys } from 'lodash-es';\n\n@Pipe({ name: 'filter' })\nexport class FilterPipe implements PipeTransform {\n  private translate: Translate;\n\n  constructor(translate: Translate) {\n    this.translate = translate;\n  }\n\n  transform(value: Array<any>, ...args: any[]): any {\n    //value: array of values to filter\n    //args[0]: string to match\n    //args[1]: list of fields to use to compare\n    //args[2]: not sure? seems to exlude if false\n    //args[3]: use translation\n\n    if (!args || !args[0]) {\n      //&& !args[1]\n      return value;\n    } else if (value) {\n      let translate = args[3];\n      return value.filter(item => {\n        if (typeof item === 'string') {\n          return (\n            item &&\n            this.getStringToTest(item, translate)\n              .toLowerCase()\n              .indexOf(args[0].toLowerCase()) >= 0\n          );\n        }\n        let keys = args[1] || _keys(item);\n        keys = [].concat(keys);\n\n        let retVal = false;\n        for (let i = 0; i < keys.length; i++) {\n          let key = keys[i];\n          if (args[0] && args[0].toLowerCase) {\n            if (typeof item[key] === 'string' || item[key] instanceof String) {\n              let index = this.getStringToTest(item[key], translate)\n                .toLowerCase()\n                .indexOf(args[0].toLowerCase());\n              retVal = retVal || (args[2] === false ? index < 0 : index >= 0);\n            }\n          } else if (!args[0] && args[1]) {\n            let bool = item.hasOwnProperty(key) && !isBlank(item[key]); //item.hasOwnProperty(key) && item[key];\n            retVal = retVal || (args[2] === false ? !bool : bool);\n          }\n        }\n        return retVal;\n      });\n    }\n  }\n\n  getStringToTest(s: string, translate: boolean): string {\n    if (translate && this.translate) {\n      return this.translate.get(s.toString().toUpperCase());\n    } else {\n      return s;\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; //, HTTP_INTERCEPTORS\n\nimport { CommonModule, Network, Log } from '@shared/common';\nimport { TranslateModule } from '@shared/translate';\n\n//import { DATA_PROVIDERS } from './services'; //HttpCustomInterceptor, Config\nimport { Algorithms } from './services/algorithms/algorithms.service';\nimport { Authentication } from './services/authentication/authentication.service';\nimport { AuthenticationGuard, CanDeactivateGuard } from './services/authentication/authentication.guard';\nimport { BackupService } from './services/backup/backup.service';\nimport { Box } from './services/box/box.service';\nimport { Blog } from './services/blog/blog.service';\nimport { Broker } from './services/broker/broker.service';\nimport { Cache } from './services/cache/cache.service';\nimport { Config } from './services/config/config.service';\nimport { CurrentSessionResolver } from './services/authentication/current-session.resolver';\nimport { Dashboard } from './services/dashboard/dashboard.service';\nimport { Files } from './services/files/files.service';\nimport { FilesBroker } from './services/files/files-broker.service';\nimport { Googlemaps } from './services/googlemaps/googlemaps.service';\nimport { Googletranslate } from './services/googletranslate/googletranslate.service';\nimport { HttpCustomInterceptor } from './services/http-interceptor/http-interceptor.service';\nimport { PlatformService } from './services/platform/platform.service';\nimport { LoadingBar } from './services/loading-bar/loading-bar.service';\nimport { Locations } from './services/locations/locations.service';\nimport { Loopback } from './services/loopback/loopback.service';\nimport { Missiondescriptions } from './services/missiondescriptions/missiondescriptions.service';\nimport { Models } from './services/models/models.service';\nimport { Print } from './services/print/print.service';\nimport { Push } from './services/push/push.service';\nimport { Requestor } from './services/requestor/requestor.service';\nimport { Security } from './services/security/security.service';\nimport { Session } from './services/session/session.service';\nimport { Smartloc } from './services/smartloc/smartloc.service';\nimport { Tenants } from './services/tenants/tenants.service';\nimport { Unsplash } from './services/unsplash/unsplash.service';\nimport { Users } from './services/users/users.service';\nimport { Version } from './services/version/version.service';\nimport { Workplace } from './services/workplace/workplace.service';\nimport { Xlsx } from './services/xlsx/xlsx.service';\nlet SERVICES = [\n  Algorithms, //\n  Authentication,\n  AuthenticationGuard,\n  BackupService,\n  Box,\n  Blog,\n  Broker,\n  CanDeactivateGuard,\n  Cache,\n  Config,\n  CurrentSessionResolver,\n  Dashboard,\n  Files,\n  FilesBroker,\n  Googlemaps,\n  Googletranslate,\n  HttpCustomInterceptor,\n  PlatformService,\n  LoadingBar,\n  Locations,\n  Loopback,\n  Missiondescriptions,\n  Models,\n  Print,\n  Push,\n  Requestor,\n  Security,\n  Session,\n  Smartloc,\n  Tenants,\n  Unsplash,\n  Users,\n  Version,\n  Workplace,\n  Xlsx\n];\n\nimport { FilterPipe } from './pipes/filter/filter.pipe';\n\nlet PIPES = [FilterPipe];\n\nimport { FileTransfer } from '@ionic-native/file-transfer/ngx';\nimport { DocumentViewer } from '@ionic-native/document-viewer/ngx';\nimport { Device } from '@ionic-native/device/ngx';\nimport { File as FileNative } from '@ionic-native/file/ngx';\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\nimport { OneSignal } from '@ionic-native/onesignal/ngx';\nimport { Push as PushNative } from '@ionic-native/push/ngx';\n\n@NgModule({\n  declarations: [...PIPES],\n  imports: [CommonModule, TranslateModule, HttpClientModule],\n  exports: [CommonModule, TranslateModule, HttpClientModule, ...PIPES]\n})\nexport class DataCoreModule {\n  static forRoot(configuredProviders: Array<Provider> = []): ModuleWithProviders {\n    return {\n      ngModule: DataCoreModule,\n      providers: [\n        ...SERVICES,\n        ...configuredProviders,\n        FileTransfer,\n        DocumentViewer,\n        Device,\n        FileOpener,\n        OneSignal,\n        PushNative,\n        FileNative,\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: HttpCustomInterceptor,\n          deps: [Config, Network, Log],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { IAggregateLog } from '@shared/stencil';\n\n@Model({\n  className: 'AggregateLog',\n  collectionName: 'aggregateLogs',\n  fields: ['*'],\n  include: []\n})\nexport class AggregateLog extends IAggregateLog {}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, IAlgorithm } from '@shared/stencil';\n\n@Model({\n  className: 'Algorithm',\n  collectionName: 'algorithm',\n  fields: ['name', '_id', 'stitch'],\n  include: []\n})\nexport class Algorithm extends IAlgorithm {\n  @Editable('Algorithm', { required: true, type: FormFieldType.text })\n  @Searchable('Algorithm')\n  name: string;\n\n  stitch?: boolean;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { FormFieldType, IAutorenewConfig } from '@shared/stencil';\nimport { MissionDescription } from '../mission-description/mission-description.interface';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\n\nimport { range } from 'lodash-es';\n\n@Model({\n  className: 'AutorenewConfig',\n  collectionName: 'autorenewConfig',\n  fields: ['*'],\n  include: ['descriptionSource', 'descriptionTarget']\n})\nexport class AutorenewConfig extends IAutorenewConfig {\n  @Editable('AutorenewConfig', { required: true, type: FormFieldType.text })\n  @Searchable('AutorenewConfig')\n  title: string;\n\n  @Editable('AutorenewConfig', {\n    required: true,\n    title: 'PREFIX',\n    type: FormFieldType.text,\n    flex: 50\n  })\n  @Searchable('AutorenewConfig')\n  prefix_title: string;\n\n  @Editable('AutorenewConfig', {\n    type: FormFieldType.autocomplete,\n    translate: true,\n    values: range(1, 5),\n    flex: 50,\n    clearable: true,\n    icon: 'yo-flag'\n  })\n  priority?: number;\n\n  @Editable('AutorenewConfig', {\n    type: FormFieldType.autocomplete,\n    title: 'SOURCE',\n    collectionName: 'missiondescriptions',\n    required: false,\n    columnDefinition: { name: 'title' },\n    icon: 'yo-list2',\n    filterable: false,\n    sortable: false,\n    filters: [[{ field: 'archived', operator: { _id: 'neq' }, value: true }]],\n    hiddenFields: ['archived']\n  })\n  descriptionSource: MissionDescription;\n\n  @Editable('AutorenewConfig', {\n    type: FormFieldType.autocomplete,\n    title: 'TARGET',\n    collectionName: 'missiondescriptions',\n    required: false,\n    columnDefinition: { name: 'title' },\n    icon: 'yo-list2',\n    filterable: false,\n    sortable: false,\n    filters: [[{ field: 'archived', operator: { _id: 'neq' }, value: true }]],\n    hiddenFields: ['archived']\n  })\n  descriptionTarget: MissionDescription;\n\n  @Editable('AutorenewConfig', { type: FormFieldType.toggle })\n  @Searchable('AutorenewConfig')\n  active: boolean;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, IBackup } from '@shared/stencil';\n\n@Model({\n  className: 'Backup',\n  fields: ['*'],\n  include: []\n})\nexport class Backup extends IBackup {\n  @Editable('Backup', { required: false, type: FormFieldType.date })\n  date: Date;\n\n  @Editable('Backup', { required: true, type: FormFieldType.autocomplete, clearable: true })\n  backup: { _id: string; name: string; description: string; badge: string };\n\n  @Editable('Backup', {\n    required: false,\n    type: FormFieldType.autocomplete,\n    clearable: true,\n    multiple: true,\n    values: ['missions', 'missiondescription', 'missiondatas', 'user', 'locations', 'locationtypes', 'missiondatas', 'photos']\n  })\n  collections: Array<string>;\n}\n","import { FormFieldType, ICatalog } from '@shared/stencil';\n\nimport { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FORM_FILES_IMAGE_FILTER } from '../constants/constants.interface';\nimport { getGroupsTransform } from '../condition/condition.interface';\n\n@Model({\n  className: 'Catalog',\n  collectionName: 'catalogs',\n  fields: ['*'],\n  include: [],\n  icon: 'yo-catalogue'\n})\nexport class Catalog extends ICatalog {\n  @Editable('Catalog', { required: true, type: FormFieldType.text })\n  @Searchable('Catalog')\n  title: string;\n\n  @Editable('Catalog', {\n    type: FormFieldType.autocomplete,\n    maxWidth: 600,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    maxHeight: 300,\n    crop: 'square',\n    collectionName: 'files',\n    title: 'PHOTO',\n    required: true,\n    columnDefinition: { name: '_downloadURL' }\n  })\n  image: any;\n\n  @Editable('Catalog', { type: FormFieldType.textarea })\n  description: string;\n\n  @Editable('Catalog', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false,\n    required: true\n  })\n  group: string;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { FormFieldType, IFormField, Filters, IChartDefinition } from '@shared/stencil';\n\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { MissionDescription } from '../mission-description/mission-description.interface';\n\nexport const CHART_TYPES = ['line', 'spline', 'area', 'areaspline', 'column', 'bar', 'radar', 'pie', 'doughnut', 'treemap'];\nexport const CHART_DATEGROUPINGBY = ['year', 'month', 'week', 'day', 'calendar'];\nexport const CHART_SHOW_AS = ['chart', 'grid', 'map', 'micro'];\nexport const CHART_DATETIMEFORMAT = ['d', 'dd', 'DD', 'w', 'MMM'];\nexport const CHART_TIMESCALE = ['last7days', 'lastweek', 'last30days', 'lastmonth', 'last90days', 'lastquarter', 'last365days', 'lastyear'];\n\nlet conditions = {\n  showAsChart: 'showAs==\"chart\"',\n  isMissionOrMissionData: 'collectionName==\"missions\" or collectionName==\"missiondatas\"',\n  isMissionData: 'collectionName==\"missiondatas\"',\n  isMission: 'collectionName==\"missions\"',\n  groupByDate: 'groupByDate == 1'\n};\n\nexport interface IMissionField {\n  selectedDescription: MissionDescription;\n  fields?: Array<IFormField> | IFormField;\n}\n\nexport interface IMissionFields {\n  selectedDescription: MissionDescription;\n  fields?: Array<IFormField>;\n}\n\nexport function onChartMissionFieldsChange(missionfields, data) {\n  if (missionfields && missionfields.selectedDescription) {\n    if (!data.title) {\n      data.title = missionfields.selectedDescription.title;\n    }\n  }\n}\n\n@Model({\n  className: 'ChartDefinition',\n  collectionName: 'chartdefinitions',\n  fields: ['*'],\n  include: []\n})\nexport class ChartDefinition extends IChartDefinition {\n  @Editable('ChartDefinition', {\n    title: 'QUERYON',\n    type: FormFieldType.autocomplete,\n    translate: true,\n    values: ['missions', 'missiondatas', 'custom'],\n    clearable: false,\n    required: true,\n    autoselect: true\n  })\n  collectionName?: string;\n\n  @Editable('ChartDefinition', {\n    type: FormFieldType.missionfield,\n    condition: conditions.isMissionData,\n    title: 'CAMPAIGN',\n    required: true,\n    onChange: onChartMissionFieldsChange\n  })\n  missionfields?: IMissionField;\n\n  @Editable('ChartDefinition', { required: true, type: FormFieldType.text })\n  @Searchable('ChartDefinition')\n  title: string;\n\n  @Editable('ChartDefinition', { required: false, type: FormFieldType.textarea })\n  @Searchable('ChartDefinition')\n  description?: string;\n\n  @Editable('ChartDefinition', {\n    title: 'SHOWAS',\n    type: FormFieldType.autocomplete,\n    flex: 33,\n    values: CHART_SHOW_AS\n  })\n  showAs?: string;\n\n  @Editable('ChartDefinition', {\n    type: FormFieldType.autocomplete,\n    values: CHART_TYPES,\n    flex: 33,\n    condition: conditions.showAsChart,\n    translate: true,\n    clearable: false\n  })\n  type?: string;\n\n  @Editable('ChartDefinition', {\n    title: 'PALETTE',\n    type: FormFieldType.autocomplete,\n    flex: 34,\n    condition: conditions.showAsChart,\n    translate: true,\n    values: ['palette0', 'palette1', 'palette2', 'palette3'],\n    clearable: false,\n    autoselect: true\n  })\n  palette?: string;\n\n  @Editable('ChartDefinition', {\n    type: FormFieldType.checkbox,\n    flex: 34,\n    condition: conditions.isMissionOrMissionData\n  })\n  groupByDate?: boolean;\n\n  @Editable('ChartDefinition', {\n    title: 'DATETIMEFORMAT',\n    type: FormFieldType.autocomplete,\n    flex: 33,\n    tag: true,\n    condition: conditions.groupByDate,\n    values: CHART_DATETIMEFORMAT,\n    clearable: true\n  })\n  datetimeFormat?: string;\n\n  @Editable('ChartDefinition', {\n    title: 'TIMESCALE',\n    type: FormFieldType.autocomplete,\n    flex: 33,\n    condition: conditions.groupByDate,\n    values: CHART_TIMESCALE\n  })\n  timescale?: string;\n\n  @Editable('ChartDefinition', {\n    title: 'GROUPBY',\n    type: FormFieldType.autocomplete,\n    translate: true,\n    flex: 34,\n    values: CHART_DATEGROUPINGBY,\n    condition: conditions.groupByDate,\n    clearable: false\n  })\n  dateGrouping?: string;\n\n  @Editable('ChartDefinition', {\n    type: FormFieldType.checkbox,\n    flex: 33,\n    condition: conditions.isMission\n  })\n  groupByTag?: boolean;\n\n  @Editable('ChartDefinition', {\n    type: FormFieldType.checkbox,\n    flex: 33,\n    condition: conditions.isMission\n  })\n  groupByCampaign?: boolean;\n\n  @Editable('ChartDefinition', { flex: 33, type: FormFieldType.checkbox })\n  showLegend?: boolean;\n\n  @Editable('ChartDefinition', { flex: 33, type: FormFieldType.checkbox })\n  showValues?: boolean;\n\n  @Editable('ChartDefinition', { flex: 33, type: FormFieldType.checkbox })\n  colorByPoint?: boolean;\n\n  @Editable('ChartDefinition', {\n    type: FormFieldType.autocomplete,\n    flex: 34,\n    values: ['normal', 'percent'],\n    clearable: true\n  })\n  stacked?: string;\n\n  @Editable('ChartDefinition', { required: false, type: FormFieldType.textarea })\n  @Searchable('ChartDefinition')\n  custom?: string;\n\n  mapTransform?: (retVal: Array<{ _id: string; serie?: string; value: number; color?: string }>, cd?: ChartDefinition, broker?: any, component?: any) => {};\n  filters?: Filters;\n\n  showPreviousYear?: boolean;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, ICurrency } from '@shared/stencil';\nimport { Translate } from '@shared/translate';\nimport { IAcl } from '../entity/entity.interface';\n\n@Model({\n  className: 'Currency',\n  collectionName: 'currencies',\n  fields: ['*'],\n  include: []\n})\nexport class Currency implements ICurrency {\n  _id?: string;\n  _acl?: IAcl;\n  _lmt?: string;\n  _ect?: string;\n\n  @Editable('Currency', {\n    required: true,\n    type: FormFieldType.autocomplete,\n    title: 'LANGUAGE',\n    translate: true,\n    values: Translate.availablesLanguage,\n    clearable: false\n  })\n  @Searchable('Currency')\n  currency: string;\n\n  @Editable('Currency', { required: true, type: FormFieldType.text })\n  @Searchable('Currency')\n  symbol: string;\n\n  @Editable('Currency', { required: true, type: FormFieldType.number, title: 'RATE1' })\n  @Searchable('Currency')\n  rate: number;\n}\n","import { ChartDefinition } from '../chart-definition/chart-definition.interface';\n\nimport { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, IDashboard } from '@shared/stencil';\nimport { Tenant } from '../tenant/tenant.interface';\nimport { ROLES_CONDITIONS } from '../condition/condition.interface';\n\n@Model({\n  className: 'Dashboard',\n  collectionName: 'dashboards',\n  fields: ['*'],\n  include: []\n})\nexport class Dashboard extends IDashboard {\n  @Editable('Dashboard', { required: true, type: FormFieldType.text, sortable: true })\n  @Searchable('Dashboard')\n  title: string;\n\n  @Editable('Dashboard', { required: false, type: FormFieldType.textarea })\n  @Searchable('Dashboard')\n  description: string;\n\n  @Editable('Dashboard', {\n    name: '_lmt',\n    title: 'DATE',\n    type: FormFieldType.datetime,\n    readonly: true,\n    sortable: true,\n    filterableAdvanced: true,\n    advanced: true\n  })\n  _lmt: any;\n\n  tabs: Array<{\n    title: string;\n    items: Array<{\n      col: number;\n      row: number;\n      sizex: number;\n      sizey: number;\n      definition: ChartDefinition;\n    }>;\n  }>;\n\n  @Editable('Dashboard', {\n    required: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    collectionName: 'tenants',\n    columnDefinition: { name: 'name' },\n    multiple: false,\n    filterable: true,\n    condition: [ROLES_CONDITIONS.isAdmin]\n  })\n  _tenant: Tenant;\n  _tenantRef?: string;\n}\n","export interface IAcl {\n  creator: string;\n  groups: { r: Array<string>; w: Array<string> };\n  //users: { r: Array<string>; w: Array<string> };\n}\n\nexport interface IEntity {\n  _id?: string | number | boolean;\n  _acl?: IAcl;\n  _lmt?: string;\n  _ect?: string;\n}\n\nexport interface IProperty {\n  title?: string;\n  type?: string;\n  values: Array<any>;\n}\n\nexport class Entity implements IEntity {\n  public _id?: string | number | boolean;\n  public _acl?: IAcl;\n  public _lmt?: string;\n  public _ect?: string;\n\n  public properties?: IProperty[];\n\n  constructor(source?: any) {\n    if (typeof source === 'string' || typeof source === 'number' || typeof source === 'boolean' || typeof source === 'undefined') {\n      this._id = source;\n    }\n  }\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { getGroupsTransform, ROLES_CONDITIONS } from '../condition/condition.interface';\n\nimport { FormFieldType, IFile } from '@shared/stencil';\nimport { Tenant } from '../tenant/tenant.interface';\n\nexport function onUrlChange(doc, data) {\n  if (doc && doc.name) {\n    data._filename = doc.name;\n  }\n  if (doc && doc.size) {\n    data.size = doc.size;\n  }\n  if (doc && doc.type) {\n    data.mimeType = doc.type;\n  }\n}\n\n@Model({\n  className: 'File',\n  collectionName: 'files',\n  fields: ['*'],\n  include: ['container'],\n  icon: 'yo-file'\n})\nexport class File extends IFile {\n  @Editable('File', {\n    name: '_ect',\n    title: 'CREATIONDATE',\n    type: FormFieldType.date,\n    readonly: true,\n    sortable: true,\n    exportOrder: 21,\n    filterableAdvanced: true\n  })\n  _ect?: any;\n\n  @Editable('File', {\n    type: FormFieldType.documentuploader,\n    filterable: false,\n    required: true,\n    title: 'DOCUMENT',\n    columnDefinition: { width: 52 },\n    onChange: onUrlChange\n  })\n  _downloadURL: string;\n\n  @Editable('File', { title: 'TITLE', required: true, type: FormFieldType.text, sortable: true })\n  @Searchable('File')\n  _filename: string;\n\n  @Editable('File', { visible: false, type: FormFieldType.number, sortable: true })\n  size: number;\n\n  @Editable('File', { visible: false, type: FormFieldType.autocomplete, filterable: true })\n  @Searchable('File')\n  mimeType: string;\n\n  @Editable('File', { type: FormFieldType.toggle, columnDefinition: { width: 80 } })\n  hideMobile: boolean;\n\n  @Editable('File', {\n    required: true,\n    name: 'group',\n    columnDefinition: { name: 'group', forceName: true },\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false\n  })\n  group: any;\n\n  @Editable('File', {\n    type: FormFieldType.autocomplete,\n    tag: true,\n    allowCustomTag: true,\n    collectionName: 'files',\n    multiple: true,\n    icon: 'yo-flag',\n    subQuery: { field: 'fileRef', values: '_id' }\n  })\n  @Searchable('File')\n  tags?: Array<string>;\n\n  @Editable('File', {\n    required: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    collectionName: 'tenants',\n    columnDefinition: { name: 'name' },\n    multiple: false,\n    filterable: true,\n    condition: [ROLES_CONDITIONS.isAdmin]\n  })\n  _tenant: Tenant;\n  _tenantRef?: string;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { getGroupsTransform } from '../condition/condition.interface';\n\nimport { FormFieldType, IFolder, IFileOrFolder } from '@shared/stencil';\n\n@Model({\n  className: 'Folder',\n  collectionName: 'folders',\n  fields: ['*'],\n  include: ['container'],\n  icon: 'yo-folder'\n})\nexport class Folder extends IFolder {\n  @Editable('Folder', { title: 'TITLE', required: true, type: FormFieldType.text })\n  @Searchable('Folder')\n  name: string;\n\n  @Editable('Folder', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false,\n    required: true\n  })\n  group: string;\n}\n\n@Model({\n  className: 'FileOrFolder',\n  collectionName: 'filesFolders',\n  fields: ['*'],\n  include: ['container']\n})\nexport class FileOrFolder extends IFileOrFolder {\n  @Searchable('FileOrFolder') name?: string;\n  @Searchable('FileOrFolder') _filename?: string;\n\n  @Searchable('FileOrFolder') mimeType?: string;\n}\n","import { toDate, utc, dateAdd, startOf } from '@shared/stencil';\n\nexport function getStartAndEndDates(timescale, endDate?: Date | string, amount?: number, notsliding?: boolean) {\n  let lastDate = endDate ? toDate(endDate) : new Date();\n  amount = amount || 7;\n  let period = 'days';\n  let startof = 'day';\n  switch (timescale) {\n    case 'last30days':\n      amount = 30;\n      period = 'days';\n      break;\n    case 'last90days':\n      amount = 90;\n      period = 'days';\n      break;\n    case 'last365days':\n      amount = 365;\n      period = 'days';\n      break;\n    case 'lastweek':\n      amount = 0;\n      period = 'weeks';\n      break;\n    case 'lastmonth':\n      amount = 0;\n      period = 'months';\n      startof = 'month';\n      break;\n    case 'lastquarter':\n      amount = 2;\n      period = 'months';\n      startof = 'month';\n      break;\n    case 'lastyear':\n      amount = 0;\n      period = 'years';\n      startof = 'year';\n      break;\n    case 'last7days':\n      amount = 7;\n      period = 'days';\n      startof = 'day';\n      break;\n\n    default:\n      if (notsliding) {\n        amount = amount ? amount - 1 : 0;\n        period = timescale;\n        startof = timescale;\n      } else {\n        amount = amount || 1;\n        period = timescale;\n        startof = 'day';\n      }\n\n      break;\n  }\n  //use .utc() to get the startOf with no offset issues\n  return [startOf(dateAdd(utc(lastDate), period, -amount), startof).toISOString(), lastDate.toISOString()];\n}\n","import { Editable } from '../../decorators/editable/editable.decorator';\nimport { dateAdd, FormFieldType, IKpi, Filters, IDatesRange } from '@shared/stencil';\nimport { getStartAndEndDates as getStartAndEndDatesCore } from '../dates/dates.interface';\nimport { MissionDescription } from '../mission-description/mission-description.interface';\nimport { ChartDefinition } from '../chart-definition/chart-definition.interface';\nimport { Model } from '../../decorators/model/model.decorator';\n\nimport { Colors } from '@shared/common';\nimport { Translate } from '@shared/translate';\n\nimport { merge, isNaN, cloneDeep } from 'lodash-es';\n\n@Model({\n  className: 'BaseKpi'\n})\nexport class BaseKpi extends IKpi {\n  @Editable('BaseKpi', { tabIndex: 2, tab: 'ADVANCED', type: FormFieldType.number, advanced: true })\n  pointPadding: boolean;\n\n  @Editable('BaseKpi', {\n    tabIndex: 2,\n    tab: 'ADVANCED',\n    type: FormFieldType.number,\n    advanced: true,\n    min: 1\n  })\n  numberPrecision: number;\n\n  dates: IDatesRange;\n\n  @Editable('BaseKpi', {\n    tabIndex: 2,\n    tab: 'ADVANCED',\n    type: FormFieldType.autocomplete,\n    translate: true,\n    values: ['sum', 'avg', 'min', 'max']\n  })\n  accumulator: string;\n\n  public static getChartDefinition(kpi: any, cd: ChartDefinition, translate: Translate) {\n    merge(cd, {\n      description: kpi.description,\n      title: kpi.title,\n      showAs: kpi.showAs || cd.showAs || 'chart',\n      showValues: kpi.showValues,\n      showLegend: kpi.showLegend === false ? false : true,\n      legendValue: kpi.accumulator\n    });\n\n    if (kpi && kpi.groupBySlider) {\n      switch (kpi.groupBySlider.toString()) {\n        case 'day':\n          cd.dateGrouping = 'hour';\n          kpi.dates = {\n            mode: 'dynamic',\n            amount: 1,\n            timescale: 'day'\n          };\n          break;\n\n        case 'week':\n          cd.dateGrouping = 'day';\n          kpi.dates = {\n            mode: 'dynamic',\n            amount: 1,\n            timescale: 'week'\n          };\n          break;\n\n        case 'month':\n          cd.dateGrouping = 'week';\n          kpi.dates = {\n            mode: 'dynamic',\n            amount: 4,\n            timescale: 'week'\n          };\n          //cd.type = kpi.chartType || 'column';\n          break;\n\n        case '3months':\n          cd.dateGrouping = 'week';\n          kpi.dates = {\n            mode: 'dynamic',\n            amount: 3,\n            timescale: 'month'\n          };\n          //cd.type = kpi.chartType || 'column';\n          break;\n\n        case '6months':\n          cd.dateGrouping = 'month';\n          kpi.dates = {\n            mode: 'dynamic',\n            amount: 6,\n            timescale: 'month'\n          };\n          //cd.type = kpi.chartType || 'column';\n          break;\n\n        case 'year':\n          cd.dateGrouping = 'month';\n          kpi.dates = {\n            mode: 'dynamic',\n            amount: 1,\n            timescale: 'year'\n          };\n          //cd.type = kpi.chartType || 'column';\n          break;\n      }\n    }\n  }\n\n  public static getDateFormat(groupBy) {\n    let format = '%Y-%m-%d';\n    if (groupBy && groupBy.toString) {\n      switch (groupBy.toString()) {\n        case 'day':\n          format = '%Y-%m-%d %H:00';\n          break;\n\n        case 'week':\n          format = '%Y-%m-%d';\n          break;\n\n        case 'month':\n          format = '%G-%V';\n          break;\n\n        case '3months':\n          format = '%G-%V';\n          break;\n\n        case '6months':\n          format = '%Y-%m';\n          break;\n\n        case 'year':\n        case '2':\n          format = '%Y-%m';\n          break;\n      }\n    }\n    return format;\n  }\n\n  public static getDates(kpi: BaseKpi, showPreviousYear?: boolean): { startDate?: string; endDate?: string } {\n    let retVal: any = {};\n    if (kpi.dates) {\n      if (kpi.dates.mode === 'calendar') {\n        if (kpi.dates.startDate) {\n          retVal.startDate = kpi.dates.startDate;\n        }\n        if (kpi.dates.endDate) {\n          retVal.endDate = kpi.dates.endDate;\n        }\n      }\n      if (kpi.dates.mode === 'dynamic') {\n        let dates = this.getStartAndEndDates(kpi.dates.timescale, null, kpi.dates.amount, kpi.dates.notsliding);\n        retVal.startDate = dates[0];\n        retVal.endDate = dates[1];\n      }\n    }\n    if (showPreviousYear) {\n      if (retVal.startDate) {\n        retVal.startDate = dateAdd(retVal.startDate, 'years', -1).toISOString();\n      }\n      if (retVal.endDate) {\n        retVal.endDate = dateAdd(retVal.endDate, 'years', -1).toISOString();\n      }\n    }\n\n    return retVal;\n  }\n\n  public static getStartAndEndDates(timescale, endDate?: Date | string, amount?: number, notsliding?: boolean) {\n    return getStartAndEndDatesCore(timescale, endDate, amount, notsliding);\n  }\n\n  public static fixDates(cd: ChartDefinition, date: string) {\n    let retVal;\n    if (!date) {\n      return new Date().getTime();\n    }\n    if (cd.dateGrouping === 'week' || (cd.kpiFormValues && cd.kpiFormValues.groupBySlider === 'week' && cd.kpiFormValues.category !== 'healthscore')) {\n      let y = <any>date.split('-')[0];\n      let w = <any>date.split('-')[1];\n      // // MongoDB week begins on Sundays and days preceding the first Sudnay of the year are in Week 0;\n      // // So,  weekStartDay = days in Week 0 + first day of the week number\n      // let yearStartDay = new Date(y, 0, 0).getDay();\n      // let daysInWeek0 = yearStartDay === 0 ? 0 : 7 - yearStartDay;\n      // let d = w === '00' ? 0 : daysInWeek0 + (w - 1) * 7;\n      // let weekStart = new Date(y, 0, d);\n\n      // retVal = weekStart.getTime();\n      // //retVal = moment('2011-01-01').year(y).isoWeek(w).toDate().getTime(); //.startOf('day')\n\n      let simple = new Date(y, 0, 1 + (w - 1) * 7);\n      let dow = simple.getDay();\n      let isoWeekStart = simple;\n      if (dow <= 4) {\n        isoWeekStart.setDate(simple.getDate() - simple.getDay() + 1);\n      } else {\n        isoWeekStart.setDate(simple.getDate() + 8 - simple.getDay());\n      }\n      return isoWeekStart.getTime();\n    } else {\n      retVal = new Date(date).getTime();\n    }\n    return retVal;\n  }\n\n  public static getColor(value) {\n    let color = Colors.black;\n    if (!isNaN(value)) {\n      if (value < 33) {\n        color = Colors.danger;\n      } else if (value < 75) {\n        color = Colors.warning;\n      } else if (value >= 75) {\n        color = Colors.success;\n      }\n    }\n    return color;\n  }\n\n  public static setDateFilters(filters: Filters, dates: { startDate?: string; endDate?: string }, field = 'finishedDate', allowNotExits = true) {\n    if (dates.startDate || dates.endDate) {\n      let filter: any;\n      if (allowNotExits) {\n        filters.push(cloneDeep(filters[0]));\n        filter = <any>{ operator: { _id: 'exists' }, value: false };\n        filter.field = field;\n        filters[1].push(filter);\n      }\n      if (dates.startDate) {\n        filter = <any>{ operator: { _id: 'gte' }, value: dates.startDate };\n        filter.field = field;\n        filters[0].push(filter);\n      }\n      if (dates.endDate) {\n        filter = <any>{ operator: { _id: 'lt' }, value: dates.endDate };\n        filter.field = field;\n        filters[0].push(filter);\n      }\n    }\n  }\n\n  public static setLocationTagsFilters(filters: Filters, locationTags: Array<string>) {\n    if (locationTags && locationTags.length) {\n      filters[0].push({\n        field: 'tags',\n        collectionName: 'locations',\n        operator: { _id: 'inq' },\n        value: locationTags,\n        type: FormFieldType.autocomplete,\n        subQuery: { field: 'locationRef', values: '_id' }\n      });\n    }\n  }\n\n  public static setUserTagsFilters(filters: Filters, userTags: Array<string>) {\n    if (userTags && userTags.length) {\n      filters[0].push({\n        field: 'tags',\n        collectionName: 'user',\n        operator: { _id: 'inq' },\n        value: userTags,\n        type: FormFieldType.autocomplete,\n        subQuery: { field: 'ownerRef', values: '_id', leftJoin: true }\n      });\n    }\n  }\n\n  public static setCampaignFilters(campaigns: Array<MissionDescription>, campaignTags: Array<string>, filters: Filters, missionType: string) {\n    if (campaigns && campaigns.length > 0) {\n      filters[0].unshift({\n        field: 'descriptionRef',\n        operator: { _id: 'inq' },\n        value: campaigns.map(c => c._id)\n      });\n    } else if (campaignTags && campaignTags.length > 0) {\n      filters[0].push({\n        field: 'tags',\n        collectionName: 'missiondescriptions',\n        operator: { _id: 'inq' },\n        value: campaignTags,\n        type: FormFieldType.autocomplete,\n        subQuery: { field: 'descriptionRef', values: '_id' }\n      });\n    }\n    if (missionType) {\n      filters[0].push({ field: 'type', operator: { _id: 'inq' }, value: [missionType] });\n    }\n  }\n\n  public static getDateFormatMoment(groupBy) {\n    let format = '';\n    if (groupBy && groupBy.toString) {\n      switch (groupBy.toString()) {\n        case 'week':\n          format = 'YYYY-WW';\n          break;\n\n        case 'month':\n          format = 'YYYY-MM';\n          break;\n\n        case 'quarter':\n        case 'year':\n          format = 'YYYY';\n          break;\n      }\n    }\n    return format;\n  }\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { IIMapping, FormFieldType } from '@shared/stencil';\n// import { ADMIN_FILES_TYPE, FORMCREATOR_FILES_TYPE } from '../constants/constants.interface';\n\n// let conditions = {\n//   isAdmin: 'context == \"admin\"',\n//   isFormCreator: 'context == \"formCreator\"',\n//   isNotTranslation: 'context!=\"translation\"'\n// };\n\n@Model({ className: 'IMapping' })\nexport class IMapping extends IIMapping {\n  // @Editable('IMapping', {\n  //   required: true,\n  //   autoselect: true,\n  //   type: FormFieldType.autocomplete,\n  //   conditionalValues: [{ condition: conditions.isAdmin, ADMIN_FILES_TYPE }, { condition: conditions.isFormCreator, values: FORMCREATOR_FILES_TYPE }],\n  //   condition: conditions.isNotTranslation,\n  //   defaultValues: ADMIN_FILES_TYPE,\n  //   translate: true\n  // })\n  type: string;\n\n  @Editable('IMapping', {\n    required: true,\n    type: FormFieldType.documentuploader,\n    filterable: false,\n    title: 'DOCUMENT',\n    extensions: ['csv', 'application', 'xls', 'xlsx']\n  }) //'xls', 'xlsx', //'xls', 'xlsx', , 'application'\n  document: any;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { IOperation, FormFieldType } from '@shared/stencil';\n\n@Model({\n  className: 'Operation',\n  collectionName: 'operation',\n  fields: ['*'],\n  include: []\n})\nexport class Operation extends IOperation {\n  @Searchable('Operation') operationId: string;\n  @Searchable('Operation') operationName: string;\n  @Searchable('Operation') methodName: string;\n  @Searchable('Operation') modelName: string;\n\n  @Editable('Operation', { type: FormFieldType.datetime, readonly: true })\n  @Searchable('Operation')\n  _createdAt: Date;\n\n  @Editable('Operation', { type: FormFieldType.number, readonly: true })\n  @Searchable('Operation')\n  count: number;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { IProduct, FormFieldType } from '@shared/stencil';\nimport { FORM_FILES_IMAGE_FILTER } from '../constants/constants.interface';\n\n@Model({\n  className: 'Product',\n  collectionName: 'products',\n  fields: ['*'],\n  include: ['catalog'],\n  icon: 'yo-product'\n})\nexport class Product extends IProduct {\n  @Editable('Product', {\n    type: FormFieldType.text,\n    visible: false,\n    forceExport: true,\n    exportOrder: 1\n  })\n  _id: string;\n\n  @Editable('Product', {\n    type: FormFieldType.autocomplete,\n    collectionName: 'catalogs',\n    forceExport: true,\n    exportOrder: 2,\n    required: true,\n    columnDefinition: { name: 'title' },\n    filterable: true\n  })\n  catalog: any;\n  catalogRef: string;\n\n  @Editable('Product', { required: true, type: FormFieldType.text, exportOrder: 3, filterable: true, sortable: true })\n  @Searchable('Product')\n  title: string;\n\n  @Editable('Product', { type: FormFieldType.text, exportOrder: 4, filterable: true, sortable: true })\n  @Searchable('Product')\n  reference: string;\n\n  @Editable('Product', { flex: 50, type: FormFieldType.text, exportOrder: 10, filterable: true, sortable: true })\n  color: string;\n\n  @Editable('Product', { required: false, flex: 50, type: FormFieldType.number, exportOrder: 9 })\n  price: number;\n\n  @Editable('Product', { flex: 50, type: FormFieldType.number, min: 0, exportOrder: 8 })\n  step: number;\n\n  @Editable('Product', {\n    type: FormFieldType.checkbox,\n    flex: 50,\n    columnDefinition: { width: 40 },\n    exportOrder: 11,\n    filterable: true\n  })\n  outofstock: boolean;\n\n  @Editable('Product', {\n    type: FormFieldType.autocomplete,\n    isImage: true,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    maxWidth: 600,\n    maxHeight: 300,\n    crop: 'square',\n    collectionName: 'files',\n    title: 'PHOTO',\n    //required: true,\n    columnDefinition: { name: '_downloadURL' },\n    filterable: false,\n    exportOrder: 7\n  })\n  image: any;\n\n  @Editable('Product', { type: FormFieldType.textarea, exportOrder: 5 })\n  description: string;\n\n  @Editable('Product', { type: FormFieldType.textarea, exportOrder: 6 })\n  shortdescription: string;\n\n  @Editable('Product', {\n    type: FormFieldType.autocomplete,\n    tag: true,\n    allowCustomTag: true,\n    collectionName: 'products',\n    multiple: true,\n    icon: 'yo-flag',\n    subQuery: { field: 'fileRef', values: '_id' },\n    exportOrder: 12,\n    filterable: true\n  })\n  @Searchable('Product')\n  tags?: Array<string>;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Tenant } from '../tenant/tenant.interface';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, IPublicApiToken } from '@shared/stencil';\nimport { User } from '../user/user.interface';\n\n@Model({\n  className: 'PublicApiToken',\n  collectionName: 'publicAPITokens',\n  fields: ['*'],\n  include: ['user'],\n  icon: 'yo-badge'\n})\nexport class PublicApiToken extends IPublicApiToken {\n  @Editable('PublicApiToken', { type: FormFieldType.textarea, readonly: true, name: 'accessToken.id' })\n  accessToken: { id: string };\n\n  user: User;\n  userRef: string;\n  _tenant: Tenant;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { ROLES_CONDITIONS } from '../condition/condition.interface';\n\nimport { ISlide, IFormField, FormFieldType, ICondition } from '@shared/stencil';\n\n@Model({ className: 'Slide' })\nexport class Slide extends ISlide {\n  @Editable('Slide', { required: true, type: FormFieldType.text })\n  title: string;\n\n  @Editable('Slide', { type: FormFieldType.textarea })\n  description?: string;\n\n  @Editable('Slide', { type: FormFieldType.checkbox, flex: 100, advanced: true })\n  hideheader?: boolean;\n\n  @Editable('Slide', {\n    type: FormFieldType.checkbox,\n    flex: 100,\n    condition: [ROLES_CONDITIONS.hasService],\n    advanced: true\n  })\n  service?: boolean;\n\n  @Editable('Slide', {\n    type: FormFieldType.autocomplete,\n    multiple: true,\n    clearable: true,\n    advanced: true\n  })\n  condition?: Array<ICondition | string | any> | string | ICondition;\n\n  items: Array<IFormField>;\n}\n","import { Editable } from '../../decorators/editable/editable.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { FormFieldType, ITableau } from '@shared/stencil';\nimport { Model } from '../../decorators/model/model.decorator';\nimport { Tenant } from '../tenant/tenant.interface';\nimport { ROLES_CONDITIONS } from '../condition/condition.interface';\n\n@Model({\n  className: 'Tableau',\n  collectionName: 'tableau',\n  fields: ['*'],\n  include: ['_tenant'],\n  icon: 'yo-tableau'\n})\nexport class Tableau extends ITableau {\n  @Editable('Tableau', { type: FormFieldType.text, required: true, title: 'DASHBOARDID' })\n  @Searchable('Tableau')\n  path: string;\n\n  @Editable('Tableau', {\n    required: true,\n    title: 'TENANT',\n    type: FormFieldType.autocomplete,\n    collectionName: 'tenants',\n    columnDefinition: { name: 'name' },\n    multiple: false,\n    condition: [ROLES_CONDITIONS.isAdmin]\n  })\n  _tenant: Tenant;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { FormFieldType, ITagGroup } from '@shared/stencil';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { getGroupsTransform } from '../condition/condition.interface';\n\n@Model({\n  className: 'TagGroup',\n  collectionName: 'tagGroups',\n  fields: ['*'],\n  include: []\n})\nexport class TagGroup extends ITagGroup {\n  @Editable('TagGroup', { required: true, type: FormFieldType.text })\n  @Searchable('TagGroup')\n  title: string;\n\n  @Editable('TagGroup', {\n    title: 'LOCATIONTAGS',\n    required: true,\n    type: FormFieldType.autocomplete,\n    tag: true,\n    collectionName: 'locations',\n    multiple: true,\n    subQuery: { field: 'locationRef', values: '_id' },\n    fixedPosition: true\n  })\n  tags: Array<string>;\n\n  @Editable('TagGroup', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false,\n    required: true,\n    fixedPosition: true\n  })\n  group: string | Array<string>;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\n\nimport { ITag } from '@shared/stencil';\n\n@Model({\n  className: 'Tag',\n  collectionName: 'tags',\n  fields: ['*'],\n  include: []\n})\nexport class Tag extends ITag {\n  @Searchable('Tag') tag: string;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { IFormField, FormFieldType, ITodo, ITodoTask, ITodoTaskSimple } from '@shared/stencil';\nimport { User } from '../user/user.interface';\n\nexport function onUserMeActionHandler() {\n  this.selectMatch(this.session.user);\n}\n\n@Model({ className: 'Todo' })\nexport class Todo extends ITodo {\n  @Editable('Todo', { type: FormFieldType.text, name: 'title', required: true })\n  title: string;\n\n  @Editable('Todo', {\n    title: 'ASSIGNTO',\n    name: 'user',\n    type: FormFieldType.autocomplete,\n    collectionName: 'user',\n    queryFields: User.getSimpleFields(),\n    multiple: false,\n    required: true,\n    extraButton: { title: 'ASSIGNTO', buttons: [{ text: 'ME', handler: onUserMeActionHandler }] }\n  })\n  user: any;\n\n  @Editable('Todo', {\n    title: 'DUEDATE',\n    type: FormFieldType.datetime,\n    required: false,\n    clearable: true,\n    minDate: new Date(),\n    secondary: true,\n    icon: 'yo-calendar'\n  })\n  duedate: Date;\n\n  @Editable('Todo', {\n    title: 'NOTIFICATIONEMAILS',\n    type: FormFieldType.emailreport,\n    showUsers: true,\n    secondary: true,\n    icon: 'yo-email'\n  })\n  notificationemail?: Array<string>;\n\n  @Editable('Todo', {\n    title: 'REMINDER',\n    type: FormFieldType.datetime,\n    required: false,\n    clearable: true,\n    secondary: true,\n    icon: 'yo-activity'\n  })\n  reminderdate?: Date;\n\n  @Editable('Todo', { type: FormFieldType.starrating, secondary: true, icon: 'yo-priority' })\n  priority?: number;\n\n  field?: IFormField;\n}\n\n@Model({ className: 'TodoTask' })\nexport class TodoTask extends ITodoTask {\n  @Editable('TodoTask', { type: FormFieldType.text, title: 'TITLE', required: true })\n  text: { value: string };\n\n  @Editable('TodoTask', { type: FormFieldType.textarea, required: false })\n  comments?: { value: string };\n\n  @Editable('TodoTask', {\n    type: FormFieldType.datetime,\n    required: false,\n    clearable: true,\n    minDate: new Date()\n  })\n  duedate?: { value: Date };\n\n  @Editable('TodoTask', { type: FormFieldType.toggle, required: false, title: 'PHOTO', flex: 50 })\n  hasphoto?: { value: boolean };\n\n  @Editable('TodoTask', {\n    type: FormFieldType.toggle,\n    required: false,\n    title: 'MANDATORYPHOTO',\n    flex: 50,\n    condition: 'hasphoto.value==1'\n  })\n  isphotorequired?: { value: boolean };\n\n  @Editable('TodoTask', {\n    type: FormFieldType.toggle,\n    required: false,\n    title: 'ALLOWLIBRARY',\n    flex: 50,\n    condition: 'hasphoto.value==1'\n  })\n  allowLibrary?: { value: boolean };\n\n  field?: IFormField;\n}\n\n@Model({ className: 'TodoTaskSimple' })\nexport class TodoTaskSimple extends ITodoTaskSimple {\n  @Editable('TodoTaskSimple', {\n    type: FormFieldType.textarea,\n    title: 'DESCRIPTION',\n    required: true\n  })\n  text: { value: string };\n\n  @Editable('TodoTaskSimple', {\n    title: 'ASSIGNTO',\n    name: 'user',\n    type: FormFieldType.autocomplete,\n    queryFields: User.getSimpleFields(),\n    collectionName: 'user',\n    multiple: false,\n    required: true,\n    extraButton: { title: 'ASSIGNTO', buttons: [{ text: 'ME', handler: onUserMeActionHandler }] }\n  })\n  user: any;\n\n  @Editable('TodoTaskSimple', {\n    type: FormFieldType.datetime,\n    required: false,\n    clearable: true,\n    minDate: new Date()\n  })\n  duedate?: { value: Date };\n\n  @Editable('TodoTaskSimple', {\n    type: FormFieldType.toggle,\n    required: false,\n    title: 'ASKFORPHOTO',\n    flex: 50\n  })\n  hasphoto?: { value: boolean };\n\n  @Editable('TodoTaskSimple', {\n    type: FormFieldType.toggle,\n    required: false,\n    title: 'MANDATORYPHOTO',\n    flex: 50,\n    condition: 'hasphoto.value==1'\n  })\n  isphotorequired?: { value: boolean };\n\n  @Editable('TodoTaskSimple', {\n    type: FormFieldType.toggle,\n    required: false,\n    title: 'ALLOWLIBRARY',\n    flex: 50,\n    condition: 'hasphoto.value==1'\n  })\n  allowLibrary?: { value: boolean };\n  field?: IFormField;\n}\n","import { Injector } from '@angular/core';\nimport { FormFieldType, ITranslation } from '@shared/stencil';\n\nimport { Model } from '../../decorators/model/model.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { Searchable } from '../../decorators/searchable/searchable.decorator';\nimport { getGroupsTransform } from '../condition/condition.interface';\n\nimport { Translate } from '@shared/translate';\nimport { Googletranslate } from '../../services/googletranslate/googletranslate.service';\nimport { Requestor } from '../../services/requestor/requestor.service';\n\nimport { capitalize } from 'lodash-es';\n\nexport function translateButtonHandler(data, field, injector: Injector) {\n  const rq: Requestor = injector.get<Requestor>(Requestor);\n  let language = data.language;\n  let value = data.value;\n  if (value && language) {\n    data[language] = value;\n    return Googletranslate.getAll(value, language, rq)\n      .toPromise()\n      .then((values: Array<{ language: string; value: string }>) => {\n        let isCapitalized = capitalize(value) === value;\n        values.forEach(v => {\n          data[v.language] = isCapitalized ? capitalize(v.value) : v.value;\n        });\n      });\n  }\n}\n\nexport function resetButtonHandler(data, field) {\n  Translate.availablesLanguage\n    .filter(l => l !== 'key')\n    .forEach(l => {\n      data[l] = null;\n    });\n  data = { ...data };\n}\n\n@Model({\n  className: 'Translation',\n  collectionName: 'translations',\n  fields: ['*'],\n  include: ['_tenant'],\n  icon: 'yo-translate'\n})\nexport class Translation extends ITranslation {\n  @Editable('Translation', { title: 'ID', visible: false, forceExport: true })\n  _id?: string;\n\n  @Editable('Translation', {\n    type: FormFieldType.autocomplete,\n    title: 'LANGUAGE',\n    translate: true,\n    values: Translate.availablesLanguage,\n    clearable: false,\n    required: true,\n    autoselect: true,\n    columnDefinition: { width: 40 }\n  })\n  language: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text })\n  @Searchable('Translation')\n  key: string;\n\n  @Editable('Translation', {\n    required: true,\n    type: FormFieldType.text\n  })\n  value: string;\n\n  @Editable('Translation', {\n    type: FormFieldType.button,\n    title: 'TRANSLATE',\n    color: 'success',\n    suppressExport: true,\n    handler: translateButtonHandler\n  })\n  translateButton?: any;\n\n  @Editable('Translation', {\n    type: FormFieldType.button,\n    title: 'RESET',\n    suppressExport: true,\n    color: 'danger',\n    handler: resetButtonHandler\n  })\n  resetButton?: any;\n\n  @Editable('Translation', { type: FormFieldType.toggle, title: 'UNVALIDATEREASON' })\n  isReject: boolean;\n\n  @Editable('Translation', { type: FormFieldType.toggle, title: 'ANNOTATE' })\n  isPhotoAnnotation: boolean;\n\n  @Editable('Translation', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false,\n    required: true\n  })\n  group: string | Array<string>;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) en: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) us: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) fr: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) es: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) pl: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) nl: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) de: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) it: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) ru: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) zhs: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) zht: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) pt: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) kr: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) ja: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) ua: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) he: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) ar: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) cz: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) th: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) tr: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) bg: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) el: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) sl: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) sk: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) ro: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) hu: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) et: string;\n\n  @Editable('Translation', { required: true, type: FormFieldType.text }) br: string;\n}\n","import { Model } from '../../decorators/model/model.decorator';\nimport { Editable } from '../../decorators/editable/editable.decorator';\nimport { FormFieldType, IWorkplaceGroups, IWorkplacePost } from '@shared/stencil';\n\n@Model({\n  className: 'WorkplaceGroups',\n  collectionName: 'workplace_groups',\n  fields: ['*'],\n  include: []\n})\nexport class WorkplaceGroups extends IWorkplaceGroups {\n  @Editable('WorkplaceGroups', { readonly: true, type: FormFieldType.text })\n  name: string;\n\n  @Editable('WorkplaceGroups', { readonly: true, type: FormFieldType.text })\n  icon: string;\n\n  @Editable('WorkplaceGroups', { readonly: true, type: FormFieldType.text })\n  cover: string;\n\n  @Editable('WorkplaceGroups', { readonly: true, type: FormFieldType.text })\n  description: string;\n}\n\n@Model({ className: 'WorkplacePost' })\nexport class WorkplacePost extends IWorkplacePost {\n  @Editable('WorkplacePost', { type: FormFieldType.textarea, required: true })\n  comments: string;\n\n  @Editable('WorkplacePost', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'workplace_groups',\n    multiple: true,\n    required: true\n  })\n  workplaceGroups: any;\n}\n","import { Injectable } from '@angular/core';\n\nimport { Entity } from '../../interfaces/entity/entity.interface';\nimport { Broker } from '../broker/broker.service';\nimport { Requestor } from '../requestor/requestor.service';\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\n\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Activity {\n  constructor(protected broker: Broker, protected rq: Requestor) {}\n\n  protected _viewOrLike(entity: Entity, entityName: string, action: string): Observable<any> {\n    let url = this.broker.getApiUrl() + 'activity/' + action;\n    return this.rq.post(url, { entityRef: entity._id, entityName });\n  }\n\n  getActionFilter(entityId: string, action: string = 'view') {\n    return [[{ field: 'action', operator: { _id: 'eq' }, value: action }, { field: 'entityRef', operator: { _id: 'inq' }, value: [entityId] }]];\n  }\n\n  getUserTransform() {\n    return (res: ResponseObject) => {\n      if (res.data) {\n        res.data = res.data.map(r => r.user);\n      }\n      return res;\n    };\n  }\n\n  getActionAggregateOptions() {\n    return (start, limit) => [{ $lookup: { from: 'user', localField: 'userRef', foreignField: '_id', as: 'user' } }, { $unwind: '$user' }, ...(start > 0 ? [{ $skip: start }] : []), ...(limit > 0 ? [{ $limit: limit }] : [])];\n  }\n}\n","import { Translate } from '@shared/translate';\nimport { Broker } from '../broker/broker.service';\nimport { Models } from '../models/models.service';\n\nimport { ResponseObject } from '../../interfaces/response-object/response-object.interface';\nimport { Entity } from '../../interfaces/entity/entity.interface';\nimport { FilterPipe } from '../../pipes/filter/filter.pipe';\nimport { Query } from '@shared/stencil';\n\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, switchMap, mergeMap } from 'rxjs/operators';\n\nimport { orderBy, isArray, isObject, keys, isEqual, isFunction, isEmpty, isNumber } from 'lodash-es';\n\nexport class DataLoader {\n  public get pageSize() {\n    return this._pageSize;\n  }\n\n  public set pageSize(val) {\n    this._pageSize = val;\n  }\n\n  public get currentPage() {\n    return this._currentPage;\n  }\n\n  public get total() {\n    return this._total;\n  }\n\n  public set total(value) {\n    this._total = value;\n  }\n\n  public get totalPage() {\n    return Math.ceil(this._total / this.pageSize);\n  }\n\n  public get loading() {\n    return this._loading;\n  }\n\n  public get loadingPageCount() {\n    return this._loadingPageCount;\n  }\n\n  public set loadingPageCount(value) {\n    this._loadingPageCount = value;\n  }\n\n  private _currentPage = 0;\n  private _total = 0;\n  private _collectionName = '';\n  private _loading = false;\n  private _pageSize: number; //CoreConfig.isWeb() ? 30 :\n  private _items: Array<any>;\n  private _translate: boolean;\n  private filterPipe: FilterPipe;\n  private _looseCount: boolean;\n  private _loadingPageCount: boolean;\n\n  constructor(private broker: Broker, collectionName: string, items: Array<any> = null, pageSize: number = null, translate: boolean = null, translateService: Translate = null, looseCount: boolean = null) {\n    this._collectionName = Models.fixCollectionName(collectionName);\n    this._items = items;\n    this._translate = translate;\n    this._looseCount = looseCount;\n    if (pageSize && isNumber(pageSize) && pageSize > 0) {\n      this._pageSize = pageSize;\n    } else {\n      this._pageSize = 21;\n    }\n    this.filterPipe = new FilterPipe(translateService);\n  }\n\n  loadWithSearch(currentPage: number = 0, search: string = null, filters = [], sortModel = null, mapTransform = null, mapTransformAsync = false, tag = false, subQuery = null, fields: string[] = null, include: string[] = null, aggregateOptions: (skip, limit, sorts, search, filters) => Array<any> = null, aggregateOptionsOffline: (skip, limit, sorts, search, filters) => Array<any> = null, cacheId: string = null, customFilter: any = null, includeCount = false) {\n    return this.load(currentPage, search, filters, sortModel, mapTransform, mapTransformAsync, tag, subQuery, fields, include, aggregateOptions, aggregateOptionsOffline, cacheId, customFilter, includeCount);\n  }\n\n  loadWithSearchDebounce(start = 0, search: Observable<string> = null, filters = [], sortModel = null, mapTransform = null, mapTransformAsync = false, tag = false, subQuery = null, fields: string[] = null, include: string[] = null, aggregateOptions: (skip, limit, sorts, search, filters) => Array<any> = null, aggregateOptionsOffline: (skip, limit, sorts, search, filters) => Array<any> = null, cacheId: string = null, customFilter: any = null, includeCount = false) {\n    if (search) {\n      return search.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(term => this.load(start, term.toString(), filters, sortModel, mapTransform, mapTransformAsync, tag, subQuery, fields, include, aggregateOptions, aggregateOptionsOffline, cacheId, customFilter, includeCount))\n      );\n    } else {\n      return this.load(start, null, filters, sortModel, mapTransform, mapTransformAsync, tag, subQuery, fields, include, aggregateOptions, aggregateOptionsOffline, cacheId, customFilter, includeCount);\n    }\n  }\n\n  load(currentPage: number = 0, search: string = null, filters = [], sortModel = null, mapTransform = null, mapTransformAsync = false, tag = false, subQuery = null, fields: string[] = null, include: string[] = null, aggregateOptions: (skip, limit, sorts, search, filters) => Array<any> = null, aggregateOptionsOffline: (skip, limit, sorts, search, filters) => Array<any> = null, cacheId: string = null, customFilter: any = null, includeCount = false) {\n    this._loading = true;\n    if (search) {\n      search = search.trim();\n    }\n    if ((this._items && this._items.length > 0) || !this._collectionName || isEmpty(this._collectionName)) {\n      let obs = new Observable(observer => {\n        let data = this._items || [];\n        if (search) {\n          data = this.filterPipe.transform(data, search, null, null, this._translate);\n        }\n        if (sortModel) {\n          data = orderBy(data, sortModel.map(s => s.colId), sortModel.map(s => s.sort.toLowerCase()));\n        }\n        this._total = data.length;\n        this._currentPage = currentPage;\n\n        if (data.slice) {\n          data = data.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize);\n        }\n\n        let res: ResponseObject = {\n          count: this._total,\n          data: data.map ? data.map(value => this.convertItem(value)) : []\n        };\n        observer.next(res);\n        observer.complete();\n      });\n      if (mapTransformAsync && mapTransform) {\n        return obs.pipe(mergeMap(res => mapTransform(res, search, filters, currentPage, this.pageSize)));\n      } else if (mapTransform) {\n        return obs.pipe(map(res => mapTransform(res, search, filters, currentPage, this.pageSize)));\n      } else {\n        return obs;\n      }\n    } else if (aggregateOptions && isFunction(aggregateOptions)) {\n      if (!mapTransform) {\n        mapTransform = x => x;\n      }\n      return this.broker\n        .aggregateQuery(this._collectionName, filters, aggregateOptions(currentPage * this.pageSize, this.pageSize, sortModel, search, filters), search, null, includeCount, cacheId, customFilter, subQuery, aggregateOptionsOffline && isFunction(aggregateOptionsOffline) ? aggregateOptionsOffline(currentPage * this.pageSize, this.pageSize, sortModel, search, filters) : null)\n        .pipe(mapTransformAsync ? mergeMap(res => mapTransform(res, search, filters, currentPage, this.pageSize)) : map(res => mapTransform(res, search, filters, currentPage, this.pageSize)))\n        .pipe(\n          map(retVal => {\n            this._currentPage = currentPage;\n            if (includeCount) {\n              this._total = retVal.count;\n            } else if (isObject(retVal) && isArray(retVal.data)) {\n              //nothing to do. used in photo duplicate\n            } else {\n              retVal = { data: retVal };\n            }\n            this._loading = false;\n            return retVal;\n          })\n        );\n    } else {\n      let retVal = this.broker.getAll(this._collectionName, fields, include, search, filters, sortModel, currentPage * this.pageSize, this.pageSize, tag, subQuery, customFilter, cacheId, this._looseCount, !includeCount).pipe(\n        map((res: any) => {\n          this._currentPage = currentPage;\n          this._loading = false;\n          if (!includeCount) {\n            this._total = Math.max(-1, this._total);\n            return { count: this._total, data: res };\n          } else {\n            this._total = res.count;\n            return res;\n          }\n        })\n      );\n      if (mapTransformAsync && mapTransform) {\n        return retVal.pipe(mergeMap(res => mapTransform(res, search, filters, currentPage, this.pageSize)));\n      } else if (mapTransform) {\n        return retVal.pipe(map(res => mapTransform(res, search, filters, currentPage, this.pageSize)));\n      } else {\n        return retVal;\n      }\n    }\n  }\n\n  getQuery(currentPage: number = 0, search: string, filters = [], sortModel = null, subQuery = null, fields: string[] = null, include: string[] = null, customFilter: any = null, includeCount = false): Query {\n    return this.broker.getQuery(this._collectionName, fields, include, search, filters, sortModel, currentPage * this.pageSize, this.pageSize, subQuery, customFilter);\n  }\n\n  getCount(search?: string, filters?, subQuery = null, customFilter = null) {\n    return this.broker.getCount(this._collectionName, search, filters, subQuery, customFilter).pipe(\n      map(ret => {\n        this._total = ret.count;\n        return ret;\n      })\n    );\n  }\n\n  convertItem(value) {\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n      return new Entity(value);\n    } else if (isEqual(keys(value), ['_id'])) {\n      return new Entity(value._id);\n    } else if (typeof value === 'undefined') {\n      return new Entity('undefined');\n    } else {\n      return value;\n    }\n  }\n}\n"],"names":["translate","Injectable","LocalStorage","CoreConfig","Translate","LocalForageService","tslib_1.__decorate","Persistent","Observable","isPresent","http","map","catchError","keys","HttpHeaders","HttpParams","of","HttpResponse","EventEmitter","HttpClient","throwError","from","getUUID","PromiseService","Log","cloneDeep","compact","union","uniq","isString","FormFieldType","findIndex","isBooleanField","isNumberField","isPhotoField","isMultiPhotosField","isPhotoOrMultiPhotosField","isVideoField","isDateTimeField","isIntervalField","isMultipleField","isColoredField","MOBILE_FORM_FIELDS_ALL","isEmpty","pull","isArray","isImageFile","get","assign","dateFormat","dateAdd","isObject","Position","GeoLocation","concatMap","combineLatest","uniqBy","Injector","Network","_isFile","_isBase64","_isFileUri","_isImageFile","_read","_getExtension","_changeExtension","_getMaxSize","_toPng","_isValid","_isImage","_isVideo","_isAudio","_isDocument","_getType","_getMimeType","_getIcon","_getVideoPoster","_b64toBlob","_blobToFile","_b64ToFile","_saveBase64AsImageFile","_resizeBase64Image","_getBase64MimeType","_getBase64Extension","_resizeImage","_getNativeDirectory","_resolveFilePath","_fixImageOrientation","_moveToImageDirectory","_moveToImageDirectoryBase","_fileNativeWriteFile","_fileNativeCheckFile","_fixAbsolutePath","_getCloudinaryUrl","_getLocalFilePath","_getLocalFileName","_saveToLocalFile","_getUrlWithAnnotations","_cleanFileName","_downloadFileToDevice","_showPdfOnDevice","_openBlob","_afterOpenBlob","mergeMap","forkJoin","set","concat","orderBy","flatten","cacheFile","lodashMap","isEqual","intersection","isNullOrUndefined","FileUploader","remove","forEach","FileTransfer","startOf","utc","toDate","tslib_1.__extends","ICondition","IConditionalField","ITenant","ILocationType","conditions","startCase","IRoles","IUser","IUserSettings","ISimpleUser","INotification","Subject","Subscription","pick","without","filter","merge","Colors","OneSignal","PushNative","JwtHelperService","some","_map","every","flatMap","fromNow","dateParse","ReplaySubject","isNumber","IMissionDescription","range","IScoring","sortBy","timer","take","downloadFile","IGroup","difference","map$","ROLES_LIST","XLSX.read","XLSX.utils","parse","find","getUTCOffset","isDate","XLSX.write","XLSX.SSF","_keys","isBlank","Pipe","DocumentViewer","Device","FileOpener","FileNative","HTTP_INTERCEPTORS","NgModule","CommonModule","TranslateModule","HttpClientModule","IAggregateLog","IAlgorithm","IAutorenewConfig","IBackup","ICatalog","IChartDefinition","IDashboard","IFile","IFolder","IFileOrFolder","getStartAndEndDates","getStartAndEndDatesCore","isNaN","IKpi","IIMapping","IOperation","IProduct","IPublicApiToken","ISlide","ITableau","ITagGroup","ITag","ITodo","ITodoTask","ITodoTaskSimple","capitalize","ITranslation","IWorkplaceGroups","IWorkplacePost","debounceTime","distinctUntilChanged","switchMap","isFunction"],"mappings":"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"}
