{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://data-form/lib/services/cell-renderer/cell-renderer.service.ts","ng://data-form/lib/services/conditions/conditions.service.ts","ng://data-form/lib/services/form-dynamic-builder/form-dynamic-builder.service.ts","ng://data-form/lib/services/mapping/mapping.service.ts","ng://data-form/lib/services/chart/chart.service.ts","ng://data-form/lib/interfaces/custom-model/custom-model.interface.ts","ng://data-form/lib/services/custom-models/custom-models.service.ts","ng://data-form/lib/data-form.module.ts","ng://data-form/lib/interfaces/custom-form-field/custom-form-field.interface.ts","ng://data-form/lib/interfaces/form-field/form-field.class.ts","ng://data-form/lib/interfaces/gridstate/gridstate.interface.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","CellRenderer","getColor","colors","find","isSameColor","color","name","getColumnDefinition","field","translate","visibleFields","sortModel","component","fieldName","Models","getFieldName","col","headerName","getFieldTitle","headerTooltip","minWidth","columnDefinition","width","hide","visible","hidden","sortable","forceExport","exportOrder","suppressExport","menuTabs","type","indexOf","colId","sort","toUpperCase","get","isBooleanField","cellRenderer","isVideoField","isPhotoField","isMultiPhotosField","isDistanceField","comparator","FormFieldType","number","date","isDateTimeField","time","address","location","starrating","cellRendererParams","max","todo","timer","checklist","autocomplete","collectionName","getModelByCollectionName","isCustom","rendererType","getColumnTypes","audio","barcode","between-date","between-number","button","catalog","checkbox","daterange","datetime-local","document","documentuploader","email","emailreport","filter","grid","image","information","inttel","invite","json","missionfield","missionscore","password","multiphotos","photo","productcheck","range","ranking","select","selectbuttons","selectbuttonsmulti","selectimage","selectmulti","signature","string","stripecard","tel","text","textarea","toggle","video","knob","selectchat","missingword","swipeselect","formula","videoplayer","getConfig","multiple","rowModelType","infiniteScrolling","pageSize","rowHeight","rowStyle","line-height","headerHeight","defaultColDef","resizable","rowDeselection","rowSelection","rowBuffer","maxConcurrentDatasourceRequests","infiniteInitialRowCount","cacheOverflowSize","pagination","paginationPageSize","cacheBlockSize","suppressPropertyNamesCheck","animateRows","localeText","getTranslation","columnTypes","getPivotConfig","suppressPreventDefaultOnMouseWheel","rememberGroupStateWhenNewData","suppressAggFuncInHeader","groupDefaultExpanded","groupSuppressGroupColumn","suppressRowHoverClass","autoGroupColumnDef","icons","menu","groupExpanded","groupContracted","columnGroupOpened","columnGroupClosed","columnSelectOpen","columnSelectClosed","checkboxChecked","checkboxUnchecked","checkboxIndeterminate","sortAscending","sortDescending","columnMoveGroup","dropNotAllowed","groupUseEntireRow","groupRowInnerRenderer","previous","page","of","more","to","loadingOoo","selectAll","searchOoo","blanks","filterOoo","applyFilter","equals","lessThan","greaterThan","contains","startsWith","endsWith","group","columns","rowGroupColumns","rowGroupColumnsEmptyMessage","valueColumns","pivotMode","groups","values","pivots","valueColumnsEmptyMessage","pivotColumnsEmptyMessage","noRowsToShow","pinColumn","valueAggregation","autosizeThiscolumn","autosizeAllColumns","groupBy","ungroupBy","resetColumns","expandAll","collapseAll","toolPanel","pinLeft","pinRight","noPin","sum","min","none","count","average","avg","copy","ctrlC","paste","ctrlV","createColumnDefs","campaignFields","customColumnDefs","includeDistance","itemButtons","colMinWidth","hiddenColumns","columnDefs","cloneDeep","formFields","model","forEach","concat","colEdit","isCheck","check","isPresence","presence","isInventory","inventory","isImageRecognition","replace","maxPhotos","colPhoto","distanceField","title","distanceCol","unshift","params","node","id","cellClass","suppressFilter","pinned","context","icon","onCellClicked","handler","data","toJS","Colors","black","class","index","textValue","light","warning","stable","success","danger","Injectable","Conditions","generateConditionId","getUUID","convertOperator","op","retVal","toLowerCase","convertType","convertField","f","res","isValid","isTitleValid","isOpValid","operator","CONDITION_ALL_OPERATORS","isTypeValid","CONDITION_TYPES","isFieldValid","isTagsValid","tags","isArray","isGroupValid","isValueValid","SIMPLE_FIELD_TYPES","areValuesValid","WITH_VALUES_FIELD_TYPES","areEqual","c1","c2","_id","isEqual","omit","FormDynamicBuilder","generateFieldName","answerIsValid","answer","hasScoring","missiondescription","scoring","calculateScoring","mission","_this","description","extraScores","scoreValue","initialValue","scorePercentageBasis","percentageBasis","v","isNumber","encodeScoringValue","numValue","isBoolean","novalue","isPresent","isPercentage","Math","round","score","isActive","minValue","validated","calculateScoringQuizz","slides","total","fields","getFieldsFromSlides","hasTabs","formDefinition","some","tab","getSlides","map","Map","set","items","order","tabName","getTabName","has","tabCondition","condition","sortBy","from","slide","updateDataFieldType","nonapplicableCount","satisfactoryCount","unsatisfactoryCount","isObject","fieldType","fieldTitle","extraData","shareToFeed","fieldShareToFeed","fieldValidity","explanation","valuesType","value_1","t","valueType","tabIndex","toString","Translate","Mapping","rq","googlemaps","broker","conditionsService","config","xlsx","_stringToArray","str","array","trimEnd","trimStart","split","test","substring","getTotal","mapping","read","then","Promise","resolve","convertMissionForExcelExport","conditions","conditionsData","convertConditonsForExcelExport","convertSlidesForExcelExport","pageTitle","pageDescription","allowComments","required","allowLibrary","step","minDate","maxDate","hideMobile","allowHistory","showOnLocation","allowAnnotate","showUsers","showService","allowOther","radius","clearable","duration","anwser","allowTime","upload","progress","publicCollectionName","getPublicCollectionName","postFile","publicApiUrl","toPromise","ret","pipe","concatMap","catchError","filter$","s","emit","take","convertTranslations","shift","translations","row","translation","language","en","us","fr","es","pl","nl","de","it","ru","zhs","zht","pt","kr","ja","ua","he","cz","th","tr","bg","el","sl","sk","ro","hu","et","br","isReject","isTrue","isPhotoAnnotation","convertLocations","cd","typeNames","getAll","mergeMap","types","obs","location_1","Location","placesearch","contactname","contactemail","contactphone","info","notificationemail","clientid","vip","missiondescriptionsRef","_geoloc","JSON","parse","status","markForCheck","resolveAddressLocation","getCurrentLanguage","coords","source","lng","lat","forkJoin","convertFormAndConditions","formDynamicBuilder","convertError","fieldsDef","removeEmptyRows","conditionsDef","currentSlide","conditionedFields","createField","conditionsTitles","cara","slideId","createCondition","findIndex","cond","errors","_downloadURL","Requestor","Googlemaps","Broker","Config","Xlsx","Chart","dashboard","localForage","coreConfig","utils","cache","PDF_ROW_WIDTH","PDF_ROW_HEIGHT","palette0","palette1","palette2","palette3","paletteBoost","textStyle","fontFamily","fontWeight","fontSize","whiteSpace","textShadow","lineColor","gridLineColor","decimalPipe","DecimalPipe","getCurrentAngularLocale","getFilenameSuffix","encodeChart","chart","aggregateOptions","isString","stringify","kpiFormValues","campaigns","pick","missionscores","selectedDescription","scores","decodeChart","aggregateData","encode","entity","newentity","tabs","item","definition","kpiType","getKpiIcon","decode","clone","newCd","saveDashboard","newEntity","upsert","deleteDashboard","delete","getData","forceRefresh","start","showPreviousYear","getDataObservable","err","throwError","getAggregateQuery","filters","options","getDataFromCache","aggregateQuery","addDataToCache","getChartCache","CACHE_KEYS","setChartCache","add","clearChartCache","remove","toMinutes","dateDiff","Date","toDate","getKpiData","getKpiClass","getChartDefinition","aggregate","getAggregate","pointPadding","numberPrecision","mapTransform","mapTransformAsync","getKpiIconByType","kpi","groupByDate","setTimescale","timescale","dateField","endDate","format","BaseKpi","getDateFormat","dateGrouping","groupByCampaign","$project","$dateToString","$group","$sum","keys","$addToSet","match","$type","$match","getChartConfig","getHCChartConfig","getGridConfig","kpiColumns","rowData","rows","series","showDelta","last","x","dateFormat","y","xAxis","categories","transform","getNumberFormat","getMapConfig","getMicroConfig","delta","microInfo","getPivotTableConfig","gridConfig","gridOptions","suppressTouch","assign","pivotPanelShow","gridPivotMode","campaignsPivotTableKpiSortRows","sorts","columnName","getCalendarData","dates","timeSpan","amount","timeScale","outputData","currentDate","stopDate","endOf","dateAdd","weekNumber","dayToY","stringDate","day","getDateOfMonth","daysInMonth","getCalendarConfig","setHCChartType","chartData","marginTop","marginLeft","marginBottom","spacing","legend","enabled","align","layout","margin","verticalAlign","symbolHeight","itemMarginTop","yAxis","labels","opposite","lineWidth","tickWidth","autoRotation","plotOptions","borderColor","borderRadius","borderWidth","maxPointWidth","pointWidth","colorAxis","stops","tooltip","formatter","originalData","setHCUseDates","series_1","fixDates","layoutAlgorithm","_map","colorValue","hideRegression","addCorelationLine","series_2","categories_1","Set","serie","crosshair","reduce","acc","memo","l","width_1","size","center","textColor","dataLabels","legendIndex","k","showCumulate","applyAreaSplineGradients","applySubtitleSum","applyLegendState","isChartEmpty","getChartEmptyImage","emptyImage","getURL","svg","height","filename","async","scale","exportUrl","postMultiPart","url","getBinaryContent","arrayBuffer","blob","Blob","formatSVGs","svgs","maxHeight","pdfRowWidth","join","exportAll","merge","printMaxWidth","buttons","contextButton","className","menuClassName","symbol","_titleKey","menuItems","textKey","separator","libURL","postRaw","subscribe","body","saveArrayBuffer","getChartIOUrl","dashboardId","env","getApiUrl","post","getTableauUrl","path","palette_1","getPalette","_a","g","fillColor","subtitleSum","sumBy","subtitle","toLocaleString","style","defaultsDeep","chartLegendState","sx","sy","a","minx","maxx","marker","enableMouseTracking","getHCDefaultConfig","getHCDefaultLine","getHCDefaultSpline","getHCDefaultArea","getHCDefaultAreaSpline","getHCDefaultBar","getHCDefaultColumn","getHCDefaultHeatmap","getHCDefaultDoughnut","getHCDefaultPie","getHCDefaultRadar","getHCDefaultTreemap","getHCDefaultScatter","showLegend","legendVerticalAlign","legendAlign","legendWidth","itemMarginBottom","marginRight","showLabelsY","zoomType","panning","panKey","palette","floor","getDateTimeIntervalByGroupingDate","groupingDate","groupBySlider","BASE_GROUPING_DATE_MILISECOND","hour","week","month","getDateTimeFormat","BASE_GROUPING_DATE_HCFORMAT","chartService","isSalesDatasKpi","backgroundColor","resetZoomButton","theme","fill","stroke","hideAxis","gridLineWidth","padding","maxX","tickInterval","endOnTick","maxPadding","maxY","itemStyle","lineHeight","labelFormatter","yData","legendValue","unit","turboThreshold","groupPadding","colorByPoint","stacking","stacked","allowPointSelect","states","animation","isWeb","credits","exporting","followTouchMove","shadow","useHTML","percentage","point","getDataLabelFormatter","abs","useContrast","getDataLabels","showValues","textOutline","line","spline","fillOpacity","area","connectNulls","areaspline","column","bar","spacingBottom","spacingTop","pie","cursor","distance","showInLegend","startAngle","endAngle","innerSize","polar","pane","gridLineInterpolation","tickmarkPlacement","minColor","maxColor","DashboardCore","LocalForageService","CoreConfig","Utils","Cache","tslib_1.__extends","tslib_1.__decorate","Editable","Searchable","flex","hiddenFields","idOnly","getGroupsTransform","FORM_FILES_IMAGE_FILTER","forceModal","mode","fixedPosition","maxWidth","crop","filterable","CustomModel","Model","ICustomModel","CustomModels","network","registerModel","customModel","properties","generated","permissions","registerModelForClient","clearCollectionName","setCollectionName","feathersService","addFormField","searchable","addSearchableField","appearance","addAppearance","registerModelsForClient","isOffline","customModels","Network","Persistent","PROVIDERS","DataFormModule","forRoot","configuredProviders","ngModule","providers","__spread","NgModule","args","declarations","entryComponents","imports","FormsModule","ReactiveFormsModule","DataCoreModule","TranslateModule","CommonModule","exports","idAttributeName","displayType","allowCustomTag","tag","CustomFormField","include","Entity","isNotInformation","isNotInformationOrTask","isNotInformationOrDocumentOrImage","isInformation","isVideoplayer","isAutocomplete","isCatalog","isImage","isDocument","isPhoto","isMultiPhotos","hasAllowLibrary","isPhotoOrVideo","isEmailReport","isSelect","isSelectImage","isAdress","isDate","isTodo","isNumberOrRange","isNumberOrRangeOrStarrating","isStarRating","isAudioOrVideo","isConnect","isGame","isFormula","hasValues","missionIsQuizz","hasSentence","hasMultiple","isReadOnly","MOBILE_FORM_FIELDS_ALL","advanced","dynamicValues","externalValidators","externalFieldName","rule","ROLES_CONDITIONS","hasTodo","hasTodoOrScore","hasService","isAdmin","FormField","GridState"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Translate } from '@shared/translate';\nimport { Colors } from '@shared/common';\n\nimport { Models } from '@shared/data-core';\nimport { IFormField, FormFieldType, IColumnDefinition } from '@shared/stencil';\n\nimport { sum as _sum, min as _min, max as _max, keys as _keys, cloneDeep, concat } from 'lodash-es';\n\n@Injectable()\nexport class CellRenderer {\n  public static colors = [\n    { name: 'finished', value: Colors.black, class: 'black', index: 0, textValue: Colors.light },\n    { name: 'booked', value: Colors.warning, class: 'warning', index: 1, textValue: Colors.black },\n    { name: 'available', value: Colors.stable, class: 'stable', index: 2, textValue: Colors.black },\n    { name: 'visited', value: Colors.black, class: 'black', index: 3, textValue: Colors.light },\n    {\n      name: 'notvisited',\n      value: Colors.stable,\n      class: 'stable',\n      index: 4,\n      textValue: Colors.black\n    },\n    {\n      name: 'analyzed',\n      value: Colors.success,\n      class: 'success',\n      index: 5,\n      textValue: Colors.black\n    },\n    {\n      name: 'validated',\n      value: Colors.success,\n      class: 'success',\n      index: 6,\n      textValue: Colors.black\n    },\n    {\n      name: 'tobevalidated',\n      value: Colors.stable,\n      class: 'stable',\n      index: 7,\n      textValue: Colors.light\n    },\n    { name: 'rejected', value: Colors.danger, class: 'danger', index: 8, textValue: Colors.light },\n    { name: 'progress', value: Colors.stable, class: 'stable', index: 9, textValue: Colors.black },\n    {\n      name: 'validationprogress',\n      value: Colors.stable,\n      class: 'stable',\n      index: 10,\n      textValue: Colors.black\n    },\n    {\n      name: 'conformityprogress',\n      value: Colors.stable,\n      class: 'stable',\n      index: 11,\n      textValue: Colors.black\n    },\n    {\n      name: 'conformityrelativeprogress',\n      value: Colors.stable,\n      class: 'stable',\n      index: 12,\n      textValue: Colors.black\n    },\n    {\n      name: 'ontime',\n      value: Colors.success,\n      class: 'success',\n      index: 13,\n      textValue: Colors.success\n    },\n    { name: 'late', value: Colors.danger, class: 'danger', index: 14, textValue: Colors.danger },\n    {\n      name: 'satisfactory',\n      value: Colors.success,\n      class: 'success',\n      index: 15,\n      textValue: Colors.success\n    },\n    {\n      name: 'unsatisfactory',\n      value: Colors.danger,\n      class: 'danger',\n      index: 16,\n      textValue: Colors.danger\n    },\n    {\n      name: 'nonapplicable',\n      value: Colors.black,\n      class: 'black',\n      index: 17,\n      textValue: Colors.light\n    }\n  ];\n\n  public static getColor(key) {\n    function isSameColor(color) {\n      return color.name === key;\n    }\n\n    return this.colors.find(isSameColor);\n  }\n\n  public static getColumnDefinition(field: IFormField, translate: any, visibleFields?: Array<string>, sortModel?: Array<any>, component?: { photos?: Array<any>; onPhotoSelect?: Function; onVideoSelect?: Function }): any {\n    let fieldName = Models.getFieldName(field);\n    let col: any = <any>{\n      headerName: Models.getFieldTitle(field, translate),\n      headerTooltip: Models.getFieldTitle(field, translate),\n      field: fieldName,\n      minWidth: field.columnDefinition && field.columnDefinition.width ? field.columnDefinition.width : 40,\n      width: field.columnDefinition && field.columnDefinition.width ? field.columnDefinition.width : 100,\n      hide: field.visible === false || (field.columnDefinition ? field.columnDefinition.hidden : false),\n      sortable: !(field.columnDefinition && field.columnDefinition.name && field.columnDefinition && field.columnDefinition.name.length > 0),\n      forceExport: field.forceExport,\n      exportOrder: field.exportOrder,\n      suppressExport: field.suppressExport,\n      menuTabs: ['filterMenuTab']\n    };\n\n    if (field.type) {\n      (<any>col).type = field.type;\n    }\n\n    if (visibleFields && visibleFields.length > 0) {\n      col.hide = visibleFields.indexOf(fieldName) < 0;\n    }\n    if (sortModel && sortModel.indexOf({ colId: col.field, sort: 'asc' }) >= 0) {\n      col.sort = 'asc';\n    }\n    if (sortModel && sortModel.indexOf({ colId: col.field, sort: 'desc' }) >= 0) {\n      col.sort = 'desc';\n    }\n    if (col.headerName && col.headerName.toUpperCase() === col.headerName) {\n      col.headerName = translate.get(col.headerName);\n    }\n\n    if (Models.isBooleanField(field)) {\n      col.cellRenderer = 'booleanRenderer';\n    } else if (Models.isVideoField(field)) {\n      col.cellRenderer = 'videoRenderer'; //VideoRendererComponent;\n      // col.onCellClicked = (params) => {\n      //     let url = DefaultRendererComponent.renderer(params);\n      //     if (url && component && component.onVideoSelect) {\n      //         component.onVideoSelect(url);\n      //     }\n      // };\n    } else if (Models.isPhotoField(field)) {\n      col.cellRenderer = 'photoRenderer';\n      // col.onCellClicked = (params) => {\n      //     let photo = Models.getPhotoFromParams(params);\n      //     if (photo && component && component.onPhotoSelect) {\n      //         component.onPhotoSelect(photo);\n      //     }\n\n      // };\n    } else if (Models.isMultiPhotosField(field)) {\n      col.cellRenderer = 'multiphotoRenderer';\n      // col.onCellClicked = (params) => {\n      //     let photos = Models.getPhotosFromParams(params);\n      //     if (photos && photos.length > 0 && component && component.onPhotoSelect) {\n      //         component.onPhotoSelect(photos[0]);\n      //     }\n      // };\n    } else if ((<any>field).isDistanceField === true) {\n      col.cellRenderer = 'distanceRenderer';\n      col.sortable = false;\n      col.comparator = 'distanceComparator';\n    } else if (field.type === FormFieldType.number) {\n      col.cellRenderer = 'numberRenderer';\n    } else if (field.type === FormFieldType.date) {\n      col.cellRenderer = 'dateRenderer';\n    } else if (Models.isDateTimeField(field)) {\n      col.cellRenderer = 'dateTimeRenderer';\n    } else if (field.type === FormFieldType.time) {\n      col.cellRenderer = 'timeRenderer';\n    } else if (field.type === FormFieldType.address) {\n      col.cellRenderer = 'addressRenderer';\n    } else if (field.type === FormFieldType.location) {\n      col.cellRenderer = 'locationRenderer';\n    } else if (field.type === FormFieldType.starrating) {\n      col.cellRenderer = 'starratingRenderer';\n      col.cellRendererParams = { max: field.max };\n    } else if (field.type === FormFieldType.todo) {\n      col.cellRenderer = 'todoRenderer';\n    } else if (field.type === FormFieldType.timer) {\n      col.cellRenderer = 'timerRenderer';\n    } else if (field.type === FormFieldType.checklist) {\n      col.cellRenderer = 'checklistRenderer';\n    } else if (field.type === FormFieldType.autocomplete && field.collectionName && Models.getModelByCollectionName(field.collectionName) && Models.getModelByCollectionName(field.collectionName).isCustom) {\n      col.cellRenderer = 'customModelRenderer';\n    } else {\n      col.cellRenderer = 'defaultRenderer';\n    }\n\n    if (field.columnDefinition && field.columnDefinition.rendererType) {\n      switch (field.columnDefinition.rendererType) {\n        case 'percentage':\n          col.cellRenderer = 'percentageRenderer';\n          break;\n\n        case 'duration':\n          col.cellRenderer = 'durationRenderer';\n          break;\n\n        case 'userfullname':\n          col.cellRenderer = 'userFullNameRenderer';\n          break;\n      }\n    }\n    if (field.columnDefinition && field.columnDefinition.cellRenderer) {\n      col.cellRenderer = field.columnDefinition.cellRenderer;\n    }\n    return col;\n  }\n\n  public static getColumnTypes() {\n    return {\n      address: {},\n      audio: {},\n      autocomplete: {},\n      barcode: {},\n      'between-date': {},\n      'between-number': {},\n      button: {},\n      catalog: {},\n      checkbox: {},\n      color: {},\n      date: {},\n      daterange: {},\n      'datetime-local': {},\n      document: {},\n      documentuploader: {},\n      email: {},\n      emailreport: {},\n      filter: {},\n      grid: {},\n      image: {},\n      information: {},\n      inttel: {},\n      invite: {},\n      json: {},\n      location: {},\n      missionfield: {},\n      missionscore: {},\n      number: {},\n      password: {},\n      multiphotos: {},\n      photo: {},\n      productcheck: {},\n      range: {},\n      ranking: {},\n      select: {},\n      selectbuttons: {},\n      selectbuttonsmulti: {},\n      selectimage: {},\n      selectmulti: {},\n      signature: {},\n      starrating: {},\n      string: {},\n      stripecard: {},\n      tel: {},\n      text: {},\n      textarea: {},\n      time: {},\n      timer: {},\n      todo: {},\n      toggle: {},\n      video: {},\n      knob: {},\n      selectchat: {},\n      missingword: {},\n      swipeselect: {},\n      checklist: {},\n      formula: {},\n      videoplayer: {}\n    };\n  }\n\n  public static getConfig(multiple: boolean, rowModelType: string, infiniteScrolling: boolean, pageSize: number, translate: Translate): any {\n    return {\n      rowHeight: 52,\n      rowStyle: { 'line-height': '32px' },\n      headerHeight: 40,\n      defaultColDef: { sortable: true, resizable: true },\n      rowDeselection: true,\n      rowSelection: multiple ? 'multiple' : 'single',\n      rowModelType: rowModelType || 'serverSide',\n      rowBuffer: 0,\n      maxConcurrentDatasourceRequests: 1,\n      infiniteInitialRowCount: pageSize,\n      cacheOverflowSize: 2,\n      //maxBlocksInCache: 10,\n      pagination: !infiniteScrolling,\n      paginationPageSize: pageSize,\n      cacheBlockSize: pageSize,\n      suppressPropertyNamesCheck: true,\n      animateRows: true,\n      localeText: CellRenderer.getTranslation(translate),\n      //suppressContextMenu: true,\n      columnTypes: CellRenderer.getColumnTypes()\n    };\n  }\n\n  public static getPivotConfig(translate: Translate): any {\n    return {\n      rowHeight: 52,\n      rowStyle: { 'line-height': '32px' },\n      headerHeight: 40,\n      defaultColDef: { sortable: true, resizable: true },\n      filter: true,\n      suppressPreventDefaultOnMouseWheel: false,\n      suppressPropertyNamesCheck: true,\n      rememberGroupStateWhenNewData: true,\n      suppressAggFuncInHeader: true,\n      groupDefaultExpanded: 0,\n      groupSuppressGroupColumn: true,\n      suppressRowHoverClass: true,\n      autoGroupColumnDef: {\n        headerName: translate.get('GROUP'),\n        cellRenderer: 'agGroupCellRenderer',\n        comparator: 'defaultGroupComparator'\n      },\n      icons: {\n        menu: '<yoo-icon class=\"yo-menu\"></yoo-icon>',\n        filter: '<yoo-icon class=\"yo-filter\"></yoo-icon>',\n        groupExpanded: '<yoo-icon class=\"yo-circle-minor\"></yoo-icon>',\n        groupContracted: '<yoo-icon class=\"yo-circle-plus\"></yoo-icon>',\n        columnGroupOpened: '<yoo-icon class=\"yo-nodata\"></yoo-icon>',\n        columnGroupClosed: '<yoo-icon class=\"yo-plus\"></yoo-icon>',\n        columnSelectOpen: '<yoo-icon class=\"yo-nodata\"></yoo-icon>',\n        columnSelectClosed: '<yoo-icon class=\"yo-plus\"></yoo-icon>',\n        checkboxChecked: '<yoo-icon class=\"yo-check\"></yoo-icon>',\n        checkboxUnchecked: '<yoo-icon class=\"yo-circle\"></yoo-icon>',\n        checkboxIndeterminate: '<yoo-icon class=\"yo-circle\"></yoo-icon>',\n        sortAscending: '<yoo-icon class=\"yo-up\"></yoo-icon>',\n        sortDescending: '<yoo-icon class=\"yo-down\"></yoo-icon>',\n        columnMoveGroup: '<yoo-icon class=\"yo-direction-select\"></yoo-icon>',\n        dropNotAllowed: '<yoo-icon class=\"yo-rejected2\"></yoo-icon>'\n      },\n      columnTypes: CellRenderer.getColumnTypes(),\n      localeText: CellRenderer.getTranslation(translate),\n      groupUseEntireRow: false,\n      groupRowInnerRenderer: 'progressRenderer'\n    };\n  }\n\n  public static getTranslation(translate: Translate) {\n    return {\n      next: '<i class=\"yo-right\"></i>',\n      previous: '<i class=\"yo-left\"></i>',\n      page: ' ',\n      of: '/',\n      more: translate.get('AGGRIDMORE'),\n      to: ' - ',\n      loadingOoo: translate.get('AGGRIDLOADINGOOO'),\n      selectAll: translate.get('AGGRIDSELECTALL'),\n      searchOoo: translate.get('AGGRIDSEARCHOOO'),\n      blanks: translate.get('AGGRIDBLANKS'),\n      filterOoo: translate.get('AGGRIDFILTEROOO'),\n      applyFilter: translate.get('AGGRIDAPPLYFILTER'),\n      equals: translate.get('AGGRIDEQUALS'),\n      lessThan: translate.get('AGGRIDLESSTHAN'),\n      greaterThan: translate.get('AGGRIDGREATERTHAN'),\n      contains: translate.get('AGGRIDCONTAINS'),\n      startsWith: translate.get('AGGRIDSTARTSWITH'),\n      endsWith: translate.get('AGGRIDENDSWITH'),\n      group: translate.get('AGGRIDGROUP'),\n      columns: translate.get('AGGRIDCOLUMNS'),\n      rowGroupColumns: translate.get('AGGRIDROWGROUPCOLUMNS'),\n      rowGroupColumnsEmptyMessage: translate.get('AGGRIDROWGROUPCOLUMNSEMPTYMESSAGE'),\n      valueColumns: translate.get('AGGRIDVALUECOLUMNS'),\n      pivotMode: translate.get('AGGRIDPIVOTMODE'),\n      groups: translate.get('AGGRIDGROUPS'),\n      values: translate.get('AGGRIDVALUES'),\n      pivots: translate.get('AGGRIDPIVOTS'),\n      valueColumnsEmptyMessage: translate.get('AGGRIDVALUECOLUMNSEMPTYMESSAGE'),\n      pivotColumnsEmptyMessage: translate.get('AGGRIDPIVOTCOLUMNSEMPTYMESSAGE'),\n      noRowsToShow: translate.get('AGGRIDNOROWSTOSHOW'),\n      pinColumn: translate.get('AGGRIDPINCOLUMN'),\n      valueAggregation: translate.get('AGGRIDVALUEAGGREGATION'),\n      autosizeThiscolumn: translate.get('AGGRIDAUTOSIZETHISCOLUMN'),\n      autosizeAllColumns: translate.get('AGGRIDAUTOSIZEALLCOLUMNS'),\n      groupBy: translate.get('AGGRIDGROUPBY'),\n      ungroupBy: translate.get('AGGRIDUNGROUPBY'),\n      resetColumns: translate.get('AGGRIDRESETCOLUMNS'),\n      expandAll: translate.get('AGGRIDEXPANDALL'),\n      collapseAll: translate.get('AGGRIDCOLLAPSEALL'),\n      toolPanel: translate.get('AGGRIDTOOLPANEL'),\n      pinLeft: translate.get('AGGRIDPINLEFT'),\n      pinRight: translate.get('AGGRIDPINRIGHT'),\n      noPin: translate.get('AGGRIDNOPIN'),\n      sum: translate.get('AGGRIDSUM'),\n      min: translate.get('AGGRIDMIN'),\n      max: translate.get('AGGRIDMAX'),\n      none: translate.get('AGGRIDNONE'),\n      count: translate.get('AGGRIDCOUNT'),\n      average: translate.get('AGGRIDAVERAGE'),\n      avg: translate.get('AGGRIDAVERAGE'),\n      copy: translate.get('AGGRIDCOPY'),\n      ctrlC: translate.get('AGGRIDCTRLC'),\n      paste: translate.get('AGGRIDPASTE'),\n      ctrlV: translate.get('AGGRIDCTRLV')\n    };\n  }\n\n  public static createColumnDefs(collectionName?: string, translate?: Translate, campaignFields?: Array<any>, customColumnDefs?: Array<any>, includeDistance?: boolean, infiniteScrolling?: boolean, itemButtons?: Array<any>, colMinWidth?: number, visibleFields?, sortModel?, grid?, hiddenColumns?) {\n    let columnDefs: Array<IColumnDefinition> = [];\n    if (customColumnDefs && customColumnDefs.length > 0) {\n      columnDefs = cloneDeep(customColumnDefs);\n    } else {\n      if (!collectionName) {\n        return;\n      } // || (items && items.length > 0)\n      let formFields: Array<IFormField> = [];\n      let model = Models.getModelByCollectionName(collectionName);\n      if (model) {\n        formFields = model.formFields;\n        if (campaignFields && campaignFields.length > 0) {\n          campaignFields = cloneDeep(campaignFields);\n          campaignFields.forEach(c => (c.name += '.value'));\n          formFields = concat(formFields, campaignFields);\n        }\n      }\n      columnDefs = [];\n      formFields.forEach(field => {\n        let colEdit;\n        let col = CellRenderer.getColumnDefinition(field, translate, visibleFields, sortModel, grid);\n        if (colMinWidth > 0 && col.minWidth === 40) {\n          col.minWidth = colMinWidth;\n        }\n        col.menuTabs = [];\n        if (field.type === FormFieldType.catalog) {\n          col.cellRenderer = 'catalogRenderer';\n          col.isCheck = field.check;\n          col.isPresence = field.presence;\n          col.isInventory = field.inventory;\n        }\n        if (field.type === FormFieldType.multiphotos) {\n          col.suppressExport = true;\n        }\n        //if (col.hide !== true) {\n        if (!hiddenColumns || hiddenColumns.indexOf(col.field) < 0) {\n          columnDefs.push(col);\n        }\n        if (field.isImageRecognition && field.type === FormFieldType.photo) {\n          colEdit = cloneDeep(col);\n          colEdit.hide = true;\n          colEdit.headerName += ' - Markup';\n          colEdit.forceExport = true;\n          colEdit.field = colEdit.field.replace('.value', '.edit');\n          columnDefs.push(colEdit);\n        }\n        if (field.type === FormFieldType.multiphotos) {\n          for (let i = 0; i < field.maxPhotos; i++) {\n            let colPhoto = cloneDeep(col);\n            colPhoto.hide = true;\n            colPhoto.suppressExport = false;\n            colPhoto.headerName += ' ' + i;\n            colPhoto.forceExport = true;\n            colPhoto.field = colPhoto.field.replace('.value', '.value[' + i + ']');\n            columnDefs.push(colPhoto);\n\n            if (field.isImageRecognition) {\n              colEdit = cloneDeep(col);\n              colEdit.hide = true;\n              colEdit.suppressExport = false;\n              colEdit.headerName += ' - Markup ' + i;\n              colEdit.forceExport = true;\n              colEdit.field = colEdit.field.replace('.value', '.extraData[' + i + '].edit');\n              columnDefs.push(colEdit);\n            }\n          }\n        }\n        //}\n      });\n    }\n\n    if (includeDistance) {\n      let distanceField = {\n        name: 'distance',\n        title: 'Distance',\n        type: FormFieldType.number,\n        columnDefinition: { width: 150 },\n        isDistanceField: true\n      };\n      let distanceCol = CellRenderer.getColumnDefinition(distanceField, translate);\n      columnDefs.push(distanceCol);\n    }\n\n    if (infiniteScrolling === true) {\n      columnDefs.unshift({\n        headerName: '#',\n        width: 50,\n        cellRenderer: params => params.node.id + 1\n      });\n    }\n\n    if (itemButtons && itemButtons.length > 0) {\n      itemButtons.forEach(button => {\n        columnDefs.push({\n          //minWidth: 45,\n          width: 45,\n          //headerClass: 'centered',\n          cellClass: 'overflow',\n          suppressExport: true,\n          sortable: false,\n          suppressFilter: true,\n          pinned: 'right',\n          menuTabs: ['filterMenuTab'],\n          context: {\n            icon: button.icon,\n            color: button.color,\n            text: button.text\n          },\n          cellRenderer: 'buttonRenderer',\n          onCellClicked: params => {\n            button.handler(params.data && params.data.toJS ? params.data.toJS() : params.data);\n            return false;\n          }\n        });\n      });\n    }\n    return columnDefs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ICondition, CONDITION_TYPES, CONDITION_ALL_OPERATORS, SIMPLE_FIELD_TYPES, WITH_VALUES_FIELD_TYPES } from '@shared/data-core';\n\nimport { getUUID } from '@shared/stencil';\n\nimport { isEqual, omit, isArray } from 'lodash-es';\n\n@Injectable()\nexport class Conditions {\n  constructor() {}\n\n  generateConditionId() {\n    return getUUID();\n  }\n\n  convertOperator(op: string) {\n    if (!op) {\n      return 'in';\n    }\n    let retVal;\n    switch (op.toLowerCase().replace(/\\s/g, '')) {\n      case 'equals':\n      case '==':\n      case '===':\n      case 'Ã©gal':\n        retVal = 'equals';\n        break;\n      case 'notequals':\n      case '!=':\n      case '!==':\n      case 'diffÃ©rentde':\n        retVal = 'notequals';\n        break;\n      case 'greaterthan':\n      case '>=':\n      case 'plusgrandque':\n        retVal = 'greaterthan';\n        break;\n      case 'lessthan':\n      case '<=':\n      case 'pluspetitque':\n        retVal = 'lessthan';\n        break;\n      case 'in':\n      case 'contient':\n      case 'contains':\n        retVal = 'in';\n        break;\n      case 'notin':\n      case 'necontientpas':\n      case 'notcontains':\n        retVal = 'notin';\n        break;\n    }\n    return retVal;\n  }\n\n  convertType(type: string) {\n    if (!type) {\n      return;\n    }\n    let retVal;\n    switch (type.toLowerCase().replace(/\\s/g, '')) {\n      case 'field':\n      case 'champ':\n        retVal = 'field';\n        break;\n      case 'tags':\n        retVal = 'tags';\n        break;\n      case 'groups':\n      case 'groupes':\n        retVal = 'groups';\n        break;\n      default:\n        retVal = '';\n        break;\n    }\n    return retVal;\n  }\n\n  convertField(f) {\n    if (!f) {\n      return;\n    }\n    let res = { name: f.name, title: f.title, type: f.type };\n    if (f.values) {\n      res['values'] = f.values;\n    }\n    return res;\n  }\n\n  isValid(c: ICondition) {\n    if (!c) {\n      return false;\n    }\n    let isTitleValid = c.title && !!c.title.replace(/\\s/g, '');\n    let isOpValid = c.operator && CONDITION_ALL_OPERATORS.indexOf(c.operator) >= 0;\n    let isTypeValid = c.type && CONDITION_TYPES.indexOf(c.type) >= 0;\n    let isFieldValid = c.type === 'field' && c.field;\n    let isTagsValid = c.type === 'tags' && c.tags && isArray(c.tags) && c.tags.length > 0;\n    let isGroupValid = c.type === 'groups' && c.group && isArray(c.group) && c.group.length > 0;\n    let isValueValid = c.type === 'field' && isFieldValid && SIMPLE_FIELD_TYPES.indexOf(c.field.type) >= 0 && c.value;\n    let areValuesValid = c.type === 'field' && isFieldValid && WITH_VALUES_FIELD_TYPES.indexOf(c.field.type) >= 0 && c.values && isArray(c.values) && c.values.length > 0;\n\n    return isTitleValid && isOpValid && isTypeValid && (isGroupValid || isTagsValid || (isFieldValid && (isValueValid || areValuesValid)));\n  }\n\n  areEqual(c1: ICondition, c2: ICondition) {\n    if (c1._id && c2._id) {\n      return c1._id === c2._id;\n    } else if (!c1._id && !c2._id) {\n      return isEqual(c1, c2);\n    } else if (c1._id && !c2._id) {\n      return isEqual(c2, omit(c1, '_id'));\n    } else if (!c1._id && c2._id) {\n      return isEqual(c1, omit(c2, '_id'));\n    }\n  }\n}\n","import { Injectable } from '@angular/core'; //, Injector\nimport { Translate } from '@shared/translate';\nimport { Slide, MissionDescription, Models } from '@shared/data-core'; //Condition, Session,\nimport { isPresent, FormFieldType, IFormField, getUUID, answerIsValid } from '@shared/stencil';\n\nimport { isArray, isObject, forEach, filter, sortBy, isNumber, isBoolean } from 'lodash-es'; //cloneDeep, isFunction, keys, isEmpty,  indexOf, get, set, mergeWith, intersection, result,  isString, concat,\n\nexport interface FieldControl {\n  [key: string]: any;\n}\n\n@Injectable()\nexport class FormDynamicBuilder {\n  constructor(private translate: Translate) {\n    //private builder: FormBuilder, private session: Session,, private coreConfig: CoreConfig, private log: Log, private injector: Injector\n  }\n\n  generateFieldName() {\n    return getUUID();\n  }\n\n  answerIsValid(value, answer, field) {\n    return answerIsValid(value, answer, field);\n  }\n\n  hasScoring(missiondescription: MissionDescription) {\n    if (missiondescription && missiondescription.scoring && missiondescription.scoring.length > 0) {\n      // && _some(missiondescription.scoring, (score: any) => score.isActive)) {\n      return true;\n    }\n    return false;\n  }\n\n  calculateScoring(mission: any, data: { [key: string]: any }) {\n    if (mission.description.scoring.length > 1) {\n      mission.extraScores = {};\n    }\n    forEach(mission.description.scoring, (scoring: any) => {\n      //let scoring = _find(mission.description.scoring, (s: any) => s.isActive);\n      let scoreValue = scoring.initialValue || 0;\n      let scorePercentageBasis = scoring.percentageBasis || 0;\n      forEach(data, (value, key) => {\n        if (value && isArray(value.value)) {\n          forEach(value.value, v => {\n            if (v && isNumber(scoring[key + this.encodeScoringValue(v)])) {\n              let numValue = scoring[key + this.encodeScoringValue(v)];\n              if (numValue < 0 && -numValue % 1337 === 0) {\n                scorePercentageBasis -= -numValue / 1337;\n              } else {\n                scoreValue += numValue;\n              }\n            }\n          });\n        } else {\n          if (value && isNumber(scoring[key + this.encodeScoringValue(value.value)])) {\n            let numValue = scoring[key + this.encodeScoringValue(value.value)];\n            if (numValue < 0 && -numValue % 1337 === 0) {\n              scorePercentageBasis -= -numValue / 1337;\n            } else {\n              scoreValue += numValue;\n            }\n          } else if (value && isNumber(value.value) && isNumber(scoring[key])) {\n            scoreValue += value.value * scoring[key];\n          } else if (isBoolean(value.value) && scoring[key + 'value']) {\n            //not sure why we have the 'value' in the form creator\n            if (value.value && isNumber(scoring[key + 'value'].value)) {\n              scoreValue += scoring[key + 'value'].value;\n            } else if (!value.value && isNumber(scoring[key + 'value'].novalue)) {\n              scoreValue += scoring[key + 'value'].novalue;\n            }\n          }\n        }\n\n        if (value && isPresent(value.value) && scoring[key + 'value'] && isNumber(scoring[key + 'value'].visible)) {\n          scorePercentageBasis += scoring[key + 'value'].visible;\n        }\n      });\n\n      if (scoring.isPercentage && scorePercentageBasis > 0) {\n        scoreValue = Math.round((scoreValue * 100) / scorePercentageBasis);\n      }\n      let score = { value: scoreValue, isPercentage: scoring.isPercentage, title: scoring.title };\n      if (scoring.isActive || mission.description.scoring.length === 1) {\n        mission.score = score;\n        if ((scoring.minValue || scoring.minValue === 0) && scoreValue < scoring.minValue) {\n          mission.validated = false;\n        } else if ((scoring.minValue || scoring.minValue === 0) && scoreValue >= scoring.minValue) {\n          delete mission.validated;\n        }\n      } else {\n        mission.extraScores[score.title] = score;\n      }\n    });\n  }\n\n  calculateScoringQuizz(mission: any, slides: Array<Slide>, data: { [key: string]: any }) {\n    let score = { total: 0, value: 0 };\n    let fields = Models.getFieldsFromSlides(slides);\n    forEach(fields, field => {\n      if (field.answer && field.answer.length > 0) {\n        score.total += 1;\n      }\n      if (data[field.name] && this.answerIsValid(data[field.name].value, field.answer, field)) {\n        score.value += 1;\n      }\n    });\n    mission.score = score;\n  }\n\n  hasTabs(formDefinition: Array<IFormField>) {\n    return formDefinition.some(f => f.tab && f.tab.length > 0);\n  }\n\n  getSlides(formDefinition: Array<IFormField>) {\n    let map = new Map<string, Slide>();\n    map.set('GENERAL', <Slide>{ title: this.translate.get('GENERAL'), items: [], order: 0 });\n    formDefinition.forEach(f => {\n      let tabName = this.getTabName(f);\n      if (!f.tab) {\n        map.get('GENERAL').items.push(f);\n      } else if (map.has(tabName)) {\n        map.get(tabName).items.push(f);\n        if (f.tabCondition) {\n          map.get(tabName).condition = <any>f.tabCondition;\n        }\n      } else {\n        map.set(tabName, <Slide>{ title: tabName, items: [f], condition: f.tabCondition });\n      }\n    });\n    return filter(sortBy(Array.from(map.values()), slide => slide.title), slide => slide.items.length > 0);\n  }\n\n  updateDataFieldType(data, fields: Array<IFormField>) {\n    data.nonapplicableCount = 0;\n    data.satisfactoryCount = 0;\n    data.unsatisfactoryCount = 0;\n\n    forEach(fields, field => {\n      if (isObject(data[field.name])) {\n        data[field.name].fieldType = field.type;\n        data[field.name].fieldTitle = field.title;\n\n        if (data[field.name] && data[field.name].value && field.type === FormFieldType.photo && field.values && (!data[field.name].tags || data[field.name].tags.length < 1)) {\n          data[field.name].tags = field.values;\n        } else if (data[field.name] && data[field.name].value && field.type === FormFieldType.multiphotos && field.values) {\n          data[field.name].extraData = data[field.name].extraData || {};\n          data[field.name].value.forEach((v, i) => {\n            data[field.name].extraData[i] = data[field.name].extraData[i] || {};\n            if (!data[field.name].extraData[i].tags || data[field.name].extraData[i].tags.length < 1) {\n              data[field.name].extraData[i].tags = field.values;\n            }\n          });\n        }\n\n        if (field.shareToFeed) {\n          data[field.name].fieldShareToFeed = field.shareToFeed;\n        }\n        if (field.answer) {\n          data[field.name].answer = field.answer;\n          data[field.name].fieldValidity = this.answerIsValid(data[field.name].value, field.answer, field);\n        }\n        if (field.explanation) {\n          data[field.name].explanation = field.explanation;\n        }\n        if (field.valuesType) {\n          let value = data[field.name].value;\n          let type = field.valuesType.find(t => t.key === value);\n          if (type) {\n            data[field.name].valueType = type.value;\n          }\n        }\n\n        if (field.valuesType && data[field.name] && data[field.name].value) {\n          let values: Array<any> = [].concat(data[field.name].value);\n          values.forEach(key => {\n            let type = field.valuesType.find(t => t.key === key);\n            if (type) {\n              if (type.value === 'satisfactory') {\n                data.satisfactoryCount += 1;\n              } else if (type.value === 'unsatisfactory') {\n                data.unsatisfactoryCount += 1;\n              } else if (type.value === 'nonapplicable') {\n                data.nonapplicableCount += 1;\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n\n  getTabName(field: IFormField) {\n    let retVal = '';\n    if (field.tabIndex) {\n      retVal += field.tabIndex + '. ';\n    }\n    if (field.tab) {\n      retVal += this.translate.get(field.tab);\n    }\n    return retVal;\n  }\n\n  encodeScoringValue(v) {\n    if (v && v.toString) {\n      return v.toString().replace(/\\./, '_');\n    } else {\n      return v;\n    }\n  }\n}\n","import { Injectable, ChangeDetectorRef, EventEmitter } from '@angular/core';\n\nimport { Translate } from '@shared/translate';\nimport { Location, IMapping, Xlsx, Condition, Translation, SIMPLE_FIELD_TYPES, Config, Broker, Requestor, Googlemaps, Slide, Models } from '@shared/data-core';\nimport { IFormField, IErrorMapping } from '@shared/stencil';\n\nimport { FormDynamicBuilder } from '../form-dynamic-builder/form-dynamic-builder.service';\nimport { Conditions } from '../conditions/conditions.service';\n\nimport { Observable, of, forkJoin, timer } from 'rxjs';\nimport { mergeMap, map, concatMap, catchError, filter as filter$, take } from 'rxjs/operators';\nimport { forEach, find, findIndex, indexOf, filter, trimEnd, trimStart, get } from 'lodash-es';\n\n@Injectable()\nexport class Mapping {\n  constructor(private rq: Requestor, private googlemaps: Googlemaps, private broker: Broker, private conditionsService: Conditions, private config: Config, private translate: Translate, protected xlsx: Xlsx) {}\n\n  getTotal(mapping: IMapping) {\n    if (mapping.document) {\n      return this.xlsx.read(mapping.document).then((data: any) => {\n        return data.length - 1;\n      });\n    } else {\n      return Promise.resolve(0);\n    }\n  }\n\n  convertMissionForExcelExport(slides: Array<any>, conditions: Array<any>) {\n    let conditionsData = this.convertConditonsForExcelExport(conditions);\n    let slidesData = this.convertSlidesForExcelExport(slides);\n    return [slidesData, conditionsData];\n  }\n\n  convertSlidesForExcelExport(slides: Array<any>) {\n    let columns = [\n      { name: 'id' },\n      { name: 'pageTitle' },\n      { name: 'pageDescription' },\n      { name: 'title' },\n      { name: 'description' },\n      { name: 'type' },\n      { name: 'allowComments' },\n      { name: 'required' },\n      { name: 'values' },\n      { name: 'allowLibrary' },\n      { name: 'min' },\n      { name: 'max' },\n      { name: 'step' },\n      { name: 'minDate' },\n      { name: 'maxDate' },\n      { name: 'hideMobile' },\n      { name: 'allowHistory' },\n      { name: 'showOnLocation' },\n      { name: 'allowAnnotate' },\n      { name: 'showUsers' },\n      { name: 'showService' },\n      { name: 'allowOther' },\n      { name: 'radius' },\n      { name: 'multiple' },\n      { name: 'clearable' },\n      { name: 'duration' },\n      { name: 'anwser' },\n      { name: 'explanation' },\n      { name: 'conditions' },\n      { name: 'allowTime' },\n      { name: 'image' }\n    ];\n    let data = [];\n    //let counter = 1;\n    forEach(slides, function(slide) {\n      forEach(slide.items, function(field: any) {\n        data.push({\n          id: field.name,\n          pageTitle: slide.title,\n          pageDescription: slide.description,\n          title: field.title,\n          description: field.type === 'information' ? field.value : field.description,\n          type: field.type,\n          allowComments: field.allowComments,\n          required: field.required,\n          values: field.values,\n          allowLibrary: field.allowLibrary,\n          min: field.min,\n          max: field.max,\n          step: field.step,\n          minDate: field.minDate,\n          maxDate: field.maxDate,\n          hideMobile: field.hideMobile,\n          allowHistory: field.allowHistory,\n          showOnLocation: field.showOnLocation,\n          allowAnnotate: field.allowAnnotate,\n          showUsers: field.showUsers,\n          showService: field.showService,\n          allowOther: field.allowOther,\n          radius: field.radius,\n          multiple: field.multiple,\n          clearable: field.clearable,\n          duration: field.duration,\n          anwser: field.anwser,\n          explanation: field.explanation,\n          conditions: field.condition ? field.condition.map(c => c.title) : '',\n          allowTime: field.allowTime,\n          image: field.image\n        });\n      });\n    });\n    return { columns: columns, data: data, title: 'Slides' };\n  }\n\n  convertConditonsForExcelExport(conditions: Array<any>) {\n    let columns = [{ name: 'title' }, { name: 'type' }, { name: 'field' }, { name: 'operator' }, { name: 'values' }, { name: 'id' }];\n    let data = [];\n    forEach(conditions, function(condition) {\n      data.push({\n        title: condition.title,\n        type: condition.type,\n        field: condition.field ? condition.field.name : '',\n        operator: condition.operator,\n        values: condition.values || condition.value || condition.tags || condition.group,\n        id: condition._id\n      });\n    });\n    return { columns: columns, data: data, title: 'Conditions' };\n  }\n\n  upload(mapping: IMapping, collectionName: string, progress?: EventEmitter<number>): Promise<Array<IErrorMapping>> {\n    let publicCollectionName = Models.getPublicCollectionName(collectionName);\n    return this.rq\n      .postFile(this.config.publicApiUrl + publicCollectionName + '/import', mapping.document)\n      .toPromise()\n      .then(ret => {\n        if (ret._id) {\n          return timer(1000, 500)\n            .pipe(\n              concatMap(() => {\n                return this.rq.get(this.config.publicApiUrl + 'jobs/' + ret._id, false, null).pipe(\n                  catchError(() => {\n                    return of({});\n                  })\n                );\n              })\n            )\n            .pipe(\n              filter$(s => {\n                if (progress && s && s.progress) {\n                  progress.emit(s.progress * 100);\n                }\n                return s && s.progress === 1;\n              })\n            )\n            .pipe(take(1))\n            .toPromise()\n            .then(res => {\n              let errors: Array<IErrorMapping> = get(res, 'data.output.errors');\n              return errors || [];\n            });\n        }\n      });\n  }\n\n  convertTranslations(data: Array<Array<any>>) {\n    data.shift();\n    let translations = [];\n    forEach(data, (row, i) => {\n      if (row[1]) {\n        let translation: Translation = {\n          language: row[1],\n          key: row[2],\n          value: row[3],\n          en: row[4],\n          us: row[5],\n          fr: row[6],\n          es: row[7],\n          pl: row[8],\n          nl: row[9],\n          de: row[10],\n          it: row[11],\n          ru: row[12],\n          zhs: row[13],\n          zht: row[14],\n          pt: row[15],\n          kr: row[16],\n          ja: row[17],\n          ua: row[18],\n          he: row[19],\n          ar: row[20],\n          cz: row[21],\n          th: row[22],\n          tr: row[23],\n          bg: row[24],\n          el: row[25],\n          sl: row[26],\n          sk: row[27],\n          ro: row[28],\n          hu: row[29],\n          et: row[30],\n          br: row[31],\n          isReject: this.isTrue(row[32]),\n          group: this._stringToArray(row[33]),\n          isPhotoAnnotation: this.isTrue(row[34])\n        };\n        if (row[0]) {\n          translation._id = row[0];\n        }\n        translations.push(translation);\n      }\n    });\n    return translations;\n  }\n\n  convertLocations(data: Array<Array<any>>, progress: { count: number; total: number }, cd: ChangeDetectorRef) {\n    //: Observable<Array<Location>>\n    data.shift();\n    progress.total = data.length;\n    let typeNames: Array<string> = [];\n    data.forEach(row => {\n      if (typeNames.indexOf(row[2]) < 0) {\n        typeNames.push(row[2]);\n      }\n    });\n\n    return this.broker.getAll('locationtypes', null, null, null, [[{ field: 'name', operator: { _id: 'inq' }, value: typeNames }]]).pipe(\n      map(res => res.data),\n      mergeMap((types: Array<any>) => {\n        let obs: Array<Observable<Location>> = [];\n        data.forEach((row, index) => {\n          if (row[0] && row[1]) {\n            let location = new Location();\n            location.title = row[0];\n            location.address = row[1];\n            location.placesearch = row[4] ? row[4] : location.title; // + ' ' + location.address;\n            location.contactname = row[5];\n            location.contactemail = row[6];\n            location.contactphone = row[7];\n            location.info = row[8];\n            location.tags = this._stringToArray(row[9]);\n            location.notificationemail = row[10];\n            location.clientid = row[11];\n            if (row[12]) {\n              location._id = row[12];\n            } else {\n              location._id = 'mapping_' + index;\n            }\n            if (row[13]) {\n              location.vip = this.isTrue(row[13]);\n            }\n            location.type = types.find(t => t.name === row[2]);\n            if (row[14]) {\n              location.missiondescriptionsRef = this._stringToArray(row[14]);\n            }\n            if (!row[3]) {\n              let o = this.googlemaps.resolveAddressLocation(location.address, this.translate.getCurrentLanguage(), location.placesearch).pipe(\n                map(value => {\n                  if (value && value.coords) {\n                    location.status = value.source;\n                    location._geoloc = [value.coords.lng, value.coords.lat];\n                  } else {\n                    location.status = 'error';\n                  }\n                  progress.count += 1;\n                  cd.markForCheck();\n                  return location;\n                })\n              );\n              obs.push(o);\n            } else {\n              location._geoloc = JSON.parse(row[3]);\n              location.status = 'file';\n              progress.count += 1;\n              cd.markForCheck();\n              obs.push(of(location));\n            }\n          }\n        });\n        return forkJoin(obs);\n      })\n    );\n  }\n\n  convertFormAndConditions(data: Array<Array<Array<any>>>, formDynamicBuilder: FormDynamicBuilder): { slides: Array<Slide>; conditions: Array<Condition>; errors: Array<any> } {\n    let convertError = [];\n    let slides = <Array<Slide>>[];\n    let conditions = [];\n    let fieldsDef = this.removeEmptyRows(data[0]);\n    let conditionsDef = data.length >= 2 ? this.removeEmptyRows(data[1]) : [];\n    fieldsDef.shift();\n    conditionsDef.shift();\n    let currentSlide = <Slide>{};\n    let fields = new Map<string, IFormField>();\n    let conditionedFields = new Map<string, { conditions: Array<any>; slideId: number }>();\n    fieldsDef.forEach(row => {\n      if (row[1] && currentSlide.title !== row[1]) {\n        currentSlide = <Slide>{ title: row[1], description: row[2], items: [] };\n        slides.push(currentSlide);\n      }\n      if (currentSlide) {\n        if (row[5]) {\n          let f = this.createField(row, formDynamicBuilder);\n          if (row[28]) {\n            let conditionsTitles = this._stringToArray(row[28]);\n            if (conditionsTitles.length > 0) {\n              let cara = {\n                conditions: conditionsTitles,\n                slideId: slides.length - 1\n              };\n              conditionedFields.set(f.name, cara);\n            }\n          }\n          currentSlide.items.push(f);\n          fields.set(row[0], f);\n        }\n      }\n    });\n    conditionsDef.forEach(condition => {\n      let c = this.createCondition(condition, fields);\n      if (this.conditionsService.isValid(c)) {\n        conditions.push(c);\n      } else {\n        convertError.push('CONVERTCONDITIONERROR : ' + condition[0]);\n      }\n    });\n    conditionedFields.forEach((value, key) => {\n      let i = findIndex(slides[value.slideId].items, (f: IFormField) => f.name === key);\n      if (i >= 0) {\n        slides[value.slideId].items[i].condition = [];\n        value.conditions.forEach(title => {\n          let cond = find(conditions, c => c.title === title);\n          if (cond) {\n            (<Array<Condition>>slides[value.slideId].items[i].condition).push(cond);\n          }\n        });\n      }\n    });\n    return { slides: slides, conditions: conditions, errors: convertError };\n  }\n\n  private createField(row: Array<any>, formDynamicBuilder: FormDynamicBuilder): IFormField {\n    let field = <IFormField>{\n      name: row[0] || formDynamicBuilder.generateFieldName(),\n      type: <string>row[5].toLowerCase(),\n      title: row[3],\n      description: row[4],\n      allowComments: this.isTrue(row[6]),\n      required: this.isTrue(row[7]),\n      values: this._stringToArray(row[8]),\n      allowLibrary: this.isTrue(row[9]),\n      min: row[10],\n      max: row[11],\n      step: row[12],\n      minDate: row[13],\n      maxDate: row[14],\n      hideMobile: this.isTrue(row[15]),\n      allowHistory: this.isTrue(row[16]),\n      showOnLocation: this.isTrue(row[17]),\n      allowAnnotate: this.isTrue(row[18]),\n      showUsers: this.isTrue(row[19]),\n      showService: this.isTrue(row[20]),\n      allowOther: this.isTrue(row[21]),\n      radius: row[22],\n      multiple: this.isTrue(row[23]),\n      clearable: this.isTrue(row[24]),\n      duration: row[25],\n      anwser: this._stringToArray(row[26]),\n      explanation: row[27],\n      allowTime: this.isTrue(row[29])\n    };\n    if (row[30] && field.type === 'image') {\n      field.image = { _downloadURL: row[30] };\n    }\n    if (field.type === 'information') {\n      field.value = field.description;\n      delete field.description;\n    }\n    return field;\n  }\n\n  private createCondition(row: Array<any>, fields: Map<string, IFormField>) {\n    let c = <Condition>{\n      title: row[0]\n    };\n    c.operator = this.conditionsService.convertOperator(row[3]);\n    c.type = this.conditionsService.convertType(row[1]);\n    if (row[5]) {\n      c._id = row[5];\n    }\n    if (c.type === 'field') {\n      c.field = this.conditionsService.convertField(fields.get(row[2]));\n      if (!c.field) {\n        return;\n      }\n      if (indexOf(SIMPLE_FIELD_TYPES, c.field.type) >= 0) {\n        c.value = row[4];\n      } else {\n        c.values = this._stringToArray(row[4]);\n      }\n    } else if (c.type === 'tags') {\n      c.tags = this._stringToArray(row[4]);\n    } else if (c.type === 'groups') {\n      c.group = this._stringToArray(row[4]);\n    } else {\n      return;\n    }\n    return c;\n  }\n\n  private removeEmptyRows(array: Array<Array<string>>): Array<Array<string>> {\n    return filter(array, row => {\n      return filter(row, v => v && !!v.replace(/\\s/g, '')).length > 0;\n    });\n  }\n\n  private _stringToArray = function(str) {\n    let array = str ? trimEnd(trimStart(str, '['), ']').split(',') : [];\n    for (let i = 0; i < array.length; i++) {\n      if (/^\\s/.test(array[i])) {\n        array[i] = array[i].substring(1);\n      }\n    }\n    return array;\n  };\n\n  private isTrue(str) {\n    return str === 'TRUE' || str === 'VRAI' || str === 'true' || str === 'vrai';\n  }\n}\n","import { DecimalPipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\n\nimport { Colors, CoreConfig, LocalForageService, Utils } from '@shared/common';\nimport { Broker, Requestor, ChartDefinition, Dashboard, DashboardCore, BaseKpi, CACHE_KEYS, Cache } from '@shared/data-core';\nimport { Filters, toDate, dateFormat, dateDiff, toMinutes, dateAdd, endOf, day, daysInMonth, getDateOfMonth, HighchartsOptions, getUUID } from '@shared/stencil';\nimport { CellRenderer } from '../../services/cell-renderer/cell-renderer.service';\n//import { DeltaRendererComponent } from '../../renderers/delta/delta-renderer.component';\nimport { Translate } from '@shared/translate';\n\nimport { assign, cloneDeep, defaultsDeep, find, findIndex, forEach, isArray, isNumber, isObject, isString, keys, last, map as _map, max, merge, min, sortBy, sum, sumBy, pick } from 'lodash-es';\n\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { catchError, mergeMap, map } from 'rxjs/operators';\n\nexport interface ChartCache {\n  date: Date;\n  data: any;\n}\n\n@Injectable()\nexport class Chart {\n  public PDF_ROW_WIDTH = 1200;\n  public PDF_ROW_HEIGHT = 800;\n\n  protected palette0 = ['#04CC99', '#FF625F', '#1FB6FF', '#FC459E', '#FF6402', '#FED05B', '#ADADAD', '#845CFF', '#FC459E', '#000000', '#D0D0D0', '#ADADAD'];\n  // ['#3e4666', '#39a0ed', '#36f1cd', '#b0bcff', '#ffe377', '#EDB4CA'];\n  protected palette1 = ['#04CC99', '#FF625F', , '#1FB6FF', '#FC459E', '#FF6402', '#FED05B', '#ADADAD', '#845CFF', '#FC459E', '#000000', '#D0D0D0', '#ADADAD'];\n  // ['#877def', '#7ddf64', '#f76c6c', '#5bc0eb', '#fde74c', '#404e4d'];\n  protected palette2 = ['#04CC99', '#FF625F', , '#1FB6FF', '#FC459E', '#FF6402', '#FED05B', '#ADADAD', '#845CFF', '#FC459E', '#000000', '#D0D0D0', '#ADADAD'];\n  // ['#51E3C2', '#4A90E2', '#F9BB4E', '#F76C6C', '#1D977E', '#4ED2B8', '#54CBE1', '#6F87D5', '#C06ADC', '#645098'];\n  protected palette3 = ['#04CC99', '#FF625F', , '#1FB6FF', '#FC459E', '#FF6402', '#FED05B', '#ADADAD', '#845CFF', '#FC459E', '#000000', '#D0D0D0', '#ADADAD'];\n  // ['#7F8FA4', '#f76c6c', '#32d2b6', '#5bc0eb', '#fdef57', '#877def'];\n  protected paletteBoost = ['#F46885', '#FCAE49', '#1FB6FF', '#FC459E', '#FF6402', '#FED05B', '#ADADAD', '#845CFF', '#FC459E', '#000000', '#D0D0D0', '#ADADAD'];\n\n  protected textStyle = {\n    fontFamily: 'Lato',\n    color: Colors.black,\n    fontWeight: '300',\n    fontSize: '13px',\n    whiteSpace: 'normal',\n    textShadow: false\n  };\n  protected lineColor = '#E1E8EE';\n  protected gridLineColor = '#F4F8FC';\n  protected decimalPipe: DecimalPipe;\n\n  constructor(protected broker: Broker, protected dashboard: DashboardCore, protected rq: Requestor, protected translate: Translate, protected localForage: LocalForageService, protected coreConfig: CoreConfig, protected utils: Utils, protected cache: Cache) {\n    this.decimalPipe = new DecimalPipe(this.translate.getCurrentAngularLocale());\n  }\n\n  getFilenameSuffix(): string {\n    return this.rq.getFilenameSuffix();\n  }\n\n  encodeChart(chart: ChartDefinition) {\n    if (chart.aggregateOptions && !isString(chart.aggregateOptions)) {\n      chart.aggregateOptions = <any>JSON.stringify(chart.aggregateOptions);\n    }\n    if (chart.kpiFormValues && chart.kpiFormValues.campaigns) {\n      chart.kpiFormValues.campaigns = chart.kpiFormValues.campaigns.map(c => pick(c, ['title', '_id', 'scoring']));\n    }\n    if (chart.kpiFormValues && chart.kpiFormValues.missionscores) {\n      if (chart.kpiFormValues.missionscores.selectedDescription) {\n        chart.kpiFormValues.missionscores.selectedDescription = pick(chart.kpiFormValues.missionscores.selectedDescription, ['title', '_id', 'scoring']);\n      }\n      if (chart.kpiFormValues.missionscores.scores) {\n        let score = chart.kpiFormValues.missionscores.scores;\n        if (isArray(score) && (<any>score).length > 0) {\n          score = score[0];\n        }\n        chart.kpiFormValues.missionscores.scores = pick(score, ['title', 'isActive']);\n      }\n    }\n  }\n\n  decodeChart(chart: ChartDefinition) {\n    if (chart.aggregateOptions && isString(chart.aggregateOptions)) {\n      chart.aggregateOptions = <any>JSON.parse(<any>chart.aggregateOptions);\n    }\n    if ((<any>chart).aggregateData && isString((<any>chart).aggregateData)) {\n      (<any>chart).aggregateData = <any>JSON.parse((<any>chart).aggregateData);\n    }\n    if (!chart._id) {\n      chart._id = getUUID();\n    }\n  }\n\n  encode(entity: Dashboard) {\n    if (!entity) {\n      return entity;\n    }\n    let newentity: Dashboard = cloneDeep(entity);\n    forEach(newentity.tabs, tab => {\n      if (tab && tab.items) {\n        forEach(tab.items, item => {\n          if (item && item.definition) {\n            this.encodeChart(item.definition);\n          }\n        });\n      }\n    });\n\n    if (newentity.tabs && newentity.tabs.length > 0 && newentity.tabs[0].items && newentity.tabs[0].items.length > 0 && newentity.tabs[0].items[0].definition && newentity.tabs[0].items[0].definition.kpiType) {\n      newentity.icon = this.getKpiIcon(newentity.tabs[0].items[0].definition.kpiType);\n    }\n    return newentity;\n  }\n\n  decode(entity: Dashboard) {\n    forEach(entity.tabs, tab => {\n      forEach(tab.items, item => {\n        if (item && item.definition) {\n          this.decodeChart(item.definition);\n        }\n      });\n    });\n    return entity;\n  }\n\n  clone(cd: ChartDefinition) {\n    let newCd = cloneDeep(cd);\n    newCd._id = getUUID();\n    return newCd;\n  }\n\n  saveDashboard(entity: Dashboard) {\n    let newEntity = this.encode(entity);\n    return this.broker.upsert('dashboards', newEntity).pipe(map(retVal => this.decode(retVal)));\n  }\n\n  deleteDashboard(id: string) {\n    return this.broker.delete('dashboards', id);\n  }\n\n  getData(cd: ChartDefinition, component: any, forceRefresh = false, start = 0, showPreviousYear = false) {\n    return this.getDataObservable(cd, component, forceRefresh, start, showPreviousYear).pipe(\n      catchError(err => {\n        return throwError('error');\n      })\n    );\n  }\n\n  getAggregateQuery(cd: ChartDefinition, collectionName: string, filters?: Filters, options?: Array<any>, forceRefresh = false) {\n    return from(this.getDataFromCache(cd)).pipe(\n      mergeMap(data => {\n        return data && forceRefresh !== true ? of(data) : this.broker.aggregateQuery(collectionName, filters, options);\n      }),\n      mergeMap((data: any) => {\n        return from(this.addDataToCache(cd, data));\n      })\n    );\n  }\n\n  getChartCache(id: string) {\n    return this.cache.get(CACHE_KEYS.chart, id).toPromise();\n    //return this.localForage.get<ChartCache>(CACHE_KEYS.chart + '.' + id);\n  }\n\n  setChartCache(id: string, cache) {\n    return this.cache.add(CACHE_KEYS.chart, id, cache);\n    //return this.localForage.set<ChartCache>(CACHE_KEYS.chart + '.' + id, cache);\n  }\n\n  clearChartCache(id: string) {\n    return this.cache.remove(CACHE_KEYS.chart, id);\n    //return this.localForage.remove(CACHE_KEYS.chart + '.' + id);\n  }\n\n  getDataFromCache(cd: ChartDefinition) {\n    if (cd._id) {\n      return this.getChartCache(cd._id).then(cache => {\n        if (cache) {\n          if (toMinutes(dateDiff(new Date(), toDate(cache.date))) < 15) {\n            return cache.data;\n          }\n        }\n        return null;\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  addDataToCache(cd: ChartDefinition, data) {\n    if (cd._id) {\n      return this.getChartCache(cd._id)\n        .then(cache => {\n          cache = { date: new Date(), data: cloneDeep(data) };\n          return this.setChartCache(cd._id, cache);\n        })\n        .then(() => {\n          return data;\n        });\n    } else {\n      return Promise.resolve(data);\n    }\n  }\n\n  getKpiData(cd: ChartDefinition, component, forceRefresh = false, showPreviousYear = false) {\n    let type: any = this.getKpiClass(cd.kpiType);\n    type.getChartDefinition(cd.kpiFormValues, cd, this.translate);\n    if (cd && cd.kpiType === 'ChartIOKpi') {\n      return of([]);\n    }\n\n    let aggregate = type.getAggregate(cd.kpiFormValues, this.translate, showPreviousYear);\n\n    if (cd.kpiFormValues.pointPadding) {\n      cd.pointPadding = cd.kpiFormValues.pointPadding;\n    }\n    if (cd.kpiFormValues.numberPrecision) {\n      cd.numberPrecision = cd.kpiFormValues.numberPrecision;\n    }\n    if (aggregate.mapTransform && aggregate.mapTransformAsync) {\n      return this.getAggregateQuery(cd, aggregate.collectionName, aggregate.filters, aggregate.aggregateOptions, forceRefresh).pipe(\n        mergeMap(res => {\n          return aggregate.mapTransform(res, cd, this.broker, component);\n        })\n      );\n    } else {\n      return this.getAggregateQuery(cd, aggregate.collectionName, aggregate.filters, aggregate.aggregateOptions, forceRefresh).pipe(\n        map(res => {\n          return aggregate.mapTransform ? aggregate.mapTransform(res, cd, this.broker, component) : res;\n        })\n      );\n    }\n  }\n\n  getKpiClass(type: string): any {\n    return null;\n  }\n\n  getKpiIcon(type: string) {\n    return null;\n  }\n\n  getKpiIconByType(type: string) {\n    return null;\n  }\n\n  getDataObservable(cd: ChartDefinition, component: any, forceRefresh = false, start = 0, showPreviousYear = false): Observable<any> {\n    this.decodeChart(cd);\n    if (cd.data) {\n      return of(cd.data);\n    } else if (cd.kpi) {\n      return this.getKpiData(cd, component, forceRefresh, showPreviousYear);\n    } else {\n      if (cd.groupByDate) {\n        this.dashboard.setTimescale(cd.filters, cd.timescale, cd.dateField || 'finishedDate', cd.endDate);\n        let format = BaseKpi.getDateFormat(cd.dateGrouping);\n        if (cd.aggregateOptions && cd.aggregateOptions.length > 0) {\n          return this.getAggregateQuery(cd, cd.collectionName, cd.filters, cd.aggregateOptions, forceRefresh).pipe(\n            map(res => {\n              return cd.mapTransform ? cd.mapTransform(res, cd, this.broker, component) : res;\n            })\n          );\n        } else {\n          let aggregateOptions = [];\n          if (cd.groupByCampaign) {\n            aggregateOptions.push({\n              $project: {\n                _id: 1,\n                title: '$title',\n                date: {\n                  $dateToString: { format: format, date: '$' + (cd.dateField || 'finishedDate') }\n                }\n              }\n            });\n            aggregateOptions.push({\n              $group: {\n                _id: { date: '$date', title: '$title' },\n                value: { $sum: 1 },\n                keys: { $addToSet: '$_id' }\n              }\n            });\n          } else {\n            let match: any = {};\n            match[cd.dateField || 'finishedDate'] = { $type: 9 };\n            aggregateOptions.push({ $match: match });\n            aggregateOptions.push({\n              $group: {\n                _id: {\n                  $dateToString: { format: format, date: '$' + (cd.dateField || 'finishedDate') }\n                },\n                value: { $sum: 1 },\n                keys: { $addToSet: '$_id' }\n              }\n            });\n          }\n          return this.getAggregateQuery(cd, cd.collectionName, cd.filters, aggregateOptions, forceRefresh);\n        }\n      } else {\n        if ((cd.aggregateOptions && cd.aggregateOptions.length > 0) || (cd.filters && cd.filters.length > 0)) {\n          return this.getAggregateQuery(cd, cd.collectionName, cd.filters, cd.aggregateOptions, forceRefresh).pipe(\n            map(res => {\n              return cd.mapTransform ? cd.mapTransform(res, cd, this.broker, component) : res;\n            })\n          );\n        } else {\n          return of([]);\n        }\n      }\n    }\n  }\n\n  getChartConfig(cd: ChartDefinition, data): any {\n    return this.getHCChartConfig(cd, data);\n  }\n\n  getGridConfig(cd: ChartDefinition, data): any {\n    if (cd.kpiType === 'CampaignsPivotTableKpi') {\n      return {\n        columnDefs: cd.kpiColumns,\n        rowData: data\n      };\n    }\n    let config = this.getHCChartConfig(cd, data);\n    let columnDefs: Array<any> = [\n      {\n        headerName: cd.groupByDate ? this.translate.get('DATE') : this.translate.get('CATEGORY'),\n        field: 'key'\n      }\n    ];\n    if (cd.groupByDate) {\n      columnDefs[0].comparator = 'dateComparator';\n    }\n    let rows = new Map<string, Object>();\n\n    config.series.forEach((s, i) => {\n      if (s.name === 'Regression') {\n        return;\n      }\n      columnDefs.push(<any>{\n        headerName: s.name,\n        field: 'serie' + i,\n        headerTooltip: s.name,\n        minWidth: 40\n      });\n      if (cd.type === 'scatter') {\n        columnDefs.push(<any>{\n          headerName: s.name,\n          field: 'seriex' + i,\n          headerTooltip: s.name + ': x',\n          minWidth: 40\n        });\n      }\n      if (cd.showDelta) {\n        last(columnDefs).cellRenderer = 'deltaRenderer'; //DeltaRendererComponent.renderer;\n      }\n      forEach((s as any).data, (d: any, index) => {\n        let key, value, x;\n        if (isArray(d)) {\n          key = dateFormat(toDate(d[0]), 'L');\n          value = d[1];\n        } else if (isObject(d) && d.name) {\n          key = d.name;\n          value = d.y;\n          if (cd.type === 'scatter') {\n            x = d.x;\n          }\n        } else if (isObject(d) && d.x) {\n          key = dateFormat(toDate(d.x), 'L');\n          value = d.y;\n        } else if (config.xAxis && (<any>config.xAxis).categories && (<any>config.xAxis).categories.length > 0) {\n          key = (<any>config.xAxis).categories[index];\n          value = d;\n        }\n        if (key) {\n          let row: any = rows.get(key) || { key: key };\n          row['serie' + i] = isNumber(value) ? this.decimalPipe.transform(value, this.getNumberFormat(cd)) : value && value.toString ? value.toString() : value;\n          if (cd.type === 'scatter') {\n            row['seriex' + i] = x;\n          }\n          rows.set(key, row);\n        }\n      });\n    });\n    return {\n      columnDefs: columnDefs,\n      rowData: Array.from(rows.values())\n    };\n  }\n\n  getMapConfig(cd: ChartDefinition, data: Array<any>) {\n    return null;\n  }\n\n  getMicroConfig(cd: ChartDefinition, data: any) {\n    let value;\n    let delta;\n    if (isArray(data)) {\n      value = Math.round(data && data.length > 0 ? (<any>data)[0].value : 0);\n    } else {\n      value = data.value;\n      delta = data.delta;\n    }\n    return {\n      title: cd.title,\n      value: value,\n      delta: delta,\n      info: cd.microInfo\n    };\n  }\n\n  getPivotTableConfig(cd: ChartDefinition, data: any) {\n    let gridConfig = this.getGridConfig(cd, data);\n    let gridOptions = {\n      rowHeight: 52,\n      rowStyle: { 'line-height': '32px' },\n      headerHeight: 40,\n      defaultColDef: { sortable: true, resizable: true },\n      //dateComponent: null,\n      suppressTouch: true\n    };\n\n    assign(gridOptions, {\n      filter: true,\n      //showToolPanel: false,\n      pivotPanelShow: false,\n      //toolPanelSuppressSideButtons: true,\n      rowSelection: 'single',\n      columnDefs: gridConfig.columnDefs,\n      rowData: gridConfig.rowData\n    });\n\n    //row sorting\n    if (cd.kpiType === 'CampaignsPivotTableKpi') {\n      assign(gridOptions, CellRenderer.getPivotConfig(this.translate));\n      assign(gridOptions, {\n        pivotMode: cd.gridPivotMode //,\n        //onModelUpdated: (event) => this.onGridModelUpdated(event)\n      });\n      gridConfig.rows = this.campaignsPivotTableKpiSortRows(cd, gridConfig.rows);\n      //     if (!this.showFullscreen) {\n      //         gridOptions.columnDefs.unshift({\n      //             headerName: this.translate.get('VIEW'),\n      //             colId: 'viewButton',\n      //             groupId: 'view',\n      //             width: 70,\n      //             headerClass: 'centered',\n      //             cellClass: 'overflow',\n      //             suppressExport: true,\n      //             sortable: false,\n      //             suppressFilter: true,\n      //             pinned: 'left',\n      //             menuTabs: ['filterMenuTab'],\n      //             context: {\n      //                 icon: 'yo-eye',\n      //                 color: 'dark',\n      //                 text: this.translate.get('VIEW')\n      //             },\n      //             cellRendererFramework: ButtonRendererComponent,\n      //             onCellClicked: (params) => {\n      //                 let keys;\n      //                 if (params.data && params.data._id) {\n      //                     keys = [params.data._id];\n      //                 } else if (params && params.node && params.node.allLeafChildren) {\n      //                     keys = params.node.allLeafChildren.map(c => c.data._id);\n      //                 }\n\n      //                 if (keys && keys.length > 0) {\n      //                     if (this.coreConfig.isWeb()) {\n      //                         this.doubleClick.emit(keys);\n      //                     } else {\n      //                         this.clicked.emit({ keys });\n      //                     }\n      //                 }\n      //                 return false;\n      //             }\n      //         });\n      //     }\n      //\n    }\n    return gridOptions;\n  }\n\n  protected campaignsPivotTableKpiSortRows(cd: ChartDefinition, rows: Array<any>) {\n    let sorts = [];\n    for (let i = 1; i <= 5; i++) {\n      let columnName = 'tagGroup' + i;\n      if (cd.kpiFormValues[columnName]) {\n        sorts.push(columnName);\n      }\n    }\n    if (sorts.length > 0) {\n      return sortBy(rows, sorts);\n    } else {\n      return rows;\n    }\n  }\n\n  getCalendarData(dates: any = null, data: Array<any>): any {\n    if (dates === null) {\n      return {};\n    }\n    // need to get dates from the component\n    let timeSpan = dates.amount - 1;\n    let timeScale = dates.timescale;\n    let outputData = [];\n    let xAxis = [];\n    if (data && data.length > 0) {\n      let currentDate = toDate(data[0]._id);\n      let stopDate = endOf(dateAdd(toDate(data[0]._id), timeScale, timeSpan), timeScale);\n\n      let weekNumber = 0;\n      let dayToY = [0, 6, 5, 4, 3, 2, 1]; // Monday is 6\n      while (currentDate <= stopDate) {\n        let stringDate: string = dateFormat(toDate(currentDate), 'YYYY-MM-dd');\n        let retVal: any = {\n          _id: stringDate,\n          x: weekNumber,\n          y: dayToY[day(toDate(currentDate))],\n          value: 0,\n          keys: null,\n          date: stringDate\n        };\n        let v: any = find(data, (s: any) => s._id === stringDate);\n        if (v) {\n          retVal.keys = v.keys;\n          retVal.value = v.value;\n        }\n        outputData.push(retVal);\n\n        // Beginning of month\n        if (getDateOfMonth(toDate(currentDate)) === 1) {\n          xAxis.push(dateFormat(toDate(currentDate), 'MMM'));\n        }\n        // End of month\n        if (getDateOfMonth(toDate(currentDate)) === daysInMonth(toDate(currentDate))) {\n          weekNumber++; // skip one column\n          xAxis.push('');\n          weekNumber++; // start on a new column\n          // End of week\n        } else {\n          if (retVal.y <= 0) {\n            // end of week\n            weekNumber++;\n            xAxis.push('');\n          }\n        }\n        currentDate = dateAdd(toDate(currentDate), 'days', 1);\n      }\n    }\n    return { data: outputData, xAxis };\n  }\n\n  getCalendarConfig(cd: ChartDefinition, data: Array<any>): any {\n    let config = this.setHCChartType(cd);\n    let chartData = this.getCalendarData(cd.kpiFormValues.dates, data);\n    config.chart.marginTop = -8;\n    config.chart.marginLeft = 10;\n    config.chart.marginBottom = 0;\n    config.chart.spacing = [0, -2, 10, 0];\n    config.legend = Object.assign(config.legend, {\n      enabled: true,\n      align: 'right',\n      layout: 'vertical',\n      margin: 0,\n      verticalAlign: 'top',\n      symbolHeight: 100,\n      itemMarginTop: 20\n    });\n    config.yAxis = <any>{\n      visible: false,\n      min: 0,\n      max: 6,\n      labels: {\n        fontSize: '13px'\n      }\n    };\n    config.xAxis = <any>{\n      visible: true,\n      categories: chartData.xAxis,\n      opposite: true,\n      lineWidth: 0,\n      tickWidth: 0,\n      min: 0,\n      max: 17,\n      labels: {\n        align: 'center',\n        autoRotation: false,\n        y: 20,\n        fontSize: '13px'\n      }\n    };\n    config.plotOptions.series = Object.assign(config.plotOptions.series, {\n      borderColor: '#FFFFFF',\n      borderRadius: 6,\n      borderWidth: 4,\n      maxPointWidth: 15,\n      pointWidth: 15\n    });\n    config.colorAxis = {\n      min: 0,\n      stops: [[0, '#f1f1f1'], [0.001, '#c6e6df'], [0.2, '#a9ded3'], [0.4, '#8cd6c8'], [0.6, '#6fcebc'], [0.8, '#44C3AA']]\n    };\n    config.tooltip.formatter = function() {\n      return dateFormat(toDate((<any>this.point).date), 'MMM DD, YYYY dddd') + '<br><br>' + (<any>this.point).value + ' users';\n    };\n    config.series = <any>[{ data: chartData.data }];\n    return config;\n  }\n\n  getHCChartConfig(cd: ChartDefinition, data: any): HighchartsOptions {\n    this.textStyle = {\n      fontFamily: 'Lato',\n      color: Colors.black,\n      fontWeight: '300',\n      fontSize: '13px',\n      whiteSpace: 'normal',\n      textShadow: false\n    };\n    let config = this.setHCChartType(cd);\n    let originalData = data;\n    if (!isArray(data)) {\n      return;\n    }\n    if (cd.groupByDate && cd.type !== 'pie') {\n      this.setHCUseDates(config);\n      if (cd.groupByCampaign) {\n        /* beautify ignore:start */\n        let series = new Map<string, any>(); //HighchartsSeriesOptions\n        /* beautify ignore:end */\n        data.forEach((d: any) => {\n          let s: any = series.get(d._id.title) || { name: d._id.title, data: [] };\n          let date = BaseKpi.fixDates(cd, d._id.date);\n          s.data.push({ x: date, y: d.value, color: d.color, keys: d.keys });\n          series.set(d._id.title, s);\n        });\n        config.series = Array.from(series.values());\n        config.series.forEach((s: any) => (s.data = sortBy(<any>s.data, (d: any) => d.x)));\n      } else {\n        config.series = <any>[\n          {\n            name: cd.title,\n            data: sortBy(\n              data.map((d: any) => {\n                let date = BaseKpi.fixDates(cd, d._id);\n                return { x: date, y: d.value, color: d.color, keys: d.keys };\n              }),\n              d => d.x\n            )\n          }\n        ];\n      }\n    } else if (cd.type === 'treemap') {\n      if (isArray(data)) {\n        config.series = <any>[\n          {\n            layoutAlgorithm: 'squarified',\n            data: _map(data, (d: any) => ({ name: d._id, value: d.value, colorValue: d.value }))\n          }\n        ];\n      }\n    } else if (cd.type === 'scatter') {\n      config.series = <any>[\n        {\n          name: cd.title,\n          data: data\n        }\n      ];\n      //add option to disable regression\n      if (!cd.hideRegression) {\n        this.addCorelationLine(<any>data, config);\n      }\n    } else {\n      let series = new Map<string | number, Object>();\n      let categories = new Set<string>();\n      if (isArray(data) && data.length > 0 && ((<any>data[0]).serie || (<any>data[0]).serie === 0)) {\n        forEach(data, (d: any) => {\n          let serie = series.get(d.serie) || {};\n          serie[d._id] = { y: d.value, keys: d.keys };\n          categories.add(d._id);\n          series.set(d.serie, serie);\n        });\n        config.xAxis = Object.assign(config.xAxis || {}, {\n          categories: sortBy(Array.from(categories.values()), x => x),\n          crosshair: true\n        });\n      } else {\n        if (isArray(data)) {\n          data = (<Array<{ _id: string; y: number; keys?: Array<string> }>>data).reduce((acc, memo: any) => {\n            acc[memo._id] = { y: memo.value, keys: memo.keys };\n            return acc;\n          }, {});\n        } else {\n          delete (<any>data).value;\n        }\n        config.xAxis = Object.assign(config.xAxis || {}, {\n          categories: _map(data, function(v, l: string) {\n            return l;\n          }),\n          crosshair: true\n        });\n        series.set(cd.title, data);\n      }\n      config.series = [];\n      let width = 100 / series.size;\n      series.forEach((serie: any, name) => {\n        let index = config.series.length + 1;\n        //fill in missing data\n        if (config.xAxis && (<any>config.xAxis).categories) {\n          (<any>config.xAxis).categories.forEach(c => {\n            if (!serie[c]) {\n              serie[c] = null;\n            }\n          });\n        }\n\n        config.series.push(<any>{\n          name: name,\n          size: (width * 0.7).toString() + '%',\n          center: [(width * index - width / 2).toString() + '%', null],\n          data:\n            cd.type === 'radar'\n              ? _map(<Array<string>>(<any>config.xAxis).categories, c => {\n                  return serie[c];\n                })\n              : sortBy(\n                  _map(<any>serie, (v, l) => {\n                    return assign({ name: l }, v);\n                  }),\n                  d => {\n                    //we have to map to string because the object keys we re getting back are string\n                    return (<any>config.xAxis).categories.map(x => x.toString()).indexOf(d.name);\n                  }\n                )\n        });\n      });\n    }\n    config.series.forEach((s: any) => {\n      originalData.forEach(o => {\n        if (s.name === o.serie || s.name === o._id) {\n          s.color = o.color;\n          if (o.textColor) {\n            s.dataLabels = s.dataLabels || {};\n            s.dataLabels.color = o.textColor;\n          }\n          s.index = s.index || 0;\n          s.index = -o.index;\n          s.legendIndex = o.index;\n        }\n        if (cd.colors) {\n          keys(cd.colors).forEach(k => {\n            if (s.name && s.name.toString() === k.toString()) {\n              s.color = cd.colors[k];\n            }\n          });\n        }\n        if (isArray(s.data)) {\n          (<[any]>s.data).forEach((d, i) => {\n            if (d && (d.name === o.serie || (!o.serie && d.name === o._id)) && !d.color) {\n              d.color = o.color;\n              d.index = d.index || 0;\n              d.index = -o.index;\n              d.legendIndex = o.index;\n            }\n            if (cd.colors) {\n              keys(cd.colors).forEach(k => {\n                if (d.name && d.name.toString() === k.toString()) {\n                  d.color = cd.colors[k];\n                }\n              });\n            }\n          });\n        }\n      });\n      if (cd.showCumulate) {\n        //let serieData = cloneDeep((<any>s.data));\n        for (let i = 1; i < s.data.length; i++) {\n          (<any>s.data)[i].y += (<any>s.data[i - 1]).y || 0;\n        }\n      }\n      if (s.name && s.name.indexOf('N-1') >= 0) {\n        s.color = Colors.stable;\n      }\n    });\n    this.applyAreaSplineGradients(cd, config);\n    this.applySubtitleSum(config);\n    this.applyLegendState(config, cd);\n    return config;\n  }\n\n  isChartEmpty(config: HighchartsOptions) {\n    if (!config.series || (config.series.length === 1 && (!(<any>config.series[0]).data || (<any>config.series[0]).data.length === 0))) {\n      return true;\n    }\n    return false;\n  }\n\n  getChartEmptyImage(config: HighchartsOptions) {\n    let emptyImage: string = './images/empty-states/speedometer.svg';\n    if (config && config.chart && config.chart.type) {\n      switch (config.chart.type as any) {\n        case 'line':\n          emptyImage = '../kpi/lines.svg';\n          break;\n        case 'spline':\n          emptyImage = '../kpi/splines.svg';\n          break;\n        case 'area':\n          emptyImage = '../kpi/splineroyal.svg';\n          break;\n        case 'areaspline':\n          emptyImage = '../kpi/splineroyal.svg';\n          break;\n        case 'column':\n          emptyImage = '../kpi/column.svg';\n          break;\n        case 'bar':\n          emptyImage = '../kpi/column.svg';\n          break;\n        case 'radar':\n        case 'treemap':\n        case 'pie':\n        case 'doughnut':\n        default:\n          emptyImage = '../kpi/pie.svg';\n          break;\n      }\n    }\n    return emptyImage;\n  }\n\n  getURL(svg, width, height, options?) {\n    let type = 'image/png';\n    let config = {\n      filename: options ? options.filename : null,\n      type: type,\n      async: true,\n      scale: 2,\n      width: width * 2,\n      height: height * 2,\n      svg: svg\n    };\n    let exportUrl = 'https://export.highcharts.com/';\n    return this.rq.postMultiPart(exportUrl, config).pipe(\n      mergeMap(res => {\n        let url = exportUrl + res;\n        return this.rq.getBinaryContent(url);\n      }),\n      mergeMap(arrayBuffer => {\n        let blob = new Blob([arrayBuffer], { type });\n        return from(this.broker.upload(blob));\n      }),\n      map(url => {\n        return url;\n      })\n    );\n  }\n\n  formatSVGs(svgs: Array<string>, maxHeight: number | string, pdfRowWidth: number = 1200) {\n    svgs = [].concat(svgs);\n    let svg;\n    if (svgs.length === 1) {\n      svg = svgs[0];\n    } else {\n      svg = '<svg height=\"' + maxHeight + '\" width=\"' + pdfRowWidth + '\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">';\n      svg += svgs.join('');\n      svg += '</svg>';\n    }\n    return svg\n      .replace(/visby/gi, 'Lato')\n      .replace(/text-shadow/gi, 'ttext-shadow')\n      .replace(/class=\"highcharts-text-outline\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2px\"/gi, 'class=\"highcharts-text-outline\" fill=\"#7F8FA4\" stroke=\"#7F8FA4\" stroke-width=\"1px\"');\n  }\n\n  exportAll(options, svgs: Array<string>, maxHeight, pdfRowWidth: number = 1200) {\n    let svg = this.formatSVGs(svgs, maxHeight);\n    options = merge(\n      {\n        type: 'image/png',\n        url: 'https://export.highcharts.com/',\n        printMaxWidth: 780,\n        scale: 2,\n        buttons: {\n          contextButton: {\n            className: 'highcharts-contextbutton',\n            menuClassName: 'highcharts-contextmenu',\n            symbol: 'menu',\n            _titleKey: 'contextButtonTitle',\n            menuItems: [{ textKey: 'printChart' }, { separator: true }, { textKey: 'downloadPNG' }, { textKey: 'downloadJPEG' }, { textKey: 'downloadSVG' }, { textKey: 'downloadPDF' }]\n          }\n        },\n        libURL: 'https://code.highcharts.com/5.0.10/lib/'\n      },\n      options\n    );\n    this.rq\n      .postRaw(\n        'https://export.highcharts.com',\n        {\n          filename: options.filename || 'chart',\n          type: options.type,\n          scale: 1,\n          width: pdfRowWidth,\n          //height: this.PDF_ROW_HEIGHT,\n          svg: svg\n        },\n        true\n      )\n      .subscribe(res => {\n        if (res && res.body) {\n          this.rq.saveArrayBuffer(res.body, (options.filename || 'chart') + '.pdf');\n        }\n      });\n  }\n\n  getChartIOUrl(dashboardId: string, env?: any) {\n    let url = this.broker.getApiUrl() + 'dashboards/getToken';\n    return this.rq.post(url, { dashboardId, env: env || {} }).pipe(\n      map(retVal => {\n        return retVal;\n      })\n    );\n  }\n\n  getTableauUrl(dashboardId: string, env?: any) {\n    let url = this.broker.getApiUrl() + 'tableau/getViewUrl';\n    return this.rq.post(url, { path: dashboardId }).pipe(\n      map(retVal => {\n        return retVal;\n      })\n    );\n  }\n\n  protected applyAreaSplineGradients(cd: ChartDefinition, config: HighchartsOptions) {\n    if (config.chart && config.chart.type === 'areaspline') {\n      const palette = this.getPalette(cd);\n      const alpha = 0.15;\n      config.series.forEach((s: any, i) => {\n        const [r, g, b] = palette[i].match(/\\w\\w/g).map(x => parseInt(x, 16));\n        s.fillColor = `rgba(${r},${g},${b},${alpha})`;\n        s.dataLabels = s.dataLabels || {};\n        s.dataLabels.color = Colors.black;\n        //     color: '#04CC99'\n        //     linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n        //     stops: [[0, s.color || palette[i % (palette.length - 1)]], [1, 'rgba(255,255,255,0)']]\n        // };\n      });\n    }\n  }\n\n  protected applySubtitleSum(config: HighchartsOptions) {\n    if (config.chart && config.chart.type === 'areaspline' && config.series.length === 1) {\n      let subtitleSum = sumBy((<any>config.series[0]).data, d => d[1]);\n      if (subtitleSum) {\n        config.subtitle = {\n          text: subtitleSum.toLocaleString(),\n          style: defaultsDeep({ fontSize: '18px', fontWeight: 300, color: Colors.black }, this.textStyle),\n          align: 'right'\n        };\n      }\n    }\n  }\n\n  protected applyLegendState(config: HighchartsOptions, cd: ChartDefinition) {\n    if (cd.chartLegendState) {\n      forEach(config.series, (s: any) => {\n        if (s && s.name === false) {\n          s.visible = false;\n        }\n        if (isArray(s.data)) {\n          (<[any]>s.data).forEach((d, i) => {\n            if (d && cd.chartLegendState[d.name] === false) {\n              d.visible = false;\n            }\n          });\n        }\n      });\n    }\n  }\n\n  protected addCorelationLine(data: Array<{ x: number; y: number }>, config: HighchartsOptions) {\n    let n = data.length;\n    let sx = sum(data.map(d => d.x));\n    let sy = sum(data.map(d => d.y));\n    let sxy = sum(data.map(d => d.x * d.y));\n    let sx2 = sum(data.map(d => d.x * d.x));\n    let a = (n * sxy - sx * sy) / (n * sx2 - sx * sx);\n    let b = (sy - a * sx) / n;\n    let minx = min(data.map(d => d.x));\n    let maxx = max(data.map(d => d.x));\n\n    config.series.push(<any>{\n      type: 'line',\n      name: 'Regression',\n      color: Colors.black,\n      data: [[minx, a * minx + b], [maxx, a * maxx + b]],\n      marker: { enabled: false },\n      enableMouseTracking: false\n    });\n  }\n\n  protected setHCChartType(cd: ChartDefinition): HighchartsOptions {\n    let config: HighchartsOptions = this.getHCDefaultConfig(cd);\n    switch (cd.type) {\n      case 'line':\n        config = merge(config, this.getHCDefaultLine(cd));\n        break;\n      case 'spline':\n        config = merge(config, this.getHCDefaultSpline(cd));\n        break;\n      case 'area':\n        config = merge(config, this.getHCDefaultArea(cd));\n        break;\n      case 'areaspline':\n        config = merge(config, this.getHCDefaultAreaSpline(cd));\n        break;\n      case 'bar':\n        config = merge(config, this.getHCDefaultBar(cd));\n        break;\n      case 'column':\n        config = merge(config, this.getHCDefaultColumn(cd));\n        break;\n      case 'heatmap':\n        config = merge(config, this.getHCDefaultHeatmap(cd));\n        break;\n      case 'doughnut':\n        config = merge(config, this.getHCDefaultDoughnut(cd));\n        break;\n      case 'pie':\n        config = merge(config, this.getHCDefaultPie(cd));\n        break;\n      case 'radar':\n        config = merge(config, this.getHCDefaultRadar(cd));\n        break;\n      case 'treemap':\n        config = merge(config, this.getHCDefaultTreemap(cd));\n        break;\n      case 'scatter':\n        config = merge(config, this.getHCDefaultScatter(cd));\n        break;\n    }\n    config.legend.enabled = cd.showLegend === true;\n    if (cd.marginBottom) {\n      config.chart.marginBottom = cd.marginBottom;\n    }\n    if (cd.legendVerticalAlign) {\n      config.legend.verticalAlign = cd.legendVerticalAlign;\n    }\n    if (cd.legendAlign) {\n      config.legend.align = cd.legendAlign;\n    }\n    if (cd.legendWidth) {\n      config.legend.width = cd.legendWidth;\n      config.legend.itemMarginBottom = 5;\n    }\n    // if (cd.hideAxis) {\n    //     config.chart.marginTop = -5;\n    //     config.chart.marginLeft = -5;\n    //     config.chart.marginRight = -5;\n    //     config.chart.marginBottom = -5;\n    // }\n\n    delete config.chart.margin;\n    delete config.chart.marginTop;\n    delete config.chart.marginLeft;\n    delete config.chart.marginRight;\n    delete config.chart.marginBottom;\n\n    if (cd.showLabelsY === false && config.yAxis && (<any>config.yAxis).labels) {\n      (<any>config.yAxis).labels.enabled = false;\n    }\n    //config.title.text = cd.title;\n    return config;\n  }\n\n  protected setHCUseDates(config: HighchartsOptions) {\n    config.xAxis = config.xAxis || {};\n    config.chart.zoomType = 'x';\n    config.chart.panning = true;\n    config.chart.panKey = 'shift';\n    //delete config.tooltip.formatter;\n    (<any>config.xAxis).type = 'datetime';\n  }\n\n  protected getPalette(cd: ChartDefinition) {\n    if (!cd || !cd.palette || !this[cd.palette]) {\n      return this.palette0;\n    }\n    return this[cd.palette];\n  }\n\n  protected getNumberFormat(cd: ChartDefinition) {\n    if (cd.numberPrecision && cd.numberPrecision >= 1) {\n      return '1.0-' + (Math.floor(cd.numberPrecision) || 0);\n    }\n    return '1.0-0';\n  }\n\n  protected getDateTimeIntervalByGroupingDate(groupingDate: string, groupBySlider: string = '') {\n    const BASE_HOUR_MILLISECOND = 3600 * 1000; // 3 600 000\n    const BASE_DAY_MILLISECOND = 24 * BASE_HOUR_MILLISECOND; // 86 400 000\n    const BASE_WEEK_MILLISECOND = 7 * BASE_DAY_MILLISECOND; // 604 800 000\n    const BASE_MONTH_MILISECOND = 30 * BASE_DAY_MILLISECOND; // 259 200 000\n    const BASE_GROUPING_DATE_MILISECOND = {\n      hour: BASE_HOUR_MILLISECOND,\n      day: BASE_DAY_MILLISECOND,\n      week: BASE_WEEK_MILLISECOND,\n      month: BASE_MONTH_MILISECOND\n    };\n    if (groupBySlider && groupBySlider === '3months') {\n      return BASE_GROUPING_DATE_MILISECOND['month'];\n    }\n    return BASE_GROUPING_DATE_MILISECOND[groupingDate];\n  }\n\n  protected getDateTimeFormat(groupingDate: string, groupBySlider: string = '') {\n    const BASE_GROUPING_DATE_HCFORMAT = {\n      hour: '%H:%M',\n      day: '%e. %b',\n      week: '%e. %b',\n      month: '%b'\n    };\n    if (groupBySlider && groupBySlider === '3months') {\n      return '{value:' + BASE_GROUPING_DATE_HCFORMAT['month'] + '}';\n    }\n    return '{value:' + BASE_GROUPING_DATE_HCFORMAT[groupingDate] + '}';\n  }\n\n  protected getHCDefaultConfig(cd: ChartDefinition): HighchartsOptions {\n    let chartService = this;\n    let groupBySlider = cd.kpiFormValues && cd.kpiFormValues.groupBySlider;\n    let isSalesDatasKpi = cd.kpiType && cd.kpiType === 'SalesDatasKpi';\n    return <any>{\n      title: {\n        text: cd.title,\n        style: defaultsDeep({ fontSize: '14px', fontWeight: 400, color: Colors.black }, this.textStyle),\n        align: 'right'\n      },\n      chart: {\n        style: { fontFamily: 'Lato' },\n        backgroundColor: null,\n        resetZoomButton: {\n          theme: {\n            fill: 'white',\n            stroke: Colors.black,\n            style: this.textStyle\n          }\n        }\n      },\n      xAxis:\n        cd.type === 'radar'\n          ? { labels: { style: defaultsDeep({ color: Colors.black }, this.textStyle) } }\n          : {\n              visible: !cd.hideAxis,\n              lineWidth: cd.hideAxis ? 0 : 1,\n              lineColor: this.lineColor,\n              gridLineWidth: 0, //padding: 0,\n              gridLineColor: this.gridLineColor,\n              labels: {\n                autoRotation: [-90],\n                padding: 10,\n                style: defaultsDeep({ color: Colors.black }, this.textStyle),\n                format: isSalesDatasKpi ? this.getDateTimeFormat(cd.dateGrouping, groupBySlider) : null\n              },\n              max: cd.maxX,\n              tickInterval: isSalesDatasKpi ? this.getDateTimeIntervalByGroupingDate(cd.dateGrouping, groupBySlider) : null\n            },\n      yAxis:\n        cd.type === 'radar'\n          ? { labels: { style: defaultsDeep({ color: Colors.black }, this.textStyle) } }\n          : {\n              visible: !cd.hideAxis,\n              title: '',\n              lineWidth: cd.hideAxis ? 0 : 1,\n              lineColor: this.lineColor,\n              gridLineWidth: cd.hideAxis ? 0 : 1,\n              gridLineColor: this.gridLineColor, //padding: 0,\n              labels: { style: defaultsDeep({ color: Colors.black }, this.textStyle) },\n              endOnTick: false,\n              maxPadding: 0.2,\n              max: cd.maxY\n            },\n      colors: this.getPalette(cd),\n      legend: {\n        enabled: false,\n        itemStyle: defaultsDeep({ fontSize: '14px', lineHeight: '14px', fontWeight: 400, color: Colors.black }, this.textStyle),\n        //ackgroundColor: '#F1F1F1',\n        labelFormatter: function() {\n          let retVal = '';\n\n          if (this.yData && this.yData.length > 0) {\n            let total = 0;\n            if (cd.showCumulate) {\n              total = <any>max(this.yData);\n            } else if (!cd.legendValue || cd.legendValue === 'sum') {\n              total = sum(this.yData);\n            } else if (cd.legendValue === 'avg') {\n              total = sum(this.yData) / this.yData.length;\n            } else if (cd.legendValue === 'min') {\n              total = <any>min(this.yData);\n            } else if (cd.legendValue === 'max') {\n              total = <any>max(this.yData);\n            }\n            retVal = this.name + ': ' + chartService.decimalPipe.transform(total, chartService.getNumberFormat(cd));\n          } else if (this.y) {\n            retVal = this.name + ': ' + chartService.decimalPipe.transform(this.y, chartService.getNumberFormat(cd));\n          } else {\n            retVal = this.name;\n          }\n          if (cd.unit) {\n            retVal += ' ' + cd.unit;\n          }\n          return retVal;\n        }\n      },\n      plotOptions: {\n        series: <any>{\n          turboThreshold: 0,\n          groupPadding: 0,\n          pointPadding: cd.pointPadding || (cd.colorByPoint ? 0 : 0.1),\n          stacking: cd.stacked,\n          allowPointSelect: cd.allowPointSelect || false,\n          marker: {\n            enabled: true,\n            states: { select: { fillColor: Colors.success } }\n          },\n          states: { select: { color: Colors.success } },\n          animation: !this.coreConfig.isWeb(),\n          dataLabels: {\n            color: Colors.black\n          }\n        }\n      },\n      credits: { enabled: false },\n      exporting: { enabled: false },\n      tooltip: {\n        followTouchMove: false,\n        style: defaultsDeep({}, this.textStyle),\n        backgroundColor: Colors.stable,\n        borderRadius: 0,\n        shadow: false,\n        borderColor: this.lineColor,\n        useHTML: false,\n        formatter: function() {\n          let name = (this.series ? this.series.name : '') || '';\n          if (name && name !== ' ') {\n            name += '<br/>';\n          }\n          let t = name + (this.x ? (cd.groupByDate ? dateFormat(toDate(this.x), 'L') : this.x) + ': ' : this.key + ': ' || '') + chartService.decimalPipe.transform(this.y, chartService.getNumberFormat(cd));\n          if (cd.stacked === 'percent') {\n            t += '<br/>' + Math.round(this.percentage) + ' %';\n          } else if (cd.unit) {\n            t += ' ' + cd.unit;\n          }\n          if (cd.type === 'scatter') {\n            t += '<br/>' + this.point.name;\n          }\n          return t;\n        }\n      }\n    };\n  }\n\n  protected getDataLabelFormatter(cd: ChartDefinition) {\n    let chartService = this;\n    return function() {\n      if ((cd.stacked === 'percent' && this.percentage > 0) || (cd.stacked !== 'percent' && Math.abs(this.y) >= 0)) {\n        let t = cd.stacked === 'percent' ? Math.round(this.percentage) + ' %' : chartService.decimalPipe.transform(this.y, chartService.getNumberFormat(cd));\n        if (cd.unit && t) {\n          t += ' ' + cd.unit;\n        }\n        if (!t) {\n          t = '';\n        }\n        if (cd.showDelta && this.series && isArray(this.series.data)) {\n          let index = findIndex(this.series.data, (point: any) => point.x === this.x);\n          if (index > 0 && Math.abs(this.series.data[index - 1].y) > 0) {\n            let delta = Math.round((100 * (this.series.data[index].y - this.series.data[index - 1].y)) / this.series.data[index - 1].y);\n            t += '<br/><g>(' + delta + '%)</g>';\n          }\n        }\n        return t;\n      }\n      return '';\n    };\n  }\n\n  protected useContrast(cd: ChartDefinition) {\n    return true; //Colors.isDarkTheme() ? false : cd && cd.type !== 'spline' && cd.type !== 'areaspline' && cd.type !== 'line' && cd.type !== 'area';\n  }\n\n  protected getDataLabels(cd: ChartDefinition) {\n    return {\n      enabled: cd.showValues !== false,\n      useHTML: false,\n      style: defaultsDeep({ color: Colors.black, textOutline: 'none' }, this.textStyle),\n      formatter: this.getDataLabelFormatter(cd)\n    };\n  }\n\n  protected getHCDefaultLine(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'line', marginTop: 10 },\n      plotOptions: {\n        line: {\n          //connectNulls: false,\n          dataLabels: this.getDataLabels(cd)\n        }\n      }\n    };\n  }\n\n  protected getHCDefaultSpline(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'spline', marginTop: 10 },\n      plotOptions: {\n        spline: {\n          //connectNulls: false,\n          dataLabels: this.getDataLabels(cd)\n        },\n        series: {\n          marker: <any>{\n            enabled: true,\n            fillOpacity: 0.5,\n            fillColor: Colors.light,\n            lineWidth: 2,\n            lineColor: null\n          }\n        }\n      }\n    };\n  }\n\n  protected getHCDefaultArea(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'area', marginTop: 10 },\n      plotOptions: {\n        area: {\n          connectNulls: false,\n          dataLabels: this.getDataLabels(cd)\n        }\n      }\n    };\n  }\n\n  protected getHCDefaultAreaSpline(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'areaspline', marginTop: 30 },\n      plotOptions: {\n        areaspline: {\n          connectNulls: false,\n          dataLabels: this.getDataLabels(cd)\n        }\n      }\n    };\n  }\n\n  protected getHCDefaultColumn(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'column', marginTop: 10, marginBottom: cd.showLegend ? 30 : 30 },\n      plotOptions: {\n        column: {\n          borderRadius: 0,\n          borderWidth: 0,\n          colorByPoint: cd.colorByPoint,\n          shadow: false,\n          dataLabels: this.getDataLabels(cd)\n        }\n      }\n    };\n  }\n\n  protected getHCDefaultHeatmap(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'heatmap', marginTop: 10 }\n    };\n  }\n\n  protected getHCDefaultBar(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'bar', marginTop: 10 },\n      plotOptions: {\n        bar: {\n          borderRadius: 0,\n          borderWidth: 0,\n          colorByPoint: cd.colorByPoint,\n          shadow: false,\n          dataLabels: this.getDataLabels(cd)\n        }\n      }\n    };\n  }\n\n  protected getHCDefaultPie(cd: ChartDefinition): HighchartsOptions {\n    return {\n      title: { style: { color: 'transparent' } },\n      chart: { type: 'pie', spacingBottom: 10, spacingTop: -20 },\n      plotOptions: {\n        pie: {\n          cursor: 'pointer',\n          //size: '90%',\n          borderWidth: 0,\n          //innerSize: '10%',\n          //minSize: 30,\n          dataLabels: {\n            enabled: cd.showValues !== false,\n            useHTML: false,\n            style: defaultsDeep({}, this.textStyle),\n            format: '{point.y:.0f} ({point.percentage:.0f} %)', //<b>{point.name}</b>:\n            distance: 5\n          },\n          showInLegend: true\n        }\n      }\n    };\n  }\n\n  protected getHCDefaultDoughnut(cd: ChartDefinition): HighchartsOptions {\n    return defaultsDeep(\n      {\n        plotOptions: {\n          pie: { startAngle: -90, endAngle: 90, center: ['50%', '75%'], innerSize: '90%' }\n        }\n      },\n      this.getHCDefaultPie(cd)\n    );\n  }\n\n  protected getHCDefaultRadar(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { polar: true, type: 'area' },\n      pane: { size: '70%' },\n      yAxis: <any>{ gridLineInterpolation: 'polygon', labels: { enabled: false }, lineWidth: 0 },\n      xAxis: { tickmarkPlacement: 'on', lineWidth: 0 }\n    };\n  }\n\n  protected getHCDefaultTreemap(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'treemap' },\n      colorAxis: {\n        minColor: Colors.light,\n        maxColor: this.getPalette(cd)[0]\n      }\n    };\n  }\n\n  protected getHCDefaultScatter(cd: ChartDefinition): HighchartsOptions {\n    return {\n      chart: { type: 'scatter', zoomType: 'xy' },\n      xAxis: { gridLineWidth: 1 },\n      plotOptions: {\n        series: { marker: <any>{ enabled: true, fillOpacity: 0.5 } }\n      }\n    };\n  }\n}\n","import { IAcl, Model, Searchable, Editable, Slide, getGroupsTransform, FORM_FILES_IMAGE_FILTER } from '@shared/data-core';\nimport { FormFieldType, IFormField, ICustomModel } from '@shared/stencil';\n\nlet conditions = {\n  isAllowInventory: 'allowInventory == 1'\n};\n\n@Model({\n  className: 'CustomModel',\n  collectionName: 'custommodels',\n  fields: ['*']\n})\nexport class CustomModel extends ICustomModel {\n  // export class CustomModel implements IEntity {\n\n  @Editable('CustomModel', { type: FormFieldType.text, visible: false })\n  _id: string;\n\n  _acl: IAcl;\n  _lmt?: string;\n  _ect?: string;\n\n  @Editable('CustomModel', { required: true, type: FormFieldType.text })\n  @Searchable('CustomModel')\n  title: string;\n\n  @Editable('CustomModel', { required: true, type: FormFieldType.text })\n  @Searchable('CustomModel')\n  name: string;\n\n  @Editable('CustomModel', { required: false, type: FormFieldType.textarea })\n  @Searchable('CustomModel')\n  shortDescription: string;\n\n  @Editable('CustomModel', {\n    required: true,\n    flex: 100,\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false\n  })\n  group: Array<string>;\n\n  @Editable('CustomModel', {\n    type: FormFieldType.checkbox,\n    flex: 100,\n    title: 'INVENTORY',\n    columnDefinition: { width: 80 }\n  })\n  allowInventory: boolean;\n\n  @Editable('CustomModel', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    condition: conditions.isAllowInventory,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    maxWidth: 750,\n    maxHeight: 240,\n    crop: 'square',\n    collectionName: 'files',\n    title: 'BACKGROUND',\n    columnDefinition: { name: '_downloadURL' },\n    filterable: false,\n    sortable: false\n  })\n  background: any;\n\n  // @Editable('CustomModel', { required: false, type: FormFieldType.text })\n  // @Searchable('CustomModel')\n  feathersService: string;\n\n  fields: Array<IFormField>;\n  properties?: Array<any>;\n  permissions?: string;\n\n  appearance?: Map<string, Array<string>>;\n\n  slides?: Array<Slide>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { Network, Persistent } from '@shared/common';\nimport { Config, Requestor, Models, Broker } from '@shared/data-core';\n\nimport { CustomModel } from '../../interfaces/custom-model/custom-model.interface';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class CustomModels {\n  @Persistent('custommodels.offline', false, null, true) public customModels: Array<CustomModel>;\n\n  constructor(protected config: Config, protected rq: Requestor, protected broker: Broker, protected network: Network) {}\n\n  registerModel(name: string, customModel: CustomModel): Observable<any> {\n    let properties = customModel.fields.map(field => {\n      let retVal = {};\n      retVal[field.name] = {\n        type: 'string'\n      };\n      return retVal;\n    });\n    properties.unshift({\n      _id: <any>{\n        type: 'string',\n        id: true,\n        generated: true\n      }\n    });\n    customModel.properties = properties;\n    customModel.permissions = 'private';\n    return this.broker.upsert('custommodels', customModel).pipe(\n      map(() => {\n        this.registerModelForClient(customModel);\n      })\n    );\n  }\n\n  registerModelForClient(customModel: CustomModel) {\n    Models.clearCollectionName(customModel.name);\n    Models.setCollectionName(customModel.name, customModel.name, ['*'], [], null, customModel.feathersService, CustomModel, true);\n    if (customModel.fields) {\n      customModel.fields.forEach(field => {\n        if (field) {\n          Models.addFormField(customModel.name, field);\n          if (field.searchable) {\n            Models.addSearchableField(customModel.name, field.name);\n          }\n        }\n      });\n    }\n    if (customModel.appearance) {\n      for (let key in customModel.appearance) {\n        if (customModel.appearance.hasOwnProperty(key)) {\n          Models.addAppearance(customModel.name, key, customModel.appearance[key]);\n        }\n      }\n    }\n  }\n\n  registerModelsForClient() {\n    if (!this.network.isOffline()) {\n      this.broker.getAll('custommodels', null, null, null, null, null, null, 10000).subscribe(ret => {\n        if (ret.data) {\n          this.customModels = ret.data;\n          ret.data.forEach((customModel: CustomModel) => {\n            this.registerModelForClient(customModel);\n          });\n        }\n      });\n    } else if (this.customModels) {\n      this.customModels.forEach((customModel: CustomModel) => {\n        this.registerModelForClient(customModel);\n      });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataCoreModule } from '@shared/data-core';\nimport { CommonModule } from '@shared/common';\nimport { TranslateModule } from '@shared/translate';\n\nimport { CellRenderer } from './services/cell-renderer/cell-renderer.service';\nimport { Conditions } from './services/conditions/conditions.service';\nimport { FormDynamicBuilder } from './services/form-dynamic-builder/form-dynamic-builder.service';\nimport { Mapping } from './services/mapping/mapping.service';\nimport { Chart } from './services/chart/chart.service';\nimport { CustomModels } from './services/custom-models/custom-models.service';\n\nconst PROVIDERS = [CellRenderer, Conditions, FormDynamicBuilder, Mapping, Chart, CustomModels];\n\n@NgModule({\n  declarations: [],\n  entryComponents: [],\n  imports: [FormsModule, ReactiveFormsModule, DataCoreModule, TranslateModule, CommonModule],\n  exports: [FormsModule, ReactiveFormsModule, DataCoreModule, TranslateModule, CommonModule]\n})\nexport class DataFormModule {\n  static forRoot(configuredProviders: Array<Provider> = []): ModuleWithProviders {\n    return {\n      ngModule: DataFormModule,\n      providers: [...PROVIDERS, ...configuredProviders]\n    };\n  }\n}\n","import { Entity, IAcl, Condition, Model, Editable, getGroupsTransform } from '@shared/data-core';\nimport { FormFieldType, IFormField } from '@shared/stencil';\n\n@Model({\n  className: 'CustomFormField',\n  collectionName: 'customFormFields',\n  fields: ['*'],\n  include: []\n})\nexport class CustomFormField extends Entity {\n  // export class CustomFormField implements IEntity {\n  _id: string;\n  _acl: IAcl;\n  _lmt?: string;\n  _ect?: string;\n\n  @Editable('CustomFormField', { type: FormFieldType.text, required: true })\n  title: string;\n\n  @Editable('CustomFormField', { type: FormFieldType.textarea })\n  description: string;\n\n  @Editable('CustomFormField', {\n    type: FormFieldType.autocomplete,\n    multiple: true,\n    required: true,\n    idAttributeName: 'name',\n    displayType: 'formfield'\n  })\n  fields: Array<IFormField>;\n\n  conditions: Array<Condition>;\n\n  @Editable('CustomFormField', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true,\n    clearable: false,\n    required: true,\n    allowCustomTag: true,\n    tag: false\n  })\n  group: string;\n}\n","import { Condition, Model, Editable, Entity, ROLES_CONDITIONS, FORM_FILES_IMAGE_FILTER } from '@shared/data-core';\nimport { FormFieldType, IFormField, IColumnDefinition, MOBILE_FORM_FIELDS_ALL } from '@shared/stencil';\nimport { map as _map } from 'lodash-es';\n\nlet conditions = {\n  isNotInformation: 'type!=\"information\"',\n  isNotInformationOrTask: 'type!=\"information\" and type!=\"task\"',\n  isNotInformationOrDocumentOrImage: 'type!=\"information\" and type!=\"image\" and type!=\"document\"',\n  isInformation: 'type==\"information\"',\n  isVideoplayer: 'type==\"videoplayer\"',\n  isAutocomplete: 'type==\"autocomplete\"',\n  isCatalog: 'type==\"catalog\"',\n  isImage: 'type==\"image\"',\n  isDocument: 'type==\"document\"',\n  isPhoto: 'type==\"photo\" or type==\"multiphotos\"',\n  isMultiPhotos: 'type==\"multiphotos\"',\n  isImageRecognition: 'isImageRecognition==1',\n  hasAllowLibrary: 'type==\"photo\" or type==\"video\" or type==\"multiphotos\" or type==\"todo\"',\n  isPhotoOrVideo: 'type==\"photo\" or type==\"video\" or type==\"multiphotos\"',\n  isEmailReport: 'type==\"emailreport\"',\n  isSelect: 'type==\"select\"',\n  isSelectImage: 'type==\"selectimage\"',\n  isAdress: 'type==\"address\"',\n  isNumber: 'type==\"number\"',\n  isDate: 'type==\"date\"',\n  isTodo: 'type==\"todo\"',\n  isNumberOrRange: 'type==\"number\" or type==\"range\" or type==\"knob\"',\n  isNumberOrRangeOrStarrating: 'type==\"number\" or type==\"range\" or type==\"starrating\"or type==\"knob\"',\n  isStarRating: 'type==\"starrating\"',\n  isAudioOrVideo: 'type==\"audio\" or type==\"video\"',\n  isConnect: 'type == \"connect\"',\n  isGame: 'type == \"game\"',\n  isFormula: 'type==\"formula\"',\n  hasValues: 'type==\"todo\" or type==\"photo\" or type==\"multiphotos\" or type==\"ranking\" or type==\"select\" or type==\"selectmulti\" or type==\"selectbuttons\" or type==\"selectchat\" or type==\"selectbuttonsmulti\" or type==\"autocomplete\" or type==\"emailreport\" or type==\"selectimage\" or type==\"missingword\" or type==\"swipeselect\" or type==\"game\"',\n  missionIsQuizz: <Condition>{ type: 'missionDescriptionAttribute', key: 'quizz', value: true },\n  hasSentence: 'type==\"missingword\" or type==\"swipeselect\" or type==\"selectchat\"',\n  hasMultiple: 'type==\"autocomplete\" or type==\"selectchat\" or type==\"selectimage\" ',\n  isReadOnly: 'readonly == 1'\n};\n\n// export function setConnectAnswerHandler(value, controls, data, form, requestor, dialog, viewContainerRef, changeDetectorRef) {\n//   dialog\n//     .upsert(\n//       {},\n//       '',\n//       viewContainerRef,\n//       null,\n//       [\n//         {\n//           name: 'connectAnswer',\n//           title: 'CONNECT',\n//           type: FormFieldType.connect,\n//           connectMode: data.connectMode,\n//           leftValues: data.leftValues,\n//           rightValues: data.rightValues\n//         }\n//       ],\n//       null,\n//       null,\n//       null,\n//       null,\n//       null,\n//       null,\n//       null,\n//       null,\n//       null,\n//       null,\n//       null,\n//       false,\n//       null\n//     )\n//     .then(retVal => {\n//       if (retVal) {\n//         data.answer = flatMap(retVal['connectAnswer']);\n//         changeDetectorRef.markForCheck();\n//       }\n//     });\n// }\n\n@Model({ className: 'FormField' })\nexport class FormField extends Entity implements IFormField {\n  @Editable('FormField', { type: FormFieldType.text, visible: false })\n  name: string;\n\n  @Editable('FormField', { type: FormFieldType.text, required: true })\n  title: string;\n\n  icon: string;\n\n  @Editable('FormField', {\n    title: 'INSTRUCTIONS',\n    type: FormFieldType.textarea,\n    condition: conditions.isNotInformation,\n    language: 'html'\n  })\n  description: string;\n\n  @Editable('FormField', {\n    title: 'VALUE',\n    required: true,\n    type: FormFieldType.textarea,\n    condition: conditions.isInformation,\n    language: 'html'\n  })\n  value: any;\n\n  @Editable('FormField', {\n    title: 'URL',\n    required: true,\n    type: FormFieldType.text,\n    condition: conditions.isVideoplayer\n  })\n  url: any;\n\n  @Editable('FormField', {\n    title: 'SENTENCE',\n    type: FormFieldType.textarea,\n    condition: conditions.hasSentence\n  })\n  sentence: any;\n\n  @Editable('FormField', {\n    title: 'FORMULA',\n    type: FormFieldType.textarea,\n    condition: conditions.isFormula\n  })\n  formula: any;\n\n  header: string;\n  filterName: string;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    values: _map(MOBILE_FORM_FIELDS_ALL, 'type'),\n    translate: true\n  })\n  type: string;\n\n  @Editable('FormField', {\n    title: 'GAME',\n    type: FormFieldType.autocomplete,\n    values: ['runner-game', 'memory-card-game'],\n    translate: true,\n    condition: conditions.isGame,\n    required: true\n  })\n  game: string;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    collectionName: 'catalogs',\n    idOnly: true,\n    condition: conditions.isCatalog\n  })\n  catalog: string;\n\n  @Editable('FormField', {\n    type: FormFieldType.checkbox,\n    condition: [conditions.isCatalog, 'presence != 1'],\n    advanced: true\n  })\n  inventory: boolean;\n\n  @Editable('FormField', {\n    type: FormFieldType.checkbox,\n    condition: [conditions.isCatalog, 'inventory != 1'],\n    advanced: true\n  })\n  presence: boolean;\n\n  placeholder: string;\n  visible: boolean;\n\n  tag: boolean;\n\n  @Editable('FormField', {\n    title: 'CUSTOMMODEL',\n    type: FormFieldType.autocomplete,\n    collectionName: 'custommodels',\n    idAttributeName: 'name',\n    idOnly: true,\n    condition: conditions.isAutocomplete,\n    advanced: true\n  })\n  collectionName: string;\n\n  @Editable('FormField', {\n    type: FormFieldType.toggle,\n    condition: conditions.isAutocomplete,\n    advanced: true\n  })\n  filterByLocation: boolean;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    tag: true,\n    multiple: true,\n    allowCustomTag: true,\n    condition: conditions.hasValues\n  })\n  values: Array<any>;\n\n  @Editable('FormField', {\n    title: 'MODE',\n    type: FormFieldType.autocomplete,\n    values: ['dragndrop', 'drawing'],\n    translate: true,\n    condition: conditions.isConnect,\n    required: true\n  })\n  connectMode: string;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    tag: true,\n    multiple: true,\n    allowCustomTag: true,\n    condition: conditions.isConnect\n  })\n  leftValues: Array<any>;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    tag: true,\n    multiple: true,\n    allowCustomTag: true,\n    condition: conditions.isConnect\n  })\n  rightValues: Array<any>;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    tag: true,\n    multiple: true,\n    allowCustomTag: true,\n    condition: conditions.isGame\n  })\n  correctValues: Array<any>;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    tag: true,\n    multiple: true,\n    allowCustomTag: true,\n    condition: conditions.isGame\n  })\n  wrongValues: Array<any>;\n\n  // @Editable('FormField', {\n  //   type: FormFieldType.button,\n  //   handler: setConnectAnswerHandler,\n  //   condition: conditions.isConnect\n  // })\n  // setAnswer: any;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    collectionName: 'user',\n    multiple: true,\n    required: false,\n    tag: true,\n    condition: [conditions.isTodo],\n    advanced: true\n  })\n  userTags: Array<string>;\n\n  @Editable('FormField', {\n    title: 'IMAGE',\n    type: FormFieldType.autocomplete,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    collectionName: 'files',\n    condition: conditions.isImage,\n    columnDefinition: { name: '_filename' }\n  })\n  image: any;\n\n  @Editable('FormField', {\n    title: 'IMAGE',\n    type: FormFieldType.autocomplete,\n    multiple: true,\n    filters: FORM_FILES_IMAGE_FILTER,\n    forceModal: true,\n    hiddenFields: ['mimeType'],\n    mode: 'tile',\n    pageSize: 20,\n    fixedPosition: true,\n    collectionName: 'files',\n    condition: conditions.isSelectImage,\n    columnDefinition: { name: '_filename' }\n  })\n  images: any;\n\n  @Editable('FormField', {\n    title: 'DOCUMENT',\n    type: FormFieldType.autocomplete,\n    collectionName: 'files',\n    condition: conditions.isDocument,\n    columnDefinition: { name: '_filename' }\n  })\n  document: any;\n\n  @Editable('FormField', { type: FormFieldType.checkbox, condition: conditions.hasMultiple })\n  multiple: boolean;\n\n  @Editable('FormField', {\n    title: 'BUTTONS',\n    type: FormFieldType.checkbox,\n    condition: conditions.isStarRating\n  })\n  useButtons: boolean;\n\n  @Editable('FormField', {\n    title: 'MODE',\n    type: FormFieldType.autocomplete,\n    values: ['youtube', 'url'],\n    translate: true,\n    condition: conditions.isVideoplayer,\n    required: true\n  })\n  mode: string;\n\n  @Editable('FormField', {\n    visible: false,\n    type: FormFieldType.autocomplete,\n    tag: true,\n    multiple: true,\n    allowCustomTag: true,\n    condition: conditions.missionIsQuizz,\n    dynamicValues: 'values'\n  })\n  answer: Array<any>;\n\n  @Editable('FormField', {\n    visible: false,\n    type: FormFieldType.textarea,\n    condition: conditions.missionIsQuizz\n  })\n  explanation: string;\n\n  @Editable('FormField', {\n    title: 'EXPLANATIONDOCUMENT',\n    type: FormFieldType.autocomplete,\n    collectionName: 'files',\n    condition: conditions.missionIsQuizz,\n    columnDefinition: { name: '_filename' }\n  })\n  explanationDocument: any;\n\n  sessionValues: string;\n  filterable: boolean;\n  columnDefinition: IColumnDefinition;\n  operators: Array<any>;\n  hint: string;\n  onChange: (value, data) => any;\n  subQuery: { field: string; values: string };\n  isSubQuery: boolean;\n  //isFieldSelector: boolean;\n  displayType: string;\n  mapTransform: Function;\n  queryFields: Array<string>;\n  defaultFields: Array<string>;\n  hideLabel: boolean;\n  fixedPosition: boolean;\n  imageLayout?: string;\n\n  @Editable('FormField', {\n    type: FormFieldType.number,\n    condition: [conditions.isMultiPhotos],\n    flex: 50,\n    externalValidators: [{ externalFieldName: 'maxPhotos', rule: 'lower' }]\n  })\n  minPhotos: number;\n\n  @Editable('FormField', {\n    type: FormFieldType.number,\n    condition: [conditions.isMultiPhotos],\n    flex: 50,\n    required: true,\n    externalValidators: [{ externalFieldName: 'minPhotos', rule: 'higher' }]\n  })\n  maxPhotos: number;\n\n  @Editable('FormField', {\n    title: 'MANDATORY',\n    type: FormFieldType.checkbox,\n    condition: conditions.isNotInformationOrDocumentOrImage,\n    flex: 50\n  })\n  required: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLOWCOMMENTS',\n    type: FormFieldType.checkbox,\n    condition: conditions.isNotInformation,\n    flex: 50\n  })\n  allowComments: boolean;\n\n  @Editable('FormField', {\n    title: 'AUTORELOAD',\n    type: FormFieldType.checkbox,\n    condition: conditions.isNotInformation,\n    flex: 50\n  })\n  autoreload: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLOWTASK',\n    type: FormFieldType.checkbox,\n    condition: [conditions.isNotInformationOrTask, ROLES_CONDITIONS.hasTodo],\n    flex: 50\n  })\n  allowTask: boolean;\n\n  @Editable('FormField', {\n    title: 'SHARETOFEED',\n    type: FormFieldType.checkbox,\n    flex: 50,\n    condition: [conditions.isPhoto]\n  })\n  shareToFeed: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLPHOTOSREQUIRED',\n    type: FormFieldType.checkbox,\n    flex: 100,\n    condition: [conditions.isTodo]\n  })\n  allPhotosRequired: boolean;\n\n  @Editable('FormField', {\n    type: FormFieldType.checkbox,\n    condition: conditions.isAutocomplete,\n    flex: 100,\n    advanced: true\n  })\n  clearable: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLOWTIME',\n    type: FormFieldType.checkbox,\n    condition: [conditions.isNotInformation],\n    flex: 100,\n    advanced: true\n  })\n  allowTime: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLOWLIBRARY',\n    type: FormFieldType.checkbox,\n    condition: conditions.hasAllowLibrary,\n    flex: 100\n  })\n  allowLibrary: boolean;\n\n  @Editable('FormField', {\n    title: 'GEOLOC',\n    type: FormFieldType.checkbox,\n    condition: conditions.isPhotoOrVideo,\n    flex: 100,\n    advanced: true\n  })\n  saveGeoloc: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLOWHISTORY',\n    type: FormFieldType.checkbox,\n    condition: [ROLES_CONDITIONS.hasTodoOrScore],\n    flex: 100,\n    advanced: true\n  })\n  allowHistory: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLOWOPENDETAILS',\n    type: FormFieldType.checkbox,\n    flex: 100,\n    condition: conditions.isSelectImage,\n    advanced: true\n  })\n  allowOpenDetails: boolean;\n\n  //@Editable('FormField', { title: 'SHOWONLOCATION', type: FormFieldType.checkbox, flex: 100,  advanced: true })\n  showOnLocation: boolean;\n\n  @Editable('FormField', {\n    title: 'LINKTOPREVIOUSQUESTION',\n    type: FormFieldType.checkbox,\n    flex: 100,\n    condition: [conditions.isTodo],\n    advanced: true\n  })\n  linked: boolean;\n\n  @Editable('FormField', {\n    title: 'ALLOWANNOTATE',\n    type: FormFieldType.checkbox,\n    condition: [conditions.isPhoto],\n    flex: 100,\n    advanced: true\n  })\n  allowAnnotate: boolean;\n\n  @Editable('FormField', {\n    title: 'SHOWUSERSEMAIL',\n    type: FormFieldType.checkbox,\n    condition: conditions.isEmailReport,\n    flex: 100,\n    advanced: true\n  })\n  showUsers: boolean;\n\n  @Editable('FormField', {\n    title: 'HIDEMOBILE',\n    type: FormFieldType.checkbox,\n    flex: 100,\n    advanced: true\n  })\n  hideMobile: boolean;\n\n  @Editable('FormField', {\n    title: 'OTHER1',\n    type: FormFieldType.checkbox,\n    condition: conditions.isSelect,\n    flex: 100,\n    advanced: true\n  })\n  allowOther: boolean;\n\n  @Editable('FormField', { type: FormFieldType.checkbox, flex: 100, advanced: true })\n  readonly: boolean;\n\n  @Editable('FormField', {\n    title: 'RADIUS',\n    type: FormFieldType.number,\n    condition: conditions.isAdress,\n    flex: 100,\n    advanced: true\n  })\n  radius: number;\n\n  @Editable('FormField', {\n    title: 'MIN',\n    type: FormFieldType.number,\n    condition: conditions.isNumberOrRange,\n    flex: 100,\n    advanced: false,\n    externalValidators: [{ externalFieldName: 'max', rule: 'lower' }]\n  })\n  min: number;\n\n  @Editable('FormField', {\n    title: 'MAX',\n    type: FormFieldType.number,\n    condition: conditions.isNumberOrRangeOrStarrating,\n    flex: 100,\n    advanced: false,\n    externalValidators: [{ externalFieldName: 'min', rule: 'higher' }]\n  })\n  max: number;\n\n  @Editable('FormField', {\n    title: 'STEP',\n    type: FormFieldType.number,\n    condition: conditions.isNumber,\n    flex: 100,\n    advanced: true\n  })\n  step: number;\n\n  @Editable('FormField', {\n    title: 'MIN',\n    type: FormFieldType.date,\n    condition: conditions.isDate,\n    flex: 100,\n    advanced: true\n  })\n  minDate: Date;\n\n  @Editable('FormField', {\n    title: 'MAX',\n    type: FormFieldType.date,\n    condition: conditions.isDate,\n    flex: 100,\n    advanced: true\n  })\n  maxDate: Date;\n\n  @Editable('FormField', {\n    title: 'SHOWSERVICE',\n    type: FormFieldType.checkbox,\n    flex: 100,\n    condition: ROLES_CONDITIONS.hasService,\n    advanced: true\n  })\n  showService: boolean;\n\n  @Editable('FormField', {\n    type: FormFieldType.number,\n    condition: [conditions.isPhoto],\n    flex: 100,\n    advanced: true\n  })\n  maxWidth: number;\n\n  @Editable('FormField', {\n    type: FormFieldType.number,\n    condition: [conditions.isPhoto],\n    flex: 100,\n    advanced: true\n  })\n  maxHeight: number;\n\n  @Editable('FormField', {\n    type: FormFieldType.toggle,\n    condition: [conditions.isPhoto, ROLES_CONDITIONS.isAdmin],\n    flex: 100,\n    title: 'PHOTOLIVECOUNTER',\n    advanced: true\n  })\n  isImageRecognition: boolean;\n\n  @Editable('FormField', {\n    type: FormFieldType.toggle,\n    condition: [conditions.isImageRecognition, ROLES_CONDITIONS.isAdmin],\n    flex: 100,\n    title: 'BACKGROUNDPROCESS',\n    advanced: true,\n    translate: true\n  })\n  isBackgroundProcess: boolean;\n\n  @Editable('FormField', {\n    title: 'DONTSAVEIFHIDDEN',\n    type: FormFieldType.checkbox,\n    flex: 100,\n    advanced: true,\n    condition: conditions.isReadOnly\n  })\n  dontSaveIfHidden: boolean;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    required: true,\n    collectionName: 'algorithm',\n    condition: conditions.isImageRecognition,\n    flex: 100,\n    title: 'ALGORITHM',\n    advanced: true\n  })\n  imageRecognitionAlgorithm: any;\n\n  @Editable('FormField', {\n    type: FormFieldType.json,\n    title: 'DISPLAY',\n    condition: conditions.isImageRecognition,\n    filterable: false,\n    sortable: false,\n    suppressExport: true,\n    advanced: true\n  })\n  imageRecognitionDisplay: any;\n\n  @Editable('FormField', {\n    title: 'DURATIONMAX',\n    type: FormFieldType.number,\n    condition: conditions.isAudioOrVideo,\n    flex: 100,\n    max: 60\n  })\n  duration: number;\n\n  @Editable('FormField', {\n    type: FormFieldType.autocomplete,\n    multiple: true,\n    clearable: true,\n    advanced: true\n  })\n  condition: Array<Condition>;\n\n  @Editable('FormField', {\n    title: 'FLEX',\n    type: FormFieldType.number,\n    flex: 100,\n    min: 0,\n    max: 100,\n    advanced: true\n  })\n  flex: number;\n\n  @Editable('FormField', {\n    title: 'LEGEND',\n    type: FormFieldType.textarea,\n    condition: conditions.isNotInformation,\n    advanced: true\n  })\n  caption: string;\n\n  @Editable('FormField', {\n    title: 'REPORTORDER',\n    type: FormFieldType.number,\n    condition: [ROLES_CONDITIONS.hasTodoOrScore],\n    flex: 100,\n    min: 0,\n    advanced: true\n  })\n  reportOrder: number;\n}\n","import { Entity, IAcl, Model, Searchable, Editable, getGroupsTransform } from '@shared/data-core';\nimport { FormFieldType } from '@shared/stencil';\n@Model({\n  className: 'GridState',\n  collectionName: 'gridstate',\n  fields: ['*'],\n  include: []\n})\nexport class GridState extends Entity {\n  // export class GridState implements IEntity {\n  _id: string;\n  _acl: IAcl;\n  _lmt?: string;\n  _ect?: string;\n\n  @Editable('GridState', { required: true, type: FormFieldType.text })\n  @Searchable('GridState')\n  title: string;\n\n  @Editable('GridState', { required: true, title: 'DESCRIPTION', type: FormFieldType.textarea })\n  @Searchable('GridState')\n  description: string;\n\n  @Editable('GridState', {\n    title: 'GROUPS',\n    type: FormFieldType.autocomplete,\n    collectionName: 'groups',\n    filters: [[{ field: 'isRole', operator: { _id: 'neq' }, value: true }, { field: 'type', operator: { _id: 'nin' }, value: ['plan'] }]],\n    hiddenFields: ['isRole', 'type'],\n    idOnly: true,\n    mapTransform: getGroupsTransform,\n    multiple: true\n  })\n  group: string | Array<string>;\n\n  collectionName: string;\n  filters: any;\n  sortModel: any;\n  visibleFields: any;\n  mode: any;\n}\n"]}