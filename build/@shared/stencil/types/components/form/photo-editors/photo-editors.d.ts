import '../../../stencil.core';
import { EventEmitter } from '../../../stencil.core';
import { IPhoto } from '../../../interfaces';
export declare class YooPhotoEditorsComponent {
    index: number;
    items: any;
    isReadonly: boolean;
    canAnnotate: boolean;
    canChat: boolean;
    hideCloseButton: boolean;
    isLight: boolean;
    openMission: EventEmitter<IPhoto>;
    userProfile: EventEmitter<IPhoto>;
    link: EventEmitter<string>;
    share: EventEmitter<string>;
    chat: EventEmitter<IPhoto>;
    download: EventEmitter<IPhoto>;
    flag: EventEmitter<IPhoto>;
    tag: EventEmitter<IPhoto>;
    annotate: EventEmitter<IPhoto>;
    currentIndex: number;
    hideContainer: boolean;
    host: HTMLStencilElement;
    private isFirstLoad;
    private itemFocused;
    private slides;
    private modal;
    private isZoomed;
    handlePinchZoom(event: CustomEvent<boolean>): void;
    updatePhoto(photo: any): Promise<void>;
    componentWillLoad(): void;
    componentDidLoad(): void;
    onSwipeDown(): void;
    onActionButtonClick(button: string, index?: number): void;
    onItemClicked(): void;
    showMoreActionSheet(): void;
    onAnnotate(photo: IPhoto, index: number): Promise<void>;
    onTag(photo: IPhoto): void;
    renderMissionDescription(item: any): JSX.Element;
    renderFieldTitle(item: any): JSX.Element;
    renderImageTitle(item: any): JSX.Element;
    onSlideDidChange(isNext: boolean): void;
    onVideoPlayerInputChanged(ev: CustomEvent<any>): void;
    rotateImage(item: any): boolean;
    shouldRenderSlideContent(index: number): boolean;
    renderActionButtons(): JSX.Element;
    renderBottomContainer(item: any, index: number): JSX.Element;
    renderBottomContainerActionButtons(item: any, index: number): JSX.Element;
    renderUserInfo(item: any): JSX.Element;
    renderSlideContent(item: any, index: number): Array<JSX.Element>;
    render(): JSX.Element;
}
