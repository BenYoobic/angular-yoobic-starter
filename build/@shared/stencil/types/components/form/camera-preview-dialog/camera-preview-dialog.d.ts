import '../../../stencil.core';
import { EventEmitter } from '../../../stencil.core';
export declare class YooCameraPreviewDialogComponent {
    imageData: string;
    quality: number;
    isImageRecognition: boolean;
    maxWidth: number;
    max: number;
    cameraStarted: boolean;
    regularMode: boolean;
    values: Array<any>;
    cameraStop: EventEmitter<boolean>;
    showLoader: boolean;
    listviewItems: Array<any>;
    flashMode: string;
    isProcessing: boolean;
    showCapturedImage: boolean;
    host: HTMLStencilElement;
    protected captures: Array<string>;
    protected photos: Array<string>;
    private dataPrefix;
    private helperModalDiv;
    private listviewDiv;
    private innerButtonDiv;
    private previewImageDiv;
    private FLASH_MODE;
    private yDown;
    private isCancel;
    private headerTouchStartY;
    private headerTouchStartTime;
    private capturedPath;
    private isTapped;
    componentWillLoad(): void;
    componentDidLoad(): void;
    componentDidUnload(): void;
    onStartCamera(): Promise<any>;
    onModalTimeout(): void;
    getCameraPreview(): Promise<string>;
    transformCameraPicture(data: string | Array<string>): Promise<string>;
    onCapture(): Promise<void>;
    stopCamera(): void;
    closeModalByType(): void;
    onCancel(): void;
    onSave(): void;
    onDismissHelperModal(): void;
    onToggleListView(): void;
    onImageClick(index: any): void;
    onCaptureInnerTouchStart(): void;
    onCaptureInnerTouchEnd(): void;
    onToggleFrontCamera(): void;
    onToggleFlashLight(): void;
    onDeleteCaptured(ev: any): void;
    onHeaderTouchStart(ev: TouchEvent): void;
    onHeaderTouchMove(ev: TouchEvent): void;
    onResizePreview(): void;
    getTouches(ev: any): any;
    renderHeader(): JSX.Element;
    renderBody(): JSX.Element;
    previewOnTouchMove(ev: TouchEvent): void;
    hostData(): {
        class: any;
    };
    render(): JSX.Element[];
}
