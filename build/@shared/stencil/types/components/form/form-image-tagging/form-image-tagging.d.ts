import '../../../stencil.core';
import { EventEmitter } from '../../../stencil.core';
import { ValidatorEntry, AsyncValidator, Validator, IPhotoAnnotation, IFile } from '../../../interfaces';
export declare class YooFormImageTaggingComponent {
    value: Array<string>;
    values: Array<string>;
    imageData: IFile;
    annotations: Array<IPhotoAnnotation>;
    answer: Array<string>;
    validators: Array<Validator<string> | ValidatorEntry>;
    asyncValidators: Array<AsyncValidator<string>>;
    placeholder: string;
    readonly: boolean;
    type: string;
    slideIndex: number;
    required: boolean;
    validityChanged: EventEmitter<boolean>;
    inputBlurred: EventEmitter<any>;
    inputFocused: EventEmitter<any>;
    inputChanged: EventEmitter<any>;
    isRendered: boolean;
    validity: boolean;
    host: HTMLStencilElement;
    requiredWatch(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    getImageSize(): {
        ['width']: string;
        ['height']: string;
    };
    validate(): boolean;
    initInteract(): void;
    initInteractDraggable(): void;
    initInteractDroppable(): void;
    dragMoveListener(event: any): void;
    dragEndListener(event: any): void;
    onDropWord(ev: any): void;
    onDragOrTapWord(target: any): void;
    isDropped(word: string): boolean;
    getTopPosition(annotation: IPhotoAnnotation, isDropZone?: boolean, isBadge?: boolean): string;
    getHorizontalPosition(annotation: IPhotoAnnotation, isDropZone?: boolean, word?: string): string;
    getPositionSide(annotation: IPhotoAnnotation, word?: string): string;
    updateAnswer(): void;
    checkAnswer(val: string, answer: string): "success" | "danger";
    renderAnnotationAndDropZone(annotation: IPhotoAnnotation, index: number): JSX.Element[];
    renderReadonly(): JSX.Element;
    renderEditable(): JSX.Element;
    render(): JSX.Element;
}
