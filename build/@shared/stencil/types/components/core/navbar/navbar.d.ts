import '../../../stencil.core';
import { EventEmitter } from '../../../stencil.core';
import { INavBarTab } from '../../../interfaces';
export declare class YooNavbarComponent {
    withLine: boolean;
    actionBtnText: string;
    swipeableIndicator: boolean;
    selectedSwipeIndex: number;
    tabs: Array<INavBarTab>;
    selectedTab: INavBarTab;
    scrollTabs: boolean;
    tabSelected: EventEmitter<INavBarTab>;
    tabSelectedIsToRight: EventEmitter<boolean>;
    actionButtonClicked: EventEmitter<boolean>;
    slidesOffsetBefore: number;
    reduceFontSize: number;
    numberOfVisibleItems: number;
    showDropdown: boolean;
    loading: boolean;
    host: HTMLStencilElement;
    private selectedTabIndex;
    private elementWidths;
    private scroll;
    private scrollByUser;
    private activeBar;
    private currentScroll;
    private activeBarWidth;
    private activeBarLeftPosition;
    private hostWidth;
    private navSlides;
    private innerContainers;
    private resizeListener;
    onSelectedSwipeIndexChange(newIndex: number): void;
    checkSelectedTab(): void;
    onSelectScrollTab(tab: INavBarTab, index: number): Promise<void>;
    onScrollTabChanged(): void;
    setActive(i: number): void;
    getActiveIndex(): Promise<number>;
    componentWillLoad(): void;
    componentDidLoad(): void;
    componentDidUnload(): void;
    private setSelectedTab;
    readonly dropDownWidth: number;
    readonly width: any;
    readonly activeTitleInDropdown: boolean;
    getElementWidth(index: number, accumulatedWidth?: boolean): number;
    onIonSlideDidChange(): Promise<void>;
    setSlideOffset(): void;
    onSelectSwipeableTab(index: number): void;
    onSelectTab(tab: INavBarTab, index: number): void;
    scrollToTab(tabPosition: number, tabWidth: number, isToRight: boolean, index: number, previousIndex: number): void;
    applyTabStyles(add: boolean, tabs: Array<HTMLElement>): void;
    scrollActiveBar(scrollOffset: number, index: number, previousIndex: number): void;
    getNumberOfVisibleItems(hostWidth: number, elementWidths: any): number;
    onIonScroll(ev: any): void;
    resizePage(): void;
    actionBtnClicked(): void;
    renderTab(tab: INavBarTab, index: number, array: any, wrapperType?: string): JSX.Element;
    renderSwipeable(): JSX.Element;
    renderScrollable(): JSX.Element;
    hostData(): {
        class: any;
    };
    render(): JSX.Element;
}
