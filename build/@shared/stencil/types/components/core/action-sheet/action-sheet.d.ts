import '../../../stencil.core';
import { EventEmitter } from '../../../stencil.core';
import { IActionSheetButton, IActionSheetCardHeader, IActionSheetFooter, OverlayInterface, OverlayEventDetail } from '../../../index';
export declare class YooActionSheetComponent implements OverlayInterface {
    heading: string;
    buttons: IActionSheetButton[];
    cardHeader: IActionSheetCardHeader;
    cssClass: string;
    footer: IActionSheetFooter;
    willAnimate: boolean;
    keyboardClose: boolean;
    overlayId: number;
    didPresent: EventEmitter<void>;
    willPresent: EventEmitter<void>;
    willDismiss: EventEmitter<OverlayEventDetail>;
    didDismiss: EventEmitter<OverlayEventDetail>;
    actionSelected: EventEmitter<IActionSheetButton>;
    actionSheetClosed: EventEmitter<boolean>;
    host: HTMLStencilElement;
    presented: boolean;
    animation?: Animation;
    private outerDiv;
    private innerDiv;
    private topContainer;
    private overlay;
    private usersElement?;
    private actionClickDivs;
    private cancelDiv;
    private preventDefault;
    protected lifecycle(modalEvent: CustomEvent): void;
    present(): Promise<void>;
    dismiss(data?: any, role?: string, overlayDismiss?: boolean): Promise<void>;
    onDidDismiss(callback?: (detail: OverlayEventDetail) => void): Promise<OverlayEventDetail>;
    onWillDismiss(callback?: (detail: OverlayEventDetail) => void): Promise<OverlayEventDetail>;
    onActionSelected(callback?: (detail: OverlayEventDetail) => void): Promise<OverlayEventDetail>;
    componentDidLoad(): void;
    componentDidUnload(): void;
    closeActionSheet(overlayDismiss?: boolean, isCancel?: boolean): void;
    onButtonClick(button: IActionSheetButton): void;
    onItemTouchStart(targetDiv: HTMLElement): void;
    onItemTouchEnd(targetDiv: HTMLElement): void;
    getProperHeight(): any;
    renderLiButton(buttons: any, button: any, index: number): JSX.Element;
    renderBottomContainer(): JSX.Element;
    renderCardHeader(): JSX.Element;
    renderHeader(): JSX.Element;
    renderFooter(): JSX.Element;
    renderTopContainer(): JSX.Element;
    hostData(): {
        class: any;
    };
    render(): JSX.Element;
}
