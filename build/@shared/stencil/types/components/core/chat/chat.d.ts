import '../../../stencil.core';
import { EventEmitter } from '../../../stencil.core';
import { IChatMessage } from '../../../interfaces';
export declare class YooChatComponent {
    heading: string;
    messages: IChatMessage[];
    displayLoadMore: boolean;
    inputPlaceHolder: string;
    isMultiple: boolean;
    deleteModeEnabled: boolean;
    enableKeyboardResizing: boolean;
    closeIcon: string;
    usersTyping: {};
    loadMoreClicked: EventEmitter<boolean>;
    sendText: EventEmitter<string>;
    sendChatPicture: EventEmitter<string>;
    closePage: EventEmitter<boolean>;
    showMore: EventEmitter<boolean>;
    closeDeleteMode: EventEmitter<boolean>;
    selected: EventEmitter<Array<number>>;
    deleteMessages: EventEmitter<boolean>;
    conferenceMessageClicked: EventEmitter<string>;
    isTyping: EventEmitter<boolean>;
    scrollHeight: string;
    loaded: boolean;
    host: HTMLStencilElement;
    protected selectedTimeTokens: Array<number>;
    private ionConent;
    private refresher;
    private scroll;
    private newMessageArr;
    scrollToBottom(): Promise<void>;
    scrollToTop(): Promise<void>;
    componentDidLoad(): Promise<void>;
    componentDidUnload(): void;
    isSomeoneTyping(): boolean;
    getLastMessage(index: number): boolean;
    getFirstMessage(index: number): boolean;
    isNextImage(index: number): boolean;
    onSendText(ev: CustomEvent<string>): void;
    onSendPicture(ev: CustomEvent<string>): void;
    onPullToRefresh(): void;
    onCloseDeleteMode(): void;
    onSelectMessages(allOrNone?: boolean): void;
    onClickMessage(ev: CustomEvent<boolean>, timetoken: number): void;
    onDeleteMessages(): void;
    onIsTyping(ev: CustomEvent<boolean>): void;
    renderReadOnlyHeader(): JSX.Element;
    renderEditableHeader(): JSX.Element;
    renderInputBar(): JSX.Element;
    renderDeleteModeFooter(): JSX.Element;
    renderTypingIcon(): JSX.Element;
    renderUserName(user: any): JSX.Element;
    renderUser(user: any): JSX.Element;
    renderIsTypingMultiple(): JSX.Element;
    renderSomeoneIsTyping(): JSX.Element;
    renderChatMessage(): JSX.Element;
    render(): JSX.Element;
}
