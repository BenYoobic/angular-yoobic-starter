/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';


import {
  CalendarDisplayMode,
  HealthscoreDisplayMode,
  IActionSheetButton,
  IActionSheetCardHeader,
  IActionSheetFooter,
  IAppSearchTab as IAppSearchTab2,
  IBadgeEntry,
  IButton,
  IChartDefinition,
  IContact,
  ICourse,
  IDashboard,
  IEntity,
  IEntitySearchRequest,
  IFeed,
  IFile,
  IFormField,
  IFormProgress,
  IFormSearch as IFormSearch2,
  IHealthscore,
  IHealthscoreEvolution,
  ILanguage,
  ILesson,
  ILocation,
  ILoginDetails,
  IMemo,
  IMission,
  IMissionDescription,
  IMissionScoring,
  IProfileConfig,
  IProperty,
  IQuestion,
  ISlide,
  IUser,
  IUserRank,
  IWalkthroughEntry,
  IWalkthroughSlideEvent,
  OverlayEventDetail,
  ScrollDetail,
} from './index';
import {
  AsyncValidator,
  CardType,
  EntityType,
  ExternalValidator,
  FormDisplayType,
  FormStarType,
  IAccordionEntry,
  IActionBar,
  IActionSheet,
  IAlertButton,
  IAlertEntry,
  IAlgorithm,
  IAnimationProp,
  IAppSearchTab,
  IBadgeEntry as IBadgeEntry2,
  IButton as IButton2,
  ICalendarMarker,
  ICardCellEntry,
  ICardEntry,
  ICardImageEntry,
  ICardListEntry,
  ICardStickyEntry,
  IChartDefinition as IChartDefinition2,
  IChatMessage,
  IColumnDefinition,
  ICourse as ICourse2,
  ICustomModel,
  IDateChange,
  IDeviceEntry,
  IEntitiesAction,
  IEntity as IEntity2,
  IEntityAction,
  IEntitySearchFilters,
  IEntitySearchTags,
  IFile as IFile2,
  IFilterGroup,
  IFormBarcodeOcrRegex,
  IFormChecklistValue,
  IFormCreatorBlock,
  IFormField as IFormField2,
  IFormProgress as IFormProgress2,
  IFormSearch,
  IFormUIValidation,
  IGridSearch,
  IKpiTypes,
  ILesson as ILesson2,
  ILocation as ILocation2,
  IMapEntry,
  IMarker,
  IMarkerColor,
  IMissionDescription as IMissionDescription2,
  IMissionScoring as IMissionScoring2,
  IMobileTabbarItem,
  IModalIcon,
  INavBarTab,
  IPageCardEntry,
  IParticipant,
  IPhoto,
  IPhotoAnnotation,
  IPosition,
  IProduct,
  IProductBatch,
  IProgressCircle,
  IProgressCore,
  IProgressIndicator,
  IProgressLine,
  IProgressSemiCircle,
  IRadioGroupEntry,
  ISlide as ISlide2,
  ISort,
  ItemSlidingType,
  ITextTruncate,
  IToastEntry,
  ITodo,
  ITodoTask,
  ITodoTaskSimple,
  IUser as IUser2,
  IUserRank as IUserRank2,
  IWebMenuEntry,
  IWebMenuItem,
  IZoomTransform,
  ToastPosition,
  Validator,
  ValidatorEntry,
} from './interfaces';
import {
  EventEmitter,
} from './stencil.core';
import {
  BlockerConfig,
  Color,
  ComponentProps,
  ComponentRef,
  FrameworkDelegate,
  GestureCallback,
  GestureConfig,
  GestureDetail,
  ModalAnimation,
  OverlayEventDetail as OverlayEventDetail2,
  RouterDirection,
  ScrollBaseDetail,
  ScrollDetail as ScrollDetail2,
  Side,
} from './utils/ionic';
import {
  YooIonScrollComponent,
} from './components/ionic/scroll/scroll';
import {
  IHammerOptions,
} from './utils';
import {
  IFormCreatorBlock as IFormCreatorBlock2,
} from './interface';
import {
  GridOptions,
} from 'ag-grid-community';
import {
  BlockerDelegate,
} from './components/ionic/gesture-controller/gesture';


export namespace Components {

  interface YooCourseDetail {
    'course': ICourse;
    'courseProgress': number;
    'planDueDate': string;
  }
  interface YooCourseDetailAttributes extends StencilHTMLAttributes {
    'course'?: ICourse;
    'courseProgress'?: number;
    'planDueDate'?: string;
  }

  interface YooLessonBadges {
    'badges': Array<string>;
  }
  interface YooLessonBadgesAttributes extends StencilHTMLAttributes {
    'badges'?: Array<string>;
  }

  interface YooLessonDetail {
    'assignmentDate': Date;
    'highscores': Array<IUserRank>;
    'lesson': ILesson;
    'lessonData': Array<IFormField>;
  }
  interface YooLessonDetailAttributes extends StencilHTMLAttributes {
    'assignmentDate'?: Date;
    'highscores'?: Array<IUserRank>;
    'lesson'?: ILesson;
    'lessonData'?: Array<IFormField>;
    'onStart'?: (event: CustomEvent<any>) => void;
  }

  interface YooLessonHeading {
    'assignmentDate': Date;
    'lesson': ILesson;
  }
  interface YooLessonHeadingAttributes extends StencilHTMLAttributes {
    'assignmentDate'?: Date;
    'lesson'?: ILesson;
  }

  interface YooLessonHighscores {
    'ranks': Array<IUserRank>;
  }
  interface YooLessonHighscoresAttributes extends StencilHTMLAttributes {
    'ranks'?: Array<IUserRank>;
  }

  interface YooLessonQuestionResult {
    'earnedBadge': string;
    'earnedPoints': number;
    'explanationDocument': IFile;
    'footerActions': Array<IButton>;
    'lessonMinForCompliance': number;
    'lessonTitle': string;
    'lessonType': string;
    'nbAnswered': number;
    'nextLesson': IMissionDescription;
    'questionExplanation': string;
    'resultType': 'question' | 'lesson' | 'timeout' | 'course';
    'showHeader': boolean;
    'validated': boolean;
  }
  interface YooLessonQuestionResultAttributes extends StencilHTMLAttributes {
    'earnedBadge'?: string;
    'earnedPoints'?: number;
    'explanationDocument'?: IFile;
    'footerActions'?: Array<IButton>;
    'lessonMinForCompliance'?: number;
    'lessonTitle'?: string;
    'lessonType'?: string;
    'nbAnswered'?: number;
    'nextLesson'?: IMissionDescription;
    'questionExplanation'?: string;
    'resultType'?: 'question' | 'lesson' | 'timeout' | 'course';
    'showHeader'?: boolean;
    'validated'?: boolean;
  }

  interface YooPodium {
    'usersRanked': Array<IUserRank>;
  }
  interface YooPodiumAttributes extends StencilHTMLAttributes {
    'onSelect'?: (event: CustomEvent<IUserRank>) => void;
    'usersRanked'?: Array<IUserRank>;
  }

  interface YooQuestionDetail {
    'question': IQuestion;
  }
  interface YooQuestionDetailAttributes extends StencilHTMLAttributes {
    'onLiked'?: (event: CustomEvent<boolean>) => void;
    'onReplyClicked'?: (event: CustomEvent<any>) => void;
    'question'?: IQuestion;
  }

  interface YooUserDetail {
    'courses': Array<ICourse>;
    'stats': {
      lessonsCount: number;
      lessonsValidated: number;
      availablePoints: number;
      earnedPoints: number;
      earnedBadges: Array<string>;
    };
    'user': IUser;
  }
  interface YooUserDetailAttributes extends StencilHTMLAttributes {
    'courses'?: Array<ICourse>;
    'onBadgeSelected'?: (event: CustomEvent<IBadgeEntry>) => void;
    'onCourseSelected'?: (event: CustomEvent<ICourse>) => void;
    'onSeeAllCourses'?: (event: CustomEvent<boolean>) => void;
    'stats'?: {
      lessonsCount: number;
      lessonsValidated: number;
      availablePoints: number;
      earnedPoints: number;
      earnedBadges: Array<string>;
    };
    'user'?: IUser;
  }

  interface YooCampaignEditorRecap {
    'campaign': IMissionDescription;
  }
  interface YooCampaignEditorRecapAttributes extends StencilHTMLAttributes {
    'campaign'?: IMissionDescription;
    'onEdited'?: (event: CustomEvent<string>) => void;
    'onPreviewed'?: (event: CustomEvent<string>) => void;
  }

  interface YooCampaignHeading {
    'alwaysExpanded': boolean;
    /**
    * The campaign with all relevant attributes of the campaign heading.
    */
    'campaign': IMissionDescription;
  }
  interface YooCampaignHeadingAttributes extends StencilHTMLAttributes {
    'alwaysExpanded'?: boolean;
    /**
    * The campaign with all relevant attributes of the campaign heading.
    */
    'campaign'?: IMissionDescription;
    'onArchived'?: (event: CustomEvent<IMissionDescription>) => void;
    'onEdited'?: (event: CustomEvent<boolean>) => void;
    'onFinished'?: (event: CustomEvent<IMissionDescription>) => void;
    'onLivePreviewed'?: (event: CustomEvent<IMissionDescription>) => void;
    'onNotified'?: (event: CustomEvent<boolean>) => void;
    'onPublished'?: (event: CustomEvent<IMissionDescription>) => void;
  }

  interface YooContactDetail {
    'canChat': boolean;
    'isUser': boolean;
    'item': IContact;
  }
  interface YooContactDetailAttributes extends StencilHTMLAttributes {
    'canChat'?: boolean;
    'isUser'?: boolean;
    'item'?: IContact;
    'onCall'?: (event: CustomEvent<IContact>) => void;
    'onChat'?: (event: CustomEvent<IContact>) => void;
    'onEmail'?: (event: CustomEvent<IContact>) => void;
    'onTextMessage'?: (event: CustomEvent<IContact>) => void;
  }

  interface YooDashboardDetail {
    'dashboard': IDashboard;
  }
  interface YooDashboardDetailAttributes extends StencilHTMLAttributes {
    'dashboard'?: IDashboard;
  }

  interface YooFeedDetail {
    'feed': IFeed;
    'isOffline': boolean;
  }
  interface YooFeedDetailAttributes extends StencilHTMLAttributes {
    'feed'?: IFeed;
    'isOffline'?: boolean;
    'onCommentClicked'?: (event: CustomEvent<boolean>) => void;
    'onCommentCountClicked'?: (event: CustomEvent<boolean>) => void;
    'onGroupClicked'?: (event: CustomEvent<any>) => void;
    'onImageClicked'?: (event: CustomEvent<boolean>) => void;
    'onLikeClicked'?: (event: CustomEvent<boolean>) => void;
    'onLikeCountClicked'?: (event: CustomEvent<boolean>) => void;
    'onUserClicked'?: (event: CustomEvent<any>) => void;
    'onViewCountClicked'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooHealthscoreDialog {
    'evolutions': Array<IHealthscoreEvolution>;
    'hideToolbar': boolean;
  }
  interface YooHealthscoreDialogAttributes extends StencilHTMLAttributes {
    'evolutions'?: Array<IHealthscoreEvolution>;
    'hideToolbar'?: boolean;
  }

  interface YooHealthscore {
    'displayMode': HealthscoreDisplayMode;
    'modalHost': HTMLElement;
    'scores': Array<IHealthscore>;
  }
  interface YooHealthscoreAttributes extends StencilHTMLAttributes {
    'displayMode'?: HealthscoreDisplayMode;
    'modalHost'?: HTMLElement;
    'onShowDialog'?: (event: CustomEvent<any>) => void;
    'onShowHelp'?: (event: CustomEvent<string>) => void;
    'scores'?: Array<IHealthscore>;
  }

  interface YooLocationHeading {
    'lastVisitDate': Date;
    'location': ILocation;
  }
  interface YooLocationHeadingAttributes extends StencilHTMLAttributes {
    'lastVisitDate'?: Date;
    'location'?: ILocation;
  }

  interface YooLocationInfo {
    'location': ILocation;
  }
  interface YooLocationInfoAttributes extends StencilHTMLAttributes {
    'location'?: ILocation;
  }

  interface YooLocationMap {
    'location': any;
  }
  interface YooLocationMapAttributes extends StencilHTMLAttributes {
    'location'?: any;
    'onDirection'?: (event: CustomEvent<any>) => void;
    'onOpenFullscreen'?: (event: CustomEvent<any>) => void;
    'onUseAppleMaps'?: (event: CustomEvent<any>) => void;
    'onUseCityMapper'?: (event: CustomEvent<any>) => void;
    'onUseCopyAddress'?: (event: CustomEvent<any>) => void;
    'onUseGoogleMaps'?: (event: CustomEvent<any>) => void;
  }

  interface YooMemoListDialog {
    'memo': IMemo;
    'type': 'open' | 'closed';
  }
  interface YooMemoListDialogAttributes extends StencilHTMLAttributes {
    'memo'?: IMemo;
    'onMemoEdit'?: (event: CustomEvent<IMemo>) => void;
    'onUsersView'?: (event: CustomEvent<Array<string>>) => void;
    'type'?: 'open' | 'closed';
  }

  interface YooMemoList {
    'memos': Array<IMemo>;
    'modalHost': HTMLElement;
    'type': 'open' | 'closed';
  }
  interface YooMemoListAttributes extends StencilHTMLAttributes {
    'memos'?: Array<IMemo>;
    'modalHost'?: HTMLElement;
    'onMemoDelete'?: (event: CustomEvent<IMemo>) => void;
    'onMemoEdit'?: (event: CustomEvent<IMemo>) => void;
    'onMemoSelect'?: (event: CustomEvent<IMemo>) => void;
    'onMemoUpdate'?: (event: CustomEvent<IMemo>) => void;
    'onUsersView'?: (event: CustomEvent<Array<string>>) => void;
    'type'?: 'open' | 'closed';
  }

  interface YooMissionContents {
    'photosNumber': number;
    'questionsNumber': number;
    'slidesNumber': number;
  }
  interface YooMissionContentsAttributes extends StencilHTMLAttributes {
    'photosNumber'?: number;
    'questionsNumber'?: number;
    'slidesNumber'?: number;
  }

  interface YooMissionDetail {
    'charts': Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'isBookable': (m: IMission) => boolean;
    'linkedField': IFormField;
    'linkedFieldValue': any;
    'mission': IMission;
    'networkScore': number;
    'photosNumber': number;
    'progress': IFormProgress;
    'questionsNumber': number;
    'serviceSlides': Array<ISlide>;
    'slidesNumber': number;
    'tagContainer': string;
  }
  interface YooMissionDetailAttributes extends StencilHTMLAttributes {
    'charts'?: Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'isBookable'?: (m: IMission) => boolean;
    'linkedField'?: IFormField;
    'linkedFieldValue'?: any;
    'mission'?: IMission;
    'networkScore'?: number;
    'onBook'?: (event: CustomEvent<'book' | 'start' | 'unbook' | 'continue'>) => void;
    'onShouldClose'?: (event: CustomEvent<boolean>) => void;
    'onShowScoreChart'?: (event: CustomEvent<IChartDefinition>) => void;
    'onShowUser'?: (event: CustomEvent<IUser>) => void;
    'photosNumber'?: number;
    'progress'?: IFormProgress;
    'questionsNumber'?: number;
    'serviceSlides'?: Array<ISlide>;
    'slidesNumber'?: number;
    'tagContainer'?: string;
  }

  interface YooMissionHeading {
    'mission': IMission;
    'progress': number;
  }
  interface YooMissionHeadingAttributes extends StencilHTMLAttributes {
    'mission'?: IMission;
    'progress'?: number;
  }

  interface YooMissionResults {
    'charts': Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'hasAudit': boolean;
    'mission': IMission;
    'networkScore': number;
    'nonapplicableCount': number;
    'satisfactoryCount': number;
    'unsatisfactoryCount': number;
  }
  interface YooMissionResultsAttributes extends StencilHTMLAttributes {
    'charts'?: Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'hasAudit'?: boolean;
    'mission'?: IMission;
    'networkScore'?: number;
    'nonapplicableCount'?: number;
    'onSelectLocation'?: (event: CustomEvent<any>) => void;
    'onSelectUser'?: (event: CustomEvent<any>) => void;
    'onSelectValidator'?: (event: CustomEvent<any>) => void;
    'onShowScoreChart'?: (event: CustomEvent<IChartDefinition>) => void;
    'satisfactoryCount'?: number;
    'unsatisfactoryCount'?: number;
  }

  interface YooMissionScore {
    'charts': Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'header': string;
    'networkScore': number;
  }
  interface YooMissionScoreAttributes extends StencilHTMLAttributes {
    'charts'?: Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'header'?: string;
    'networkScore'?: number;
    'onScoreSelect'?: (event: CustomEvent<IChartDefinition>) => void;
  }

  interface YooMissionTodo {
    'mission': IMission;
    'readonly': boolean;
  }
  interface YooMissionTodoAttributes extends StencilHTMLAttributes {
    'mission'?: IMission;
    'onUpdate'?: (event: CustomEvent<IMission>) => void;
    'readonly'?: boolean;
  }

  interface YooAbout {
    'app': string;
    'linkedin': string;
    'logo': string;
    'twitter': string;
    'version': string;
  }
  interface YooAboutAttributes extends StencilHTMLAttributes {
    'app'?: string;
    'linkedin'?: string;
    'logo'?: string;
    'twitter'?: string;
    'version'?: string;
  }

  interface YooApp {
    'getSession': Function;
    'isDarkTheme': boolean;
    'isOffline': boolean;
    'language': string;
  }
  interface YooAppAttributes extends StencilHTMLAttributes {
    'getSession'?: Function;
    'isDarkTheme'?: boolean;
    'isOffline'?: boolean;
    'language'?: string;
    'onDarkThemeChanged'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooLanguageSelector {
    'currentLanguage': string;
    'languages': ILanguage[];
    'topPosition': number;
  }
  interface YooLanguageSelectorAttributes extends StencilHTMLAttributes {
    'currentLanguage'?: string;
    'languages'?: ILanguage[];
    'onLanguageSelected'?: (event: CustomEvent<string>) => void;
    'topPosition'?: number;
  }

  interface YooLogin {
    'backgroundColor': string;
    'backgroundSrc': string;
    'borderClass': string;
    'buttonClass': string;
    'currentLanguage': string;
    'emailLabel': string;
    'error': string;
    'forgotPasswordText': string;
    'languages': ILanguage[];
    'leftPanelFooterText': string;
    'leftPanelMobileHeaderIcon': string;
    'leftPanelWebHeaderIcon': string;
    'loading': boolean;
    'loginButtonText': string;
    'magicLinkButtonText': string;
    'passwordLabel': string;
    'rememberMeText': string;
    'resetPasswordButtonText': string;
    'setStatusBarColor': (light: boolean) => void;
    'showRememberMe': boolean;
    'version': string;
    'videoBackgroundUrl': string;
    'videoHeaderIcon': string;
    'webLoginFormSubtitle': string;
    'webLoginFormTitle': string;
    'webSubtitleText': string[];
    'webTitleText': string;
  }
  interface YooLoginAttributes extends StencilHTMLAttributes {
    'backgroundColor'?: string;
    'backgroundSrc'?: string;
    'borderClass'?: string;
    'buttonClass'?: string;
    'currentLanguage'?: string;
    'emailLabel'?: string;
    'error'?: string;
    'forgotPasswordText'?: string;
    'languages'?: ILanguage[];
    'leftPanelFooterText'?: string;
    'leftPanelMobileHeaderIcon'?: string;
    'leftPanelWebHeaderIcon'?: string;
    'loading'?: boolean;
    'loginButtonText'?: string;
    'magicLinkButtonText'?: string;
    'onAdvancedLoginRequested'?: (event: CustomEvent<boolean>) => void;
    'onDoLogin'?: (event: CustomEvent<ILoginDetails>) => void;
    'onLanguageSelectedParent'?: (event: CustomEvent<string>) => void;
    'onMagicLinkModalRequested'?: (event: CustomEvent<boolean>) => void;
    'onPasswordResetModalRequested'?: (event: CustomEvent<boolean>) => void;
    'onRememberMeSelected'?: (event: CustomEvent<boolean>) => void;
    'passwordLabel'?: string;
    'rememberMeText'?: string;
    'resetPasswordButtonText'?: string;
    'showRememberMe'?: boolean;
    'version'?: string;
    'videoBackgroundUrl'?: string;
    'videoHeaderIcon'?: string;
    'webLoginFormSubtitle'?: string;
    'webLoginFormTitle'?: string;
    'webSubtitleText'?: string[];
    'webTitleText'?: string;
  }

  interface YooProfile {
    'config': IProfileConfig;
    'disableProfileLink': boolean;
    'extraClasses': string;
    'isPreview': boolean;
    'modalHost': HTMLElement;
    'selectedTitle': string;
    'showProfileHeader': boolean;
  }
  interface YooProfileAttributes extends StencilHTMLAttributes {
    'config'?: IProfileConfig;
    'disableProfileLink'?: boolean;
    'extraClasses'?: string;
    'isPreview'?: boolean;
    'modalHost'?: HTMLElement;
    'onClicked'?: (event: CustomEvent<string>) => void;
    'onLogout'?: (event: CustomEvent<boolean>) => void;
    'onProfileEdit'?: (event: CustomEvent<{ host: HTMLElement, isPreview: boolean }>) => void;
    'selectedTitle'?: string;
    'showProfileHeader'?: boolean;
  }

  interface YooResetPassword {
    'borderClass': string;
    'buttonClass': string;
    'heading': string;
    'isMagicLink': boolean;
    'showTitle': boolean;
    'subheading': string;
  }
  interface YooResetPasswordAttributes extends StencilHTMLAttributes {
    'borderClass'?: string;
    'buttonClass'?: string;
    'heading'?: string;
    'isMagicLink'?: boolean;
    'onPasswordResetRequestSubmitted'?: (event: CustomEvent<{ email: string, isMagicLink: boolean }>) => void;
    'showTitle'?: boolean;
    'subheading'?: string;
  }

  interface YooUserProfile {
    'config': IProfileConfig;
    'user': IUser;
  }
  interface YooUserProfileAttributes extends StencilHTMLAttributes {
    'config'?: IProfileConfig;
    'onClicked'?: (event: CustomEvent<string>) => void;
    'user'?: IUser;
  }

  interface YooWalkthrough {
    'config': Array<IWalkthroughEntry>;
    'isEnd': () => Promise<any>;
    'lockSwipes': (shouldLock: boolean) => void;
    'slideNext': () => void;
    'update': () => void;
  }
  interface YooWalkthroughAttributes extends StencilHTMLAttributes {
    'config'?: Array<IWalkthroughEntry>;
    'onGetStartedClicked'?: (event: CustomEvent<boolean>) => void;
    'onSlideChanged'?: (event: CustomEvent<IWalkthroughSlideEvent>) => void;
    'onWalkthroughSkipped'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooWelcomeBanner {
    'mainText': string;
    'subText': string;
    'user': IUser;
  }
  interface YooWelcomeBannerAttributes extends StencilHTMLAttributes {
    'mainText'?: string;
    'subText'?: string;
    'user'?: IUser;
  }

  interface YooChart {
    'config': any;
    'definition': IChartDefinition;
    'isFullScreen': boolean;
  }
  interface YooChartAttributes extends StencilHTMLAttributes {
    'config'?: any;
    'definition'?: IChartDefinition;
    'isFullScreen'?: boolean;
    'onChartClick'?: (event: CustomEvent<any>) => void;
    'onChartDoubleClick'?: (event: CustomEvent<Array<string>>) => void;
    'onChartLegendItemClick'?: (event: CustomEvent<any>) => void;
  }

  interface YooKpiContainer {
    'config': any;
    'definition': IChartDefinition;
    'heading': string;
    'hideHeader': boolean;
    'isFullHeight': boolean;
    'isFullScreen': boolean;
    'type': IKpiTypes;
  }
  interface YooKpiContainerAttributes extends StencilHTMLAttributes {
    'config'?: any;
    'definition'?: IChartDefinition;
    'heading'?: string;
    'hideHeader'?: boolean;
    'isFullHeight'?: boolean;
    'isFullScreen'?: boolean;
    'onKpiClick'?: (event: CustomEvent<any>) => void;
    'onKpiDoubleClick'?: (event: CustomEvent<Array<string>>) => void;
    'onKpiLegendItemClick'?: (event: CustomEvent<any>) => void;
    'onShare'?: (event: CustomEvent<string>) => void;
    'onShowDetail'?: (event: CustomEvent<number>) => void;
    'type'?: IKpiTypes;
  }

  interface YooKpiExternal {
    'config': any;
    'definition': IChartDefinition;
    'isFullScreen': boolean;
  }
  interface YooKpiExternalAttributes extends StencilHTMLAttributes {
    'config'?: any;
    'definition'?: IChartDefinition;
    'isFullScreen'?: boolean;
  }

  interface YooKpi {
    'config': any;
    'definition': IChartDefinition;
    'isFullHeight': boolean;
    'isFullScreen': boolean;
    'photoSrc': string;
    'type': IKpiTypes;
  }
  interface YooKpiAttributes extends StencilHTMLAttributes {
    'config'?: any;
    'definition'?: IChartDefinition;
    'isFullHeight'?: boolean;
    'isFullScreen'?: boolean;
    'onFetchDetails'?: (event: CustomEvent<any>) => void;
    'onKpiClick'?: (event: CustomEvent<any>) => void;
    'onKpiDoubleClick'?: (event: CustomEvent<Array<string>>) => void;
    'onKpiLegendItemClick'?: (event: CustomEvent<any>) => void;
    'photoSrc'?: string;
    'type'?: IKpiTypes;
  }

  interface YooPivotTable {
    'config': { columnDefs?: Array<any>; rowData: Array<any>; };
    'definition': IChartDefinition;
    'isFullScreen': boolean;
  }
  interface YooPivotTableAttributes extends StencilHTMLAttributes {
    'config'?: { columnDefs?: Array<any>; rowData: Array<any>; };
    'definition'?: IChartDefinition;
    'isFullScreen'?: boolean;
    'onRowClick'?: (event: CustomEvent<any>) => void;
    'onRowDoubleClick'?: (event: CustomEvent<Array<string>>) => void;
  }

  interface YooAccordion {
    /**
    * Enable or disable multiple selection
    */
    'allowMultipleSelection': boolean;
    /**
    * Entries are the strings that will populate each row of the accordion
    */
    'entries': IAccordionEntry[];
    /**
    * Icon pair to be toggled between the two supplied icons [0] --> non-selected state; [1] --> selected state;  positioned to the left of the title
    */
    'iconPairLeft': string[];
    /**
    * Icon pair to be toggled between the two supplied icons [0] --> non-selected state; [1] --> selected state;  positioned to the right of the title
    */
    'iconPairRight': string[];
    /**
    * have a master title for the accordion
    */
    'masterTitle': string;
    /**
    * If true, each item will have a border bottom of 1px
    */
    'showBottomBorder': boolean;
  }
  interface YooAccordionAttributes extends StencilHTMLAttributes {
    /**
    * Enable or disable multiple selection
    */
    'allowMultipleSelection'?: boolean;
    /**
    * Entries are the strings that will populate each row of the accordion
    */
    'entries'?: IAccordionEntry[];
    /**
    * Icon pair to be toggled between the two supplied icons [0] --> non-selected state; [1] --> selected state;  positioned to the left of the title
    */
    'iconPairLeft'?: string[];
    /**
    * Icon pair to be toggled between the two supplied icons [0] --> non-selected state; [1] --> selected state;  positioned to the right of the title
    */
    'iconPairRight'?: string[];
    /**
    * have a master title for the accordion
    */
    'masterTitle'?: string;
    'onAccordionSelected'?: (event: CustomEvent<number>) => void;
    /**
    * If true, each item will have a border bottom of 1px
    */
    'showBottomBorder'?: boolean;
  }

  interface YooActionSheet {
    'buttons': IActionSheetButton[];
    'cardHeader': IActionSheetCardHeader;
    'cssClass': string;
    'dismiss': (data?: any, role?: string, overlayDismiss?: boolean) => Promise<void>;
    'footer': IActionSheetFooter;
    'heading': string;
    'keyboardClose': boolean;
    'onActionSelected': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'onDidDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'onWillDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'overlayId': number;
    'present': () => Promise<void>;
    'willAnimate': boolean;
  }
  interface YooActionSheetAttributes extends StencilHTMLAttributes {
    'buttons'?: IActionSheetButton[];
    'cardHeader'?: IActionSheetCardHeader;
    'cssClass'?: string;
    'footer'?: IActionSheetFooter;
    'heading'?: string;
    'keyboardClose'?: boolean;
    'onActionSelected'?: (event: CustomEvent<IActionSheetButton>) => void;
    'onActionSheetClosed'?: (event: CustomEvent<boolean>) => void;
    'onIonActionSheetDidDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    'onIonActionSheetDidPresent'?: (event: CustomEvent<void>) => void;
    'onIonActionSheetWillDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    'onIonActionSheetWillPresent'?: (event: CustomEvent<void>) => void;
    'overlayId'?: number;
    'willAnimate'?: boolean;
  }

  interface YooAlert {
    'buttons': Array<IAlertButton>;
    'cssClass': string;
    'dismiss': (data?: any, role?: string, overlayDismiss?: boolean) => Promise<void>;
    'header': string;
    'icon': string;
    'img': string;
    'keyboardClose': boolean;
    'message': string;
    'onDidDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'onWillDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'overlayId': number;
    'present': () => Promise<void>;
    'rename': boolean;
    'renameValue': string;
    'willAnimate': boolean;
  }
  interface YooAlertAttributes extends StencilHTMLAttributes {
    'buttons'?: Array<IAlertButton>;
    'cssClass'?: string;
    'header'?: string;
    'icon'?: string;
    'img'?: string;
    'keyboardClose'?: boolean;
    'message'?: string;
    'onIonAlertDidDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    'onIonAlertDidPresent'?: (event: CustomEvent<void>) => void;
    'onIonAlertWillDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    'onIonAlertWillPresent'?: (event: CustomEvent<void>) => void;
    'overlayId'?: number;
    'rename'?: boolean;
    'renameValue'?: string;
    'willAnimate'?: boolean;
  }

  interface YooAudioPlayer {
    '_downloadURL'?: string;
    'displayMode'?: string;
  }
  interface YooAudioPlayerAttributes extends StencilHTMLAttributes {
    '_downloadURL'?: string;
    'displayMode'?: string;
  }

  interface YooAvatar {
    'bottomLeftIcon': string;
    'bottomRightIcon': string;
    'hasPending': boolean;
    'icon': string;
    'iconText': string;
    'imgSrc': string;
    'reversedColor': boolean;
    'topLeftIcon': string;
    'topRightIcon': string;
    'user': IUser;
  }
  interface YooAvatarAttributes extends StencilHTMLAttributes {
    'bottomLeftIcon'?: string;
    'bottomRightIcon'?: string;
    'hasPending'?: boolean;
    'icon'?: string;
    'iconText'?: string;
    'imgSrc'?: string;
    'onBottomLeftClicked'?: (event: CustomEvent<boolean>) => void;
    'onBottomRightClicked'?: (event: CustomEvent<boolean>) => void;
    'onTopLeftClicked'?: (event: CustomEvent<boolean>) => void;
    'onTopRightClicked'?: (event: CustomEvent<boolean>) => void;
    'reversedColor'?: boolean;
    'topLeftIcon'?: string;
    'topRightIcon'?: string;
    'user'?: IUser;
  }

  interface YooBadge {
    'closable': boolean;
    'iconLeft': string;
    'iconRight': string;
    'isHistory': boolean;
    'text': string;
  }
  interface YooBadgeAttributes extends StencilHTMLAttributes {
    'closable'?: boolean;
    'iconLeft'?: string;
    'iconRight'?: string;
    'isHistory'?: boolean;
    'onLeftIconClicked'?: (event: CustomEvent<boolean>) => void;
    'onRightIconClicked'?: (event: CustomEvent<boolean>) => void;
    'onTagClosed'?: (event: CustomEvent<boolean>) => void;
    'text'?: string;
  }

  interface YooBanner {
    'animationName': string;
    'closeable': boolean;
    'heading': string;
    'icon': string;
    'link': string;
    'text': string;
  }
  interface YooBannerAttributes extends StencilHTMLAttributes {
    'animationName'?: string;
    'closeable'?: boolean;
    'heading'?: string;
    'icon'?: string;
    'link'?: string;
    'onAlertActionSelected'?: (event: CustomEvent<boolean>) => void;
    'onAlertClosed'?: (event: CustomEvent<boolean>) => void;
    'text'?: string;
  }

  interface YooBreadcrumbs {
    'items': string[];
  }
  interface YooBreadcrumbsAttributes extends StencilHTMLAttributes {
    'items'?: string[];
    'onItemSelected'?: (event: CustomEvent<string>) => void;
  }

  interface YooButtonGroup {
    'dropdownTitle': string;
    'isDropdown': boolean;
  }
  interface YooButtonGroupAttributes extends StencilHTMLAttributes {
    'dropdownTitle'?: string;
    'isDropdown'?: boolean;
  }

  interface YooButton {
    'badge': string;
    'badgeClass': string;
    'bgColor': string;
    'disabled': boolean;
    'icon': string;
    'isLoading': boolean;
    'setMaxWidth': boolean;
    'text': string;
    'translateText': boolean;
  }
  interface YooButtonAttributes extends StencilHTMLAttributes {
    'badge'?: string;
    'badgeClass'?: string;
    'bgColor'?: string;
    'disabled'?: boolean;
    'icon'?: string;
    'isLoading'?: boolean;
    'setMaxWidth'?: boolean;
    'text'?: string;
    'translateText'?: boolean;
  }

  interface YooCalendar {
    'activeDay': Date;
    'dateRange': Date[];
    'displayMode': CalendarDisplayMode;
    'isDatePicker': boolean;
    'isRange': boolean;
    'markers': Array<ICalendarMarker>;
    'maxDate': Date;
    'minDate': Date;
    'setActiveDay': (day: Date) => void;
    'setDisplayMode': (mode: CalendarDisplayMode) => void;
  }
  interface YooCalendarAttributes extends StencilHTMLAttributes {
    'activeDay'?: Date;
    'dateRange'?: Date[];
    'displayMode'?: CalendarDisplayMode;
    'isDatePicker'?: boolean;
    'isRange'?: boolean;
    'markers'?: Array<ICalendarMarker>;
    'maxDate'?: Date;
    'minDate'?: Date;
    'onDateChanged'?: (event: CustomEvent<IDateChange>) => void;
    'onDateRangeChanged'?: (event: CustomEvent<IDateChange[]>) => void;
    'onDayClicked'?: (event: CustomEvent<boolean>) => void;
    'onDisplayModeChanged'?: (event: CustomEvent<CalendarDisplayMode>) => void;
    'onExtraMonthsLoaded'?: (event: CustomEvent<IDateChange>) => void;
    'onSwipeHorizontal'?: (event: CustomEvent<string>) => void;
    'onTodaySelected'?: (event: CustomEvent<Date>) => void;
  }

  interface YooChatMessage {
    'hideEmptyCheckbox': boolean;
    'isFirst': boolean;
    'isGroup': boolean;
    'isLast': boolean;
    'isNextImage': boolean;
    'message': IChatMessage;
  }
  interface YooChatMessageAttributes extends StencilHTMLAttributes {
    'hideEmptyCheckbox'?: boolean;
    'isFirst'?: boolean;
    'isGroup'?: boolean;
    'isLast'?: boolean;
    'isNextImage'?: boolean;
    'message'?: IChatMessage;
    'onClicked'?: (event: CustomEvent<boolean>) => void;
    'onConferenceMessageClicked'?: (event: CustomEvent<string>) => void;
  }

  interface YooChat {
    'closeIcon': string;
    'deleteModeEnabled': boolean;
    'displayLoadMore': boolean;
    'enableKeyboardResizing': boolean;
    'heading': string;
    'inputPlaceHolder': string;
    'isMultiple': boolean;
    'messages': IChatMessage[];
    'scrollToBottom': () => Promise<void>;
    'scrollToTop': () => Promise<void>;
    'usersTyping': {};
  }
  interface YooChatAttributes extends StencilHTMLAttributes {
    'closeIcon'?: string;
    'deleteModeEnabled'?: boolean;
    'displayLoadMore'?: boolean;
    'enableKeyboardResizing'?: boolean;
    'heading'?: string;
    'inputPlaceHolder'?: string;
    'isMultiple'?: boolean;
    'messages'?: IChatMessage[];
    'onCloseDeleteMode'?: (event: CustomEvent<boolean>) => void;
    'onClosePage'?: (event: CustomEvent<boolean>) => void;
    'onConferenceMessageClicked'?: (event: CustomEvent<string>) => void;
    'onDeleteMessages'?: (event: CustomEvent<boolean>) => void;
    'onIsTyping'?: (event: CustomEvent<boolean>) => void;
    'onLoadMoreClicked'?: (event: CustomEvent<boolean>) => void;
    'onSelected'?: (event: CustomEvent<Array<number>>) => void;
    'onSendChatPicture'?: (event: CustomEvent<string>) => void;
    'onSendText'?: (event: CustomEvent<string>) => void;
    'onShowMore'?: (event: CustomEvent<boolean>) => void;
    'usersTyping'?: {};
  }

  interface YooColorSelector {
    /**
    * Array of colors to show in the selector, the user will be able to pick amongst any of these
    */
    'colors': string[];
    /**
    * Determines whether we should show a tick icon or not when the color is selected; if false, the colors will be animated
    */
    'showTickIcon': boolean;
  }
  interface YooColorSelectorAttributes extends StencilHTMLAttributes {
    /**
    * Array of colors to show in the selector, the user will be able to pick amongst any of these
    */
    'colors'?: string[];
    'onColorChanged'?: (event: CustomEvent<string>) => void;
    /**
    * Determines whether we should show a tick icon or not when the color is selected; if false, the colors will be animated
    */
    'showTickIcon'?: boolean;
  }

  interface YooContextMenu {
    'close': () => void;
    'contentButtons': Array<IButton>;
    'contentPosition': { top: string, right: string, bottom: string, left: string };
    'insideScroll': boolean;
    'open': () => void;
  }
  interface YooContextMenuAttributes extends StencilHTMLAttributes {
    'contentButtons'?: Array<IButton>;
    'contentPosition'?: { top: string, right: string, bottom: string, left: string };
    'insideScroll'?: boolean;
    'onContextMenuClosed'?: (event: CustomEvent<boolean>) => void;
    'onContextMenuOpened'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooCountDown {
    'start': number;
  }
  interface YooCountDownAttributes extends StencilHTMLAttributes {
    'onFinish'?: (event: CustomEvent<any>) => void;
    'start'?: number;
  }

  interface YooDate {
    'date': Date;
    'format': string;
    'getPausedTime': () => Promise<number>;
    'pauseTimer': () => void;
    'resumeTimer': () => void;
    'startTime'?: number;
    'timerMode'?: boolean;
  }
  interface YooDateAttributes extends StencilHTMLAttributes {
    'date'?: Date;
    'format'?: string;
    'startTime'?: number;
    'timerMode'?: boolean;
  }

  interface YooDevice {
    /**
    * The device type to display, some devices may not have color options
    */
    'deviceEntry': IDeviceEntry;
  }
  interface YooDeviceAttributes extends StencilHTMLAttributes {
    /**
    * The device type to display, some devices may not have color options
    */
    'deviceEntry'?: IDeviceEntry;
  }

  interface YooEmptyState {
    'emptyText': string;
    'fadeIn': boolean;
    'hasText': boolean;
    'type': string;
  }
  interface YooEmptyStateAttributes extends StencilHTMLAttributes {
    'emptyText'?: string;
    'fadeIn'?: boolean;
    'hasText'?: boolean;
    'type'?: string;
  }

  interface YooFabButton {
    'activated': boolean;
    'buttonClass': string;
    'disabled': boolean;
    'fabEntry': IButton;
    'icon': string;
    'label': string;
    'parentHasList': boolean;
    'text': string;
    'toggleActive': Function;
  }
  interface YooFabButtonAttributes extends StencilHTMLAttributes {
    'activated'?: boolean;
    'buttonClass'?: string;
    'disabled'?: boolean;
    'fabEntry'?: IButton;
    'icon'?: string;
    'label'?: string;
    'parentHasList'?: boolean;
    'text'?: string;
    'toggleActive'?: Function;
  }

  interface YooFabContainer {
    'animated': boolean;
  }
  interface YooFabContainerAttributes extends StencilHTMLAttributes {
    'animated'?: boolean;
  }

  interface YooFabList {
    'activated': boolean;
    'animated': boolean;
    'mini': boolean;
    'side': string;
  }
  interface YooFabListAttributes extends StencilHTMLAttributes {
    'activated'?: boolean;
    'animated'?: boolean;
    'mini'?: boolean;
    'side'?: string;
  }

  interface YooIcon {}
  interface YooIconAttributes extends StencilHTMLAttributes {}

  interface YooImg {
    'alt': string;
    'contain': boolean;
    'disabled': boolean;
    'height': string;
    'loadStrategy': 'on-visible' | 'instant';
    'showFallback': boolean;
    'src': string;
    'type': 'back' | 'image';
  }
  interface YooImgAttributes extends StencilHTMLAttributes {
    'alt'?: string;
    'contain'?: boolean;
    'disabled'?: boolean;
    'height'?: string;
    'loadStrategy'?: 'on-visible' | 'instant';
    'onImageLoaded'?: (event: CustomEvent<any>) => void;
    'showFallback'?: boolean;
    'src'?: string;
    'type'?: 'back' | 'image';
  }

  interface YooInfoText {
    'text': string;
  }
  interface YooInfoTextAttributes extends StencilHTMLAttributes {
    'text'?: string;
  }

  interface YooInputBar {
    'actionText': string;
    'focusInputField': (hasText?: boolean) => void;
    'focusOnOpen': boolean;
    'icon': string;
    'iconAction': string;
    'keepFocusAfterAction': boolean;
    'placeholder': string;
    'replyToUser': IUser;
    'topIndication': string;
    'value': string;
  }
  interface YooInputBarAttributes extends StencilHTMLAttributes {
    'actionText'?: string;
    'focusOnOpen'?: boolean;
    'icon'?: string;
    'iconAction'?: string;
    'keepFocusAfterAction'?: boolean;
    'onBrowseLibrary'?: (event: CustomEvent<boolean>) => void;
    'onIconClicked'?: (event: CustomEvent<boolean>) => void;
    'onIsTyping'?: (event: CustomEvent<boolean>) => void;
    'onReplyCancelled'?: (event: CustomEvent<boolean>) => void;
    'onRowNumberChanged'?: (event: CustomEvent<boolean>) => void;
    'onSendPicture'?: (event: CustomEvent<string>) => void;
    'onSendText'?: (event: CustomEvent<string>) => void;
    'placeholder'?: string;
    'replyToUser'?: IUser;
    'topIndication'?: string;
    'value'?: string;
  }

  interface YooLoader {
    'height': number;
    'maxValue': number;
    'progress': number;
    'showFinishAnimation': boolean;
    'showLoadingAnimation': () => void;
    'text': string;
  }
  interface YooLoaderAttributes extends StencilHTMLAttributes {
    'height'?: number;
    'maxValue'?: number;
    'onAnimationCompleted'?: (event: CustomEvent<boolean>) => void;
    'progress'?: number;
    'showFinishAnimation'?: boolean;
    'text'?: string;
  }

  interface YooMobileTabbar {
    'items': Array<IMobileTabbarItem>;
    'setActiveIcon': (index: number) => void;
  }
  interface YooMobileTabbarAttributes extends StencilHTMLAttributes {
    'items'?: Array<IMobileTabbarItem>;
    'onTabChanged'?: (event: CustomEvent<IMobileTabbarItem>) => void;
  }

  interface YooModal {
    'animationName': string;
    'animationProp': IAnimationProp;
    'close': () => void;
    'closeIcon': boolean;
    'content': HTMLElement;
    'cssClass': string;
    /**
    * Dismiss the modal overlay after it has been presented.
    */
    'dismiss': (data?: any, role?: string) => Promise<void>;
    'footerText': string;
    'hasFooter': boolean;
    'hasHeader': boolean;
    'heading': string;
    'headingIcons': IModalIcon[];
    'overlayId': number;
    'primaryButtonText': string;
    'primaryFn': Function;
    'resize': () => void;
    'scrollEnabled': boolean;
    'secondaryButtonText': string;
    'withYooCtrl': boolean;
  }
  interface YooModalAttributes extends StencilHTMLAttributes {
    'animationName'?: string;
    'animationProp'?: IAnimationProp;
    'closeIcon'?: boolean;
    'content'?: HTMLElement;
    'cssClass'?: string;
    'footerText'?: string;
    'hasFooter'?: boolean;
    'hasHeader'?: boolean;
    'heading'?: string;
    'headingIcons'?: IModalIcon[];
    'onClosed'?: (event: CustomEvent<boolean>) => void;
    'onPrimaryButtonClicked'?: (event: CustomEvent<boolean>) => void;
    'overlayId'?: number;
    'primaryButtonText'?: string;
    'primaryFn'?: Function;
    'scrollEnabled'?: boolean;
    'secondaryButtonText'?: string;
    'withYooCtrl'?: boolean;
  }

  interface YooNavbar {
    'actionBtnText': string;
    'getActiveIndex': () => Promise<number>;
    'scrollTabs': boolean;
    'selectedSwipeIndex': number;
    'selectedTab': INavBarTab;
    'setActive': (i: number) => void;
    'swipeableIndicator': boolean;
    'tabs': Array<INavBarTab>;
    'withLine': boolean;
  }
  interface YooNavbarAttributes extends StencilHTMLAttributes {
    'actionBtnText'?: string;
    'onActionButtonClicked'?: (event: CustomEvent<boolean>) => void;
    'onTabSelected'?: (event: CustomEvent<INavBarTab>) => void;
    'onTabSelectedIsToRight'?: (event: CustomEvent<boolean>) => void;
    'scrollTabs'?: boolean;
    'selectedSwipeIndex'?: number;
    'selectedTab'?: INavBarTab;
    'swipeableIndicator'?: boolean;
    'tabs'?: Array<INavBarTab>;
    'withLine'?: boolean;
  }

  interface YooPagination {
    'currentPage': number;
    'itemsPerPage': number;
    'maxPagerSize': number;
    'showTotal': boolean;
    'totalItems': number;
  }
  interface YooPaginationAttributes extends StencilHTMLAttributes {
    'currentPage'?: number;
    'itemsPerPage'?: number;
    'maxPagerSize'?: number;
    'onItemsPerPageChanged'?: (event: CustomEvent<number>) => void;
    'onPageChanged'?: (event: CustomEvent<any>) => void;
    'showTotal'?: boolean;
    'totalItems'?: number;
  }

  interface YooPolyglot {
    'text': string;
  }
  interface YooPolyglotAttributes extends StencilHTMLAttributes {
    'text'?: string;
  }

  interface YooProgressBarCircle {
    'addBaseClass': Function;
    'allowNonAvailableValue': boolean;
    'getFormatedLabelToDisplay': Function;
    'percentColorScheme': boolean;
    'progressAnimationDuration': number;
    'progressColorClassAttribute': Function;
    'progressCoreParameters': IProgressCore;
    'progressCustomParameters': IProgressCircle;
    'progressInstance': any;
    'progressLabelClassAttribute': string;
    'progressUnitLabel': string;
    'progressValue': number;
  }
  interface YooProgressBarCircleAttributes extends StencilHTMLAttributes {
    'addBaseClass'?: Function;
    'allowNonAvailableValue'?: boolean;
    'getFormatedLabelToDisplay'?: Function;
    'onSendTimerCountDownState'?: (event: CustomEvent<number>) => void;
    'onTimeFinished'?: (event: CustomEvent<any>) => void;
    'percentColorScheme'?: boolean;
    'progressAnimationDuration'?: number;
    'progressColorClassAttribute'?: Function;
    'progressCoreParameters'?: IProgressCore;
    'progressCustomParameters'?: IProgressCircle;
    'progressInstance'?: any;
    'progressLabelClassAttribute'?: string;
    'progressUnitLabel'?: string;
    'progressValue'?: number;
  }

  interface YooProgressBarCore {
    'allowNonAvailableValue': boolean;
    'currentStep': number;
    'horizontalAlign': 'left' | 'middle' | 'right';
    'maxStep': number;
    'maxValue': number;
    'percentColorScheme': boolean;
    'progressAnimationDuration': number;
    'progressLabelColor': 'success' | 'danger' | 'dark' | 'danger-light';
    'progressLabelFontSize': 'small' | 'medium' | 'large' | 'extra-large';
    'progressParameters': any;
    'progressUnitLabel': 'percentage' | 'points' | 'step' | 'none';
    'progressValue': number;
    'shape': 'line' | 'circle' | 'semi-circle';
    'verticalAlign': 'top' | 'middle' | 'bottom';
  }
  interface YooProgressBarCoreAttributes extends StencilHTMLAttributes {
    'allowNonAvailableValue'?: boolean;
    'currentStep'?: number;
    'horizontalAlign'?: 'left' | 'middle' | 'right';
    'maxStep'?: number;
    'maxValue'?: number;
    'percentColorScheme'?: boolean;
    'progressAnimationDuration'?: number;
    'progressLabelColor'?: 'success' | 'danger' | 'dark' | 'danger-light';
    'progressLabelFontSize'?: 'small' | 'medium' | 'large' | 'extra-large';
    'progressParameters'?: any;
    'progressUnitLabel'?: 'percentage' | 'points' | 'step' | 'none';
    'progressValue'?: number;
    'shape'?: 'line' | 'circle' | 'semi-circle';
    'verticalAlign'?: 'top' | 'middle' | 'bottom';
  }

  interface YooProgressBarLine {
    'addBaseClass': Function;
    'allowNonAvailableValue': boolean;
    'getFormatedLabelToDisplay': Function;
    'percentColorScheme': boolean;
    'progressAnimationDuration': number;
    'progressColorClassAttribute': Function;
    'progressCoreParameters': IProgressCore;
    'progressCustomParameters': IProgressLine;
    'progressInstance': any;
    'progressLabelClassAttribute': string;
    'progressStepValues': Array<number>;
    'progressUnitLabel': string;
    'progressValue': number;
  }
  interface YooProgressBarLineAttributes extends StencilHTMLAttributes {
    'addBaseClass'?: Function;
    'allowNonAvailableValue'?: boolean;
    'getFormatedLabelToDisplay'?: Function;
    'percentColorScheme'?: boolean;
    'progressAnimationDuration'?: number;
    'progressColorClassAttribute'?: Function;
    'progressCoreParameters'?: IProgressCore;
    'progressCustomParameters'?: IProgressLine;
    'progressInstance'?: any;
    'progressLabelClassAttribute'?: string;
    'progressStepValues'?: Array<number>;
    'progressUnitLabel'?: string;
    'progressValue'?: number;
  }

  interface YooProgressBarSemiCircle {
    'addBaseClass': Function;
    'allowNonAvailableValue': boolean;
    'getFormatedLabelToDisplay': Function;
    'percentColorScheme': boolean;
    'progressAnimationDuration': number;
    'progressColorClassAttribute': Function;
    'progressCoreParameters': IProgressCore;
    'progressCustomParameters': IProgressSemiCircle;
    'progressInstance': any;
    'progressLabelClassAttribute': string;
    'progressUnitLabel': string;
    'progressValue': number;
  }
  interface YooProgressBarSemiCircleAttributes extends StencilHTMLAttributes {
    'addBaseClass'?: Function;
    'allowNonAvailableValue'?: boolean;
    'getFormatedLabelToDisplay'?: Function;
    'percentColorScheme'?: boolean;
    'progressAnimationDuration'?: number;
    'progressColorClassAttribute'?: Function;
    'progressCoreParameters'?: IProgressCore;
    'progressCustomParameters'?: IProgressSemiCircle;
    'progressInstance'?: any;
    'progressLabelClassAttribute'?: string;
    'progressUnitLabel'?: string;
    'progressValue'?: number;
  }

  interface YooProgressLoader {
    'logo': string;
    'progress': number;
    'progressBarClass': string;
  }
  interface YooProgressLoaderAttributes extends StencilHTMLAttributes {
    'logo'?: string;
    'progress'?: number;
    'progressBarClass'?: string;
  }

  interface YooPropertyCard {
    'extraClass'?: string;
    'properties': Array<IProperty>;
  }
  interface YooPropertyCardAttributes extends StencilHTMLAttributes {
    'extraClass'?: string;
    'properties'?: Array<IProperty>;
  }

  interface YooResultDialog {
    'buttonText': string;
    'heading': string;
    'subheading': string;
    'success': boolean;
  }
  interface YooResultDialogAttributes extends StencilHTMLAttributes {
    'buttonText'?: string;
    'heading'?: string;
    'onClose'?: (event: CustomEvent<string>) => void;
    'subheading'?: string;
    'success'?: boolean;
  }

  interface YooSliderScale {
    'sliderValue': number;
    'triangleBackgroundColor': string;
    'type': 'range' | 'scale';
  }
  interface YooSliderScaleAttributes extends StencilHTMLAttributes {
    'sliderValue'?: number;
    'triangleBackgroundColor'?: string;
    'type'?: 'range' | 'scale';
  }

  interface YooSlider {
    'isDoubleSlider': boolean;
    'maxValue': number;
    'minValue': number;
    'orientation': 'horizontal' | 'vertical';
    'primaryValue': number;
    'secondaryValue': number;
    'showTriangleBackground': boolean;
  }
  interface YooSliderAttributes extends StencilHTMLAttributes {
    'isDoubleSlider'?: boolean;
    'maxValue'?: number;
    'minValue'?: number;
    'onSingleSliderChanged'?: (event: CustomEvent<number>) => void;
    'orientation'?: 'horizontal' | 'vertical';
    'primaryValue'?: number;
    'secondaryValue'?: number;
    'showTriangleBackground'?: boolean;
  }

  interface YooSticky {
    'bottom': string;
    'top': string;
  }
  interface YooStickyAttributes extends StencilHTMLAttributes {
    'bottom'?: string;
    'top'?: string;
  }

  interface YooSwipeContainer {
    'controlOnly': boolean;
    'hammerOptions': IHammerOptions;
    'showSwipeControl': boolean;
  }
  interface YooSwipeContainerAttributes extends StencilHTMLAttributes {
    'controlOnly'?: boolean;
    'hammerOptions'?: IHammerOptions;
    'onSwipedDown'?: (event: CustomEvent<boolean>) => void;
    'onSwipedUp'?: (event: CustomEvent<boolean>) => void;
    'showSwipeControl'?: boolean;
  }

  interface YooTabs {
    'numberTabsDisplayed': number;
    'selected': number;
    'titles': string[];
  }
  interface YooTabsAttributes extends StencilHTMLAttributes {
    'numberTabsDisplayed'?: number;
    'onTabChanged'?: (event: CustomEvent<string>) => void;
    'selected'?: number;
    'titles'?: string[];
  }

  interface YooTappable {}
  interface YooTappableAttributes extends StencilHTMLAttributes {}

  interface YooTextTruncate {
    'animationLoadTime': number;
    'content': string;
    'getSingleLineButttonElement': () => Promise<HTMLElement>;
    'getSingleLineTextElement': () => Promise<HTMLElement>;
    'hideMoreButton': boolean;
    'hideText': () => void;
    'maxLine': number;
    'showBreakLine': boolean;
    'showText': () => void;
    'updateTruncate': () => void;
  }
  interface YooTextTruncateAttributes extends StencilHTMLAttributes {
    'animationLoadTime'?: number;
    'content'?: string;
    'hideMoreButton'?: boolean;
    'maxLine'?: number;
    'onStatusChanges'?: (event: CustomEvent<ITextTruncate>) => void;
    'onTextTruncateLoaded'?: (event: CustomEvent<any>) => void;
    'onToggled'?: (event: CustomEvent<boolean>) => void;
    'showBreakLine'?: boolean;
  }

  interface YooTile {
    'icon': string;
    'text': string;
    'value': string;
  }
  interface YooTileAttributes extends StencilHTMLAttributes {
    'icon'?: string;
    'text'?: string;
    'value'?: string;
  }

  interface YooToast {
    'closeButtonText': string;
    'count': number;
    'cssClass': string;
    'dismiss': (data?: any, role?: string, overlayDismiss?: boolean) => Promise<void>;
    'duration': number;
    'extraButtons': Array<IEntityAction | IEntitiesAction>;
    'icon': string;
    'image': string;
    'keyboardClose': boolean;
    'message': string;
    'onDidDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'onWillDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'overlayId': number;
    'position': ToastPosition;
    'present': () => Promise<void>;
    'progressEvent': any;
    'showBackdrop': boolean;
    'showCloseButton': boolean;
    'willAnimate': boolean;
  }
  interface YooToastAttributes extends StencilHTMLAttributes {
    'closeButtonText'?: string;
    'count'?: number;
    'cssClass'?: string;
    'duration'?: number;
    'extraButtons'?: Array<IEntityAction | IEntitiesAction>;
    'icon'?: string;
    'image'?: string;
    'keyboardClose'?: boolean;
    'message'?: string;
    'onIonToastDidDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    'onIonToastDidPresent'?: (event: CustomEvent<void>) => void;
    'onIonToastWillDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    'onIonToastWillPresent'?: (event: CustomEvent<void>) => void;
    'overlayId'?: number;
    'position'?: ToastPosition;
    'progressEvent'?: any;
    'showBackdrop'?: boolean;
    'showCloseButton'?: boolean;
    'willAnimate'?: boolean;
  }

  interface YooToolbar {
    'actions': IActionBar[];
    'showActive': boolean;
  }
  interface YooToolbarAttributes extends StencilHTMLAttributes {
    'actions'?: IActionBar[];
    'showActive'?: boolean;
  }

  interface YooTooltip {
    'content': string;
    'cssOnly': boolean;
    'options': any;
    'placement': 'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'auto';
  }
  interface YooTooltipAttributes extends StencilHTMLAttributes {
    'content'?: string;
    'cssOnly'?: boolean;
    'options'?: any;
    'placement'?: 'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'auto';
  }

  interface YooTransition {
    'heading': string;
    'icon': string;
    'image': string;
    'subHeading': string;
    'type': 'fade' | 'bottom' | 'icon' | 'image' | 'heading' | 'scale-up';
  }
  interface YooTransitionAttributes extends StencilHTMLAttributes {
    'heading'?: string;
    'icon'?: string;
    'image'?: string;
    'subHeading'?: string;
    'type'?: 'fade' | 'bottom' | 'icon' | 'image' | 'heading' | 'scale-up';
  }

  interface YooWebMenu {
    /**
    * The name of the active page
    */
    'activePage': string;
    'leftEntry': IWebMenuEntry;
    'rightEntry': IWebMenuEntry;
  }
  interface YooWebMenuAttributes extends StencilHTMLAttributes {
    /**
    * The name of the active page
    */
    'activePage'?: string;
    'leftEntry'?: IWebMenuEntry;
    'onItemClicked'?: (event: CustomEvent<IWebMenuItem>) => void;
    'onPreviewIconMoved'?: (event: CustomEvent<number>) => void;
    'onSearchClicked'?: (event: CustomEvent<void>) => void;
    'rightEntry'?: IWebMenuEntry;
  }

  interface YooZoom {
    'initialScale': number;
    'lockPan': boolean;
  }
  interface YooZoomAttributes extends StencilHTMLAttributes {
    'initialScale'?: number;
    'lockPan'?: boolean;
    'onPinched'?: (event: CustomEvent<boolean>) => void;
    'onTransformsChanged'?: (event: CustomEvent<IZoomTransform>) => void;
  }

  interface YooBackgroundBlur {
    'height': number;
    'imageUrl': string;
    'width': number;
  }
  interface YooBackgroundBlurAttributes extends StencilHTMLAttributes {
    'height'?: number;
    'imageUrl'?: string;
    'width'?: number;
  }

  interface YooCardCell {
    'entry': ICardCellEntry;
  }
  interface YooCardCellAttributes extends StencilHTMLAttributes {
    'entry'?: ICardCellEntry;
    'onMoreActionsClicked'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooCardCourseRow {
    'entry': ICourse;
  }
  interface YooCardCourseRowAttributes extends StencilHTMLAttributes {
    'entry'?: ICourse;
  }

  interface YooCardCourse {
    'entry': ICourse;
  }
  interface YooCardCourseAttributes extends StencilHTMLAttributes {
    'entry'?: ICourse;
  }

  interface YooCardFeed {
    'entry': ICardEntry;
  }
  interface YooCardFeedAttributes extends StencilHTMLAttributes {
    'entry'?: ICardEntry;
    'onBottomActionClicked'?: (event: CustomEvent<boolean>) => void;
    'onGroupClicked'?: (event: CustomEvent<any>) => void;
    'onViewMoreToggled'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooCardFile {
    '_downloadURL'?: string;
    'heading': string;
    'icon': string;
    'iconClass': string;
    'imgSrc': string;
    'isClosable': boolean;
    'subheading': string;
    'type'?: string;
  }
  interface YooCardFileAttributes extends StencilHTMLAttributes {
    '_downloadURL'?: string;
    'heading'?: string;
    'icon'?: string;
    'iconClass'?: string;
    'imgSrc'?: string;
    'isClosable'?: boolean;
    'subheading'?: string;
    'type'?: string;
  }

  interface YooCardImage {
    'entry': ICardImageEntry;
  }
  interface YooCardImageAttributes extends StencilHTMLAttributes {
    'entry'?: ICardImageEntry;
  }

  interface YooCardLesson {
    'lesson': ILesson;
  }
  interface YooCardLessonAttributes extends StencilHTMLAttributes {
    'lesson'?: ILesson;
  }

  interface YooCardList {
    'actionButtonTitle': string;
    'animationName': string;
    'avatarImgs': string[];
    'entry': ICardListEntry;
    'isActivable': boolean;
    'isCollapsed': boolean;
  }
  interface YooCardListAttributes extends StencilHTMLAttributes {
    'actionButtonTitle'?: string;
    'animationName'?: string;
    'avatarImgs'?: string[];
    'entry'?: ICardListEntry;
    'isActivable'?: boolean;
    'isCollapsed'?: boolean;
    'onActionPress'?: (event: CustomEvent<boolean>) => void;
    'onActive'?: (event: CustomEvent<boolean>) => void;
    'onListCollapsed'?: (event: CustomEvent<{ collapsed: boolean, item: ICardListEntry }>) => void;
  }

  interface YooCardMedia {
    /**
    * List of action and its handler
    */
    'bottomActions'?: Array<IEntityAction>;
    /**
    * List of extra action and its handler
    */
    'extraActions'?: Array<IEntityAction>;
    /**
    * Card media require participant which contains userInfo and media stream
    */
    'participant': IParticipant;
  }
  interface YooCardMediaAttributes extends StencilHTMLAttributes {
    /**
    * List of action and its handler
    */
    'bottomActions'?: Array<IEntityAction>;
    /**
    * List of extra action and its handler
    */
    'extraActions'?: Array<IEntityAction>;
    /**
    * Card media require participant which contains userInfo and media stream
    */
    'participant'?: IParticipant;
  }

  interface YooCardPlaceholder {
    'displayType': CardType;
    'entityType': EntityType;
    'header': string;
  }
  interface YooCardPlaceholderAttributes extends StencilHTMLAttributes {
    'displayType'?: CardType;
    'entityType'?: EntityType;
    'header'?: string;
  }

  interface YooCardQuestion {
    'entry': ICardEntry;
  }
  interface YooCardQuestionAttributes extends StencilHTMLAttributes {
    'entry'?: ICardEntry;
    'onBottomActionClicked'?: (event: CustomEvent<boolean>) => void;
    'onViewMoreToggled'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooCardSticky {
    'entry': ICardStickyEntry;
    'type'?: string;
  }
  interface YooCardStickyAttributes extends StencilHTMLAttributes {
    'entry'?: ICardStickyEntry;
    'type'?: string;
  }

  interface YooCard {
    'actionButtonTitle': string;
    'animationName': string;
    'avatarImgs': string[];
    'avatarShape': string;
    'badges': IBadgeEntry[];
    'bottomLeftBadge': string;
    'bottomRightBadge': string;
    'date': string;
    'hasMenu': boolean;
    'heading': string;
    'imgSrc': string;
    'isActivable': boolean;
    'isUserCard': boolean;
    'subheadings': string[];
    'topLeftBadge': string;
    'topRightBadge': string;
  }
  interface YooCardAttributes extends StencilHTMLAttributes {
    'actionButtonTitle'?: string;
    'animationName'?: string;
    'avatarImgs'?: string[];
    'avatarShape'?: string;
    'badges'?: IBadgeEntry[];
    'bottomLeftBadge'?: string;
    'bottomRightBadge'?: string;
    'date'?: string;
    'hasMenu'?: boolean;
    'heading'?: string;
    'imgSrc'?: string;
    'isActivable'?: boolean;
    'isUserCard'?: boolean;
    'onActionPress'?: (event: CustomEvent<boolean>) => void;
    'onActive'?: (event: CustomEvent<boolean>) => void;
    'subheadings'?: string[];
    'topLeftBadge'?: string;
    'topRightBadge'?: string;
  }

  interface YooEntitySearchDialog {
    'model': IAppSearchTab;
    'values': { filters: Array<IEntitySearchFilters>, sorts: Array<ISort> };
  }
  interface YooEntitySearchDialogAttributes extends StencilHTMLAttributes {
    'model'?: IAppSearchTab;
    'onFieldFetchData'?: (event: CustomEvent<IFormSearch>) => void;
    'values'?: { filters: Array<IEntitySearchFilters>, sorts: Array<ISort> };
  }

  interface YooEntitySearchFilters {
    'fields': Array<IFormField>;
    'header': string;
    'values': Array<IEntitySearchFilters>;
  }
  interface YooEntitySearchFiltersAttributes extends StencilHTMLAttributes {
    'fields'?: Array<IFormField>;
    'header'?: string;
    'onFieldFetchData'?: (event: CustomEvent<IFormSearch>) => void;
    'onFilter'?: (event: CustomEvent<Array<IEntitySearchFilters>>) => void;
    'values'?: Array<IEntitySearchFilters>;
  }

  interface YooEntitySearchRecent {
    'header': string;
    'setValues': (values: string[]) => void;
    'values': Array<string>;
  }
  interface YooEntitySearchRecentAttributes extends StencilHTMLAttributes {
    'header'?: string;
    'onClear'?: (event: CustomEvent<boolean>) => void;
    'onSelect'?: (event: CustomEvent<string>) => void;
    'values'?: Array<string>;
  }

  interface YooEntitySearchSorts {
    'fields': Array<IFormField>;
    'header': string;
    'values': Array<ISort>;
  }
  interface YooEntitySearchSortsAttributes extends StencilHTMLAttributes {
    'fields'?: Array<IFormField>;
    'header'?: string;
    'onSort'?: (event: CustomEvent<Array<ISort>>) => void;
    'values'?: Array<ISort>;
  }

  interface YooEntitySearchTags {
    'hideAdvancedFilters': boolean;
    'sortsAndFilters': { filters: Array<IEntitySearchFilters>, sorts: Array<ISort> };
    'tags': Array<any>;
    'values': Array<IEntitySearchTags>;
  }
  interface YooEntitySearchTagsAttributes extends StencilHTMLAttributes {
    'hideAdvancedFilters'?: boolean;
    'onFilterAdvanced'?: (event: CustomEvent<boolean>) => void;
    'onSelect'?: (event: CustomEvent<Array<IEntitySearchTags>>) => void;
    'sortsAndFilters'?: { filters: Array<IEntitySearchFilters>, sorts: Array<ISort> };
    'tags'?: Array<any>;
    'values'?: Array<IEntitySearchTags>;
  }

  interface YooEntitySearch {
    'config': Array<IAppSearchTab>;
    'removeData': (item: IEntity, tabIndex: number) => void;
    'updateData': (data: IEntity[], request: IEntitySearchRequest) => void;
    'upsertData': (item: IEntity, tabIndex: number) => void;
  }
  interface YooEntitySearchAttributes extends StencilHTMLAttributes {
    'config'?: Array<IAppSearchTab>;
    'onCancel'?: (event: CustomEvent<any>) => void;
    'onClearRecents'?: (event: CustomEvent<IAppSearchTab>) => void;
    'onFieldFetchData'?: (event: CustomEvent<IFormSearch>) => void;
    'onSearch'?: (event: CustomEvent<IEntitySearchRequest>) => void;
    'onSelect'?: (event: CustomEvent<{ entity: IEntity, tab: IAppSearchTab }>) => void;
  }

  interface YooEntity {
    'bottomActions': Array<IEntityAction>;
    'clearable': boolean;
    'columnDefinition': IColumnDefinition;
    'customModel': ICustomModel;
    'displayType': CardType;
    'entityType': EntityType;
    'iconColor': string;
    'icons': Array<IEntityAction>;
    'isCollapsible': boolean;
    'isFramed': boolean;
    'isHistory': boolean;
    'isMap': boolean;
    'item': any;
    'items': Array<IEntity>;
    'readonly': boolean;
    'secondaryActions': Array<IEntityAction>;
    'secondaryActionsDropdown': boolean;
    'topActions': Array<IEntityAction>;
    'useTranslate': boolean;
  }
  interface YooEntityAttributes extends StencilHTMLAttributes {
    'bottomActions'?: Array<IEntityAction>;
    'clearable'?: boolean;
    'columnDefinition'?: IColumnDefinition;
    'customModel'?: ICustomModel;
    'displayType'?: CardType;
    'entityType'?: EntityType;
    'iconColor'?: string;
    'icons'?: Array<IEntityAction>;
    'isCollapsible'?: boolean;
    'isFramed'?: boolean;
    'isHistory'?: boolean;
    'isMap'?: boolean;
    'item'?: any;
    'items'?: Array<IEntity>;
    'onClosed'?: (event: CustomEvent<boolean>) => void;
    'onCollapsed'?: (event: CustomEvent<{ collapsed: boolean, item: ICardListEntry }>) => void;
    'onViewMoreToggled'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'secondaryActions'?: Array<IEntityAction>;
    'secondaryActionsDropdown'?: boolean;
    'topActions'?: Array<IEntityAction>;
    'useTranslate'?: boolean;
  }

  interface YooUserPicker {
    'currentUser': IUser;
    'usersList': IUser[];
  }
  interface YooUserPickerAttributes extends StencilHTMLAttributes {
    'currentUser'?: IUser;
    'onFilterClicked'?: (event: CustomEvent<boolean>) => void;
    'onUserSelected'?: (event: CustomEvent<IUser>) => void;
    'usersList'?: IUser[];
  }

  interface YooFormCreatorBlockExpandable {
    /**
    * The form field that will render as a form creator block
    */
    'formField': IFormCreatorBlock;
  }
  interface YooFormCreatorBlockExpandableAttributes extends StencilHTMLAttributes {
    /**
    * The form field that will render as a form creator block
    */
    'formField'?: IFormCreatorBlock;
  }

  interface YooFormCreatorBlockSimple {
    /**
    * The form field that will render as a form creator block
    */
    'formField': IFormCreatorBlock;
  }
  interface YooFormCreatorBlockSimpleAttributes extends StencilHTMLAttributes {
    /**
    * The form field that will render as a form creator block
    */
    'formField'?: IFormCreatorBlock;
  }

  interface YooFormCreatorHeader {
    /**
    * The title of the campaign to be displayed in the breadcrumbs
    */
    'formTitle': string;
    /**
    * Determines if the live preview icon is selected or not
    */
    'isLivePreviewVisible': boolean;
  }
  interface YooFormCreatorHeaderAttributes extends StencilHTMLAttributes {
    /**
    * The title of the campaign to be displayed in the breadcrumbs
    */
    'formTitle'?: string;
    /**
    * Determines if the live preview icon is selected or not
    */
    'isLivePreviewVisible'?: boolean;
    'onExportClicked'?: (event: CustomEvent<void>) => void;
    'onHelpClicked'?: (event: CustomEvent<void>) => void;
    'onImportClicked'?: (event: CustomEvent<void>) => void;
    'onSaveCloseClicked'?: (event: CustomEvent<void>) => void;
    'onToggleLivePreviewClicked'?: (event: CustomEvent<void>) => void;
  }

  interface YooFormCreatorPageCard {
    /**
    * The entry for the page info to show in the card. The blockNumber corresponds to the number of fields in a page.
    */
    'pageCardEntry': IPageCardEntry;
  }
  interface YooFormCreatorPageCardAttributes extends StencilHTMLAttributes {
    'onPageClicked'?: (event: CustomEvent<void>) => void;
    /**
    * The entry for the page info to show in the card. The blockNumber corresponds to the number of fields in a page.
    */
    'pageCardEntry'?: IPageCardEntry;
  }

  interface YooFormCreator {
    /**
    * The campaign being edited in the form creator
    */
    'missionDescription': IMissionDescription;
    'setSelectedPage': (index: number) => void;
  }
  interface YooFormCreatorAttributes extends StencilHTMLAttributes {
    /**
    * The campaign being edited in the form creator
    */
    'missionDescription'?: IMissionDescription;
    'onPageHeaderClicked'?: (event: CustomEvent<number>) => void;
    'onSaveCloseClicked'?: (event: CustomEvent<void>) => void;
    'onSelectedDeviceChanged'?: (event: CustomEvent<{loaded: boolean}>) => void;
  }

  interface YooFromCreatorPageCardList {
    /**
    * The pages of the currently selected campaign; each page contains a series of items.
    */
    'missionSlides': ISlide[];
    /**
    * The index of the currently selected page.
    */
    'selectedPageIndex': number;
  }
  interface YooFromCreatorPageCardListAttributes extends StencilHTMLAttributes {
    /**
    * The pages of the currently selected campaign; each page contains a series of items.
    */
    'missionSlides'?: ISlide[];
    /**
    * This event is propagated from each card but will be populated with the index of the clicked card in this step
    */
    'onPageClicked'?: (event: CustomEvent<number>) => void;
    /**
    * The index of the currently selected page.
    */
    'selectedPageIndex'?: number;
  }

  interface YooCameraPreviewDialog {
    'cameraStarted': boolean;
    'imageData': string;
    'isImageRecognition': boolean;
    'max': number;
    'maxWidth': number;
    'quality': number;
    'regularMode': boolean;
    'values': Array<any>;
  }
  interface YooCameraPreviewDialogAttributes extends StencilHTMLAttributes {
    'cameraStarted'?: boolean;
    'imageData'?: string;
    'isImageRecognition'?: boolean;
    'max'?: number;
    'maxWidth'?: number;
    'onCameraStop'?: (event: CustomEvent<boolean>) => void;
    'quality'?: number;
    'regularMode'?: boolean;
    'values'?: Array<any>;
  }

  interface YooFieldValidity {
    'explanation': string;
    'explanationDocument': any;
    'isValid': boolean;
  }
  interface YooFieldValidityAttributes extends StencilHTMLAttributes {
    'explanation'?: string;
    'explanationDocument'?: any;
    'isValid'?: boolean;
  }

  interface YooFormAutocompleteDialog {
    'allowCustomTag': boolean;
    'customModel': ICustomModel;
    'displayType': CardType;
    'emptyState': string;
    'entityType': EntityType;
    'hideTags': boolean;
    'idAttributeName': string;
    'idOnly': boolean;
    'isLoading': boolean;
    'isLocal': boolean;
    'multiple': boolean;
    /**
    * Used when we want to force fullscreen if we are opening the autocomplete dialog directly without going through an autocomplete.
    */
    'openFullscreen': boolean;
    'originalEntityType': EntityType;
    'tag': boolean;
    'tags': Array<IEntitySearchTags>;
    'useTranslate': boolean;
    'value': Array<any>;
    'values': any[];
  }
  interface YooFormAutocompleteDialogAttributes extends StencilHTMLAttributes {
    'allowCustomTag'?: boolean;
    'customModel'?: ICustomModel;
    'displayType'?: CardType;
    'emptyState'?: string;
    'entityType'?: EntityType;
    'hideTags'?: boolean;
    'idAttributeName'?: string;
    'idOnly'?: boolean;
    'isLoading'?: boolean;
    'isLocal'?: boolean;
    'multiple'?: boolean;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'onSwipedDown'?: (event: CustomEvent<boolean>) => void;
    'onSwipedUp'?: (event: CustomEvent<boolean>) => void;
    'onTagsSelect'?: (event: CustomEvent<Array<IEntitySearchTags>>) => void;
    /**
    * Used when we want to force fullscreen if we are opening the autocomplete dialog directly without going through an autocomplete.
    */
    'openFullscreen'?: boolean;
    'originalEntityType'?: EntityType;
    'tag'?: boolean;
    'tags'?: Array<IEntitySearchTags>;
    'useTranslate'?: boolean;
    'value'?: Array<any>;
    'values'?: any[];
  }

  interface YooFormAutocomplete {
    'allowCustomTag': boolean;
    'asyncValidators': Array<AsyncValidator<any>>;
    'clear': (emitEvent?: boolean) => void;
    'clearable': boolean;
    'columnDefinition': IColumnDefinition;
    'customModel': ICustomModel;
    'displayType': CardType;
    'emptyState': string;
    'entityType': EntityType;
    'extraButtons': Array<{ icon: string; handler: Function }>;
    'hideContainer': () => void;
    'hideSelectionFromInput': boolean;
    'hideTags': boolean;
    'iconPrefix': string;
    'idAttributeName': string;
    'idOnly': boolean;
    'inline': boolean;
    'isHistory': boolean;
    'isLocal': boolean;
    'max': number;
    'multiple': boolean;
    'name': string;
    'pageSize': number;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'setValue': (value: any) => void;
    'tag': boolean;
    'tagType': string;
    'tags': Array<IEntitySearchTags>;
    'updateValues': (values: any, forceOpen?: boolean) => void;
    'useTranslate': boolean;
    'validators': Array<Validator<any> | ValidatorEntry>;
    'validity': boolean;
    'value': Array<any> | any;
    'values': any[];
  }
  interface YooFormAutocompleteAttributes extends StencilHTMLAttributes {
    'allowCustomTag'?: boolean;
    'asyncValidators'?: Array<AsyncValidator<any>>;
    'clearable'?: boolean;
    'columnDefinition'?: IColumnDefinition;
    'customModel'?: ICustomModel;
    'displayType'?: CardType;
    'emptyState'?: string;
    'entityType'?: EntityType;
    'extraButtons'?: Array<{ icon: string; handler: Function }>;
    'hideSelectionFromInput'?: boolean;
    'hideTags'?: boolean;
    'iconPrefix'?: string;
    'idAttributeName'?: string;
    'idOnly'?: boolean;
    'inline'?: boolean;
    'isHistory'?: boolean;
    'isLocal'?: boolean;
    'max'?: number;
    'multiple'?: boolean;
    'name'?: string;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'pageSize'?: number;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'tag'?: boolean;
    'tagType'?: string;
    'tags'?: Array<IEntitySearchTags>;
    'useTranslate'?: boolean;
    'validators'?: Array<Validator<any> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: Array<any> | any;
    'values'?: any[];
  }

  interface YooFormBarcodeDialog {
    'close': () => void;
    'enableKeyboardResizing': boolean;
    'fnBarcodeResult': any;
    'fnOcrResult': any;
    'mainMode': 'default' | 'batch' | 'ocr';
    'ocrRegexes': Array<IFormBarcodeOcrRegex>;
    'restartOcrScanner': () => void;
    'value': string;
  }
  interface YooFormBarcodeDialogAttributes extends StencilHTMLAttributes {
    'enableKeyboardResizing'?: boolean;
    'fnBarcodeResult'?: any;
    'fnOcrResult'?: any;
    'mainMode'?: 'default' | 'batch' | 'ocr';
    'ocrRegexes'?: Array<IFormBarcodeOcrRegex>;
    'onScannedSuccess'?: (event: CustomEvent<any>) => void;
    'value'?: string;
  }

  interface YooFormBarcode {
    'asyncValidators': Array<AsyncValidator<string>>;
    'hideValue': boolean;
    'name': string;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': string;
  }
  interface YooFormBarcodeAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'hideValue'?: boolean;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: string;
  }

  interface YooFormCaptureTagDialog {
    'imageHeight': number;
    'imageSrc': string;
    'imageWidth': number;
    'tags': Array<string>;
    'value': any;
  }
  interface YooFormCaptureTagDialogAttributes extends StencilHTMLAttributes {
    'imageHeight'?: number;
    'imageSrc'?: string;
    'imageWidth'?: number;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'tags'?: Array<string>;
    'value'?: any;
  }

  interface YooFormCaptureViewDialog {
    'allowAnnotate': boolean;
    'edit': any;
    'imageRecognitionDisplay': any;
    'imageRecognitionResults': Array<{ title: string; value: any; rawValue: any; color: string; hidden?: boolean; key: string }>;
    'isStitch': boolean;
    'label': string;
    'preview': any;
  }
  interface YooFormCaptureViewDialogAttributes extends StencilHTMLAttributes {
    'allowAnnotate'?: boolean;
    'edit'?: any;
    'imageRecognitionDisplay'?: any;
    'imageRecognitionResults'?: Array<{ title: string; value: any; rawValue: any; color: string; hidden?: boolean; key: string }>;
    'isStitch'?: boolean;
    'label'?: string;
    'preview'?: any;
  }

  interface YooFormCaptureWebcamDialog {
    'device': any;
  }
  interface YooFormCaptureWebcamDialogAttributes extends StencilHTMLAttributes {
    'device'?: any;
  }

  interface YooFormCapture {
    'algorithm': IAlgorithm;
    'algorithmDisplay': any;
    'allowAnnotate': boolean;
    'allowLibrary': boolean;
    'asyncValidators': Array<AsyncValidator<string>>;
    'duration': number;
    'extraData': any;
    'isBackgroundProcess': boolean;
    'isHistory': boolean;
    'isImageRecognition': boolean;
    'label': string;
    'max': number;
    'maxWidth': number;
    'min': number;
    'multiple': boolean;
    'name': string;
    'placeholder': string;
    'processGeoloc': (geolocation: any, index: any) => void;
    'processImageRecognitionResults': (retVal: any) => void;
    'readonly': boolean;
    'required': boolean;
    'saveGeoloc': boolean;
    /**
    * If there is index, the field is a multiphoto
    */
    'setFieldValue': (index: number, data: any) => void;
    'stopImageRecognitionProcess': () => void;
    'tags': Array<string>;
    'type': 'video' | 'audio' | 'photo';
    'updateAutocompleteValues': (tags: any) => void;
    'updateData': (value: any, extraData: any) => void;
    'useGallery': boolean;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': string | Array<string>;
  }
  interface YooFormCaptureAttributes extends StencilHTMLAttributes {
    'algorithm'?: IAlgorithm;
    'algorithmDisplay'?: any;
    'allowAnnotate'?: boolean;
    'allowLibrary'?: boolean;
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'duration'?: number;
    'extraData'?: any;
    'isBackgroundProcess'?: boolean;
    'isHistory'?: boolean;
    'isImageRecognition'?: boolean;
    'label'?: string;
    'max'?: number;
    'maxWidth'?: number;
    'min'?: number;
    'multiple'?: boolean;
    'name'?: string;
    'onActionSheetOpened'?: (event: CustomEvent<number>) => void;
    'onExtraDataChanged'?: (event: CustomEvent<any>) => void;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'onGalleryOpened'?: (event: CustomEvent<number>) => void;
    'onGetGeoloc'?: (event: CustomEvent<any>) => void;
    'onGetMediaurl'?: (event: CustomEvent<any>) => void;
    'onImageRecognition'?: (event: CustomEvent<any>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'saveGeoloc'?: boolean;
    'tags'?: Array<string>;
    'type'?: 'video' | 'audio' | 'photo';
    'useGallery'?: boolean;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: string | Array<string>;
  }

  interface YooFormCatalogDialog {
    'heading': string;
    'product': IProduct;
  }
  interface YooFormCatalogDialogAttributes extends StencilHTMLAttributes {
    'heading'?: string;
    'product'?: IProduct;
  }

  interface YooFormCatalog {
    'asyncValidators': Array<AsyncValidator<{ [productRef: string]: number }>>;
    'catalog': string;
    'isCheck': boolean;
    'isHistory': boolean;
    'isInventory': boolean;
    'isPresence': boolean;
    'multiple': boolean;
    'name': string;
    'products': Array<IProduct>;
    'readonly': boolean;
    'tags': Array<IEntitySearchTags>;
    'updateValues': (values: any) => void;
    'validators': Array<Validator<{ [productRef: string]: number }> | ValidatorEntry>;
    'validity': boolean;
    'value': { [productRef: string]: number };
  }
  interface YooFormCatalogAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<{ [productRef: string]: number }>>;
    'catalog'?: string;
    'isCheck'?: boolean;
    'isHistory'?: boolean;
    'isInventory'?: boolean;
    'isPresence'?: boolean;
    'multiple'?: boolean;
    'name'?: string;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'products'?: Array<IProduct>;
    'readonly'?: boolean;
    'tags'?: Array<IEntitySearchTags>;
    'validators'?: Array<Validator<{ [productRef: string]: number }> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: { [productRef: string]: number };
  }

  interface YooFormCategorizeWords {
    'answer': Array<any>;
    'asyncValidators': Array<AsyncValidator<string>>;
    'categories': Array<string>;
    'isValid': () => Promise<boolean>;
    'readonly': boolean;
    'required': boolean;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': Array<any>;
    'values': Array<string>;
  }
  interface YooFormCategorizeWordsAttributes extends StencilHTMLAttributes {
    'answer'?: Array<any>;
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'categories'?: Array<string>;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: Array<any>;
    'values'?: Array<string>;
  }

  interface YooFormCheckbox {
    /**
    * Checks the validity of the component using async.
    */
    'asyncValidators': Array<AsyncValidator<boolean>>;
    /**
    * The header appears as a checkbox label.
    */
    'header': string;
    /**
    * Allows the definition of a name parameter.
    */
    'name': string;
    'onCheckboxClick': () => void;
    /**
    * Specifies wheter the component is in readonly mode.
    */
    'readonly': boolean;
    /**
    * Specifies wheter the component is a required field.
    */
    'required': boolean;
    /**
    * FormDisplayType property
    */
    'type': FormDisplayType;
    /**
    * Checks the validity of the component.
    */
    'validators': Array<Validator<boolean> | ValidatorEntry>;
    /**
    * Defines the default value of the component
    */
    'value': boolean;
  }
  interface YooFormCheckboxAttributes extends StencilHTMLAttributes {
    /**
    * Checks the validity of the component using async.
    */
    'asyncValidators'?: Array<AsyncValidator<boolean>>;
    /**
    * The header appears as a checkbox label.
    */
    'header'?: string;
    /**
    * Allows the definition of a name parameter.
    */
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<boolean>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    /**
    * Specifies wheter the component is in readonly mode.
    */
    'readonly'?: boolean;
    /**
    * Specifies wheter the component is a required field.
    */
    'required'?: boolean;
    /**
    * FormDisplayType property
    */
    'type'?: FormDisplayType;
    /**
    * Checks the validity of the component.
    */
    'validators'?: Array<Validator<boolean> | ValidatorEntry>;
    /**
    * Defines the default value of the component
    */
    'value'?: boolean;
  }

  interface YooFormChecklist {
    'asyncValidators': Array<AsyncValidator<IFormChecklistValue>>;
    'currentTasks': Array<string>;
    'isHistory': boolean;
    'multiple': boolean;
    'name': string;
    'placeholder': string;
    'previousTasks': Array<{ text: string; validated?: boolean }>;
    'readonly': boolean;
    'validators': Array<Validator<IFormChecklistValue> | ValidatorEntry>;
    'value': IFormChecklistValue;
  }
  interface YooFormChecklistAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<IFormChecklistValue>>;
    'currentTasks'?: Array<string>;
    'isHistory'?: boolean;
    'multiple'?: boolean;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'previousTasks'?: Array<{ text: string; validated?: boolean }>;
    'readonly'?: boolean;
    'validators'?: Array<Validator<IFormChecklistValue> | ValidatorEntry>;
    'value'?: IFormChecklistValue;
  }

  interface YooFormChoice {
    'allowOther': boolean;
    'asyncValidators': Array<AsyncValidator<any[]>>;
    'description': string;
    'images': Array<any>;
    'inputIndex': number;
    'isHistory': boolean;
    'multiple': boolean;
    'name': string;
    'readonly': boolean;
    'required': boolean;
    'sentence': string;
    'slideIndex': number;
    'type': 'button' | 'radio' | 'ranking' | 'image' | 'chat' | 'card';
    'useTranslate': boolean;
    'validators': Array<Validator<any[]> | ValidatorEntry>;
    'validity': boolean;
    'value': Array<any> | any;
    'values': any[];
    'valuesColor': Array<{ key: string; value: string }>;
  }
  interface YooFormChoiceAttributes extends StencilHTMLAttributes {
    'allowOther'?: boolean;
    'asyncValidators'?: Array<AsyncValidator<any[]>>;
    'description'?: string;
    'images'?: Array<any>;
    'inputIndex'?: number;
    'isHistory'?: boolean;
    'multiple'?: boolean;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'sentence'?: string;
    'slideIndex'?: number;
    'type'?: 'button' | 'radio' | 'ranking' | 'image' | 'chat' | 'card';
    'useTranslate'?: boolean;
    'validators'?: Array<Validator<any[]> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: Array<any> | any;
    'values'?: any[];
    'valuesColor'?: Array<{ key: string; value: string }>;
  }

  interface YooFormColorField {
    'hexInput': boolean;
    'hsvaInput': boolean;
    'name': string;
    'position': string;
    'readonly': boolean;
    'required': boolean;
    'rgbaInput': boolean;
    'value': string | number;
  }
  interface YooFormColorFieldAttributes extends StencilHTMLAttributes {
    'hexInput'?: boolean;
    'hsvaInput'?: boolean;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'position'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'rgbaInput'?: boolean;
    'value'?: string | number;
  }

  interface YooFormColorPicker {
    'color': string;
    'hideLabel': boolean;
  }
  interface YooFormColorPickerAttributes extends StencilHTMLAttributes {
    'color'?: string;
    'hideLabel'?: boolean;
    'onColorSelected'?: (event: CustomEvent<string>) => void;
  }

  interface YooFormConnect {
    'answer': Array<any>;
    'asyncValidators': Array<AsyncValidator<string>>;
    'isValid': () => Promise<boolean>;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': Array<any>;
    'values': Array<any>;
  }
  interface YooFormConnectAttributes extends StencilHTMLAttributes {
    'answer'?: Array<any>;
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: Array<any>;
    'values'?: Array<any>;
  }

  interface YooFormDateTime {
    'allowOcr': boolean;
    'autofocus': boolean;
    'clearable': boolean;
    'externalValidators': Array<ExternalValidator>;
    'extraClass': string;
    'getElement': () => Promise<this>;
    'iconSuffix': string;
    'isRange': boolean;
    'isSchedule': boolean;
    'maxDate': Date;
    'minDate': Date;
    'name': string;
    'nativePickerLabelColor': string;
    'placeholder': string;
    'placeholdertolabel': boolean;
    'readonly': boolean;
    'required': boolean;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': any;
  }
  interface YooFormDateTimeAttributes extends StencilHTMLAttributes {
    'allowOcr'?: boolean;
    'autofocus'?: boolean;
    'clearable'?: boolean;
    'externalValidators'?: Array<ExternalValidator>;
    'extraClass'?: string;
    'iconSuffix'?: string;
    'isRange'?: boolean;
    'isSchedule'?: boolean;
    'maxDate'?: Date;
    'minDate'?: Date;
    'name'?: string;
    'nativePickerLabelColor'?: string;
    'onIconClicked'?: (event: CustomEvent<string>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'placeholdertolabel'?: boolean;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: any;
  }

  interface YooFormDocumentDialog {
    'document': IFile;
    'isAnimationFinished': boolean;
    'modalMode': boolean;
    'modalTitle': string;
    'previousPlayerState': number;
    'startTime': any;
    'type': string;
  }
  interface YooFormDocumentDialogAttributes extends StencilHTMLAttributes {
    'document'?: IFile;
    'isAnimationFinished'?: boolean;
    'modalMode'?: boolean;
    'modalTitle'?: string;
    'previousPlayerState'?: number;
    'startTime'?: any;
    'type'?: string;
  }

  interface YooFormDocument {
    'document': IFile;
    'name': string;
    'readonly': boolean;
    'showDialog': boolean;
    'type': 'image' | 'document';
    'useGallery': boolean;
    'validity': boolean;
  }
  interface YooFormDocumentAttributes extends StencilHTMLAttributes {
    'document'?: IFile;
    'name'?: string;
    'onGalleryOpened'?: (event: CustomEvent<boolean>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'showDialog'?: boolean;
    'type'?: 'image' | 'document';
    'useGallery'?: boolean;
    'validity'?: boolean;
  }

  interface YooFormDynamicDialog {
    'data': Object;
    'forceReadonly': boolean;
    'header': string;
    'onFieldFetchData': any;
    'showRecap': boolean;
    'showTabs': boolean;
    'slides': Array<ISlide>;
    'suffix': string;
  }
  interface YooFormDynamicDialogAttributes extends StencilHTMLAttributes {
    'data'?: Object;
    'forceReadonly'?: boolean;
    'header'?: string;
    'onFieldFetchData'?: any;
    'showRecap'?: boolean;
    'showTabs'?: boolean;
    'slides'?: Array<ISlide>;
    'suffix'?: string;
  }

  interface YooFormDynamicHistoryDialog {
    'field': any;
    'historyData': any;
    'isModal': any;
    'suffix': any;
  }
  interface YooFormDynamicHistoryDialogAttributes extends StencilHTMLAttributes {
    'field'?: any;
    'historyData'?: any;
    'isModal'?: any;
    'suffix'?: any;
  }

  interface YooFormDynamic {
    'afterFetchCustomData': (field: IFormField, data: any) => void;
    'animated': boolean;
    'charts': Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'data': Object;
    'detailComponent': string;
    'dirty': boolean;
    'extraButtons'?: Array<IEntityAction>;
    'findPreviousValue': (fieldName: string) => Promise<{ field: IFormField; value: any; extra: any; }>;
    'forceFieldUpdate': (field: IFormField, fieldData?: any, formSearch?: IFormSearch) => void;
    'forceReadonly': boolean;
    'formType': string;
    'geoloc': Array<number>;
    'goToRecap': () => void;
    'goToSlide': (index: number, animated: boolean) => void;
    'gradientClass': string;
    'hasOneFieldPerPage': boolean;
    'hideOptional': boolean;
    'highlightInvalidFields': () => void;
    'history': Array<any>;
    'injector': any;
    'lessonType': string;
    'onSlideNext': (skipEmitEvent?: boolean) => void;
    'onSlidePrevious': () => void;
    'progress': IFormProgress;
    'scrollToPoint': (relativeScrollDistance: number, duration?: number) => Promise<any>;
    'scrollable': boolean;
    'setScrollSpacerHeight': (height: number) => void;
    'showAnswers': boolean;
    'showPreview': boolean;
    'showRecap': boolean;
    'showSave': boolean;
    'showTabs': boolean;
    'skipValidation': boolean;
    'slides': Array<ISlide>;
    'suffix': string;
    'timer': number;
    'useGallery': boolean;
  }
  interface YooFormDynamicAttributes extends StencilHTMLAttributes {
    'animated'?: boolean;
    'charts'?: Array<{ score: IMissionScoring; chart: IChartDefinition }>;
    'data'?: Object;
    'detailComponent'?: string;
    'dirty'?: boolean;
    'extraButtons'?: Array<IEntityAction>;
    'forceReadonly'?: boolean;
    'formType'?: string;
    'geoloc'?: Array<number>;
    'gradientClass'?: string;
    'hasOneFieldPerPage'?: boolean;
    'hideOptional'?: boolean;
    'history'?: Array<any>;
    'injector'?: any;
    'lessonType'?: string;
    'onActionSheetOpened'?: (event: CustomEvent<IFormField>) => void;
    'onDataChanged'?: (event: CustomEvent<any>) => void;
    'onExtraDataChanged'?: (event: CustomEvent<any>) => void;
    'onFieldFetchCustomData'?: (event: CustomEvent<{ field: IFormField; filters: any }>) => void;
    'onFieldFetchData'?: (event: CustomEvent<IFormSearch>) => void;
    'onFormGetGeoloc'?: (event: CustomEvent<any>) => void;
    'onFormGetMediaUrl'?: (event: CustomEvent<any>) => void;
    'onFormImageRecognition'?: (event: CustomEvent<any>) => void;
    'onFormValidityChanged'?: (event: CustomEvent<any>) => void;
    'onGalleryOpened'?: (event: CustomEvent<IFormField>) => void;
    'onOpenPreview'?: (event: CustomEvent<string>) => void;
    'onSave'?: (event: CustomEvent<any>) => void;
    'onShowHistory'?: (event: CustomEvent<string>) => void;
    'onSlideAnswered'?: (event: CustomEvent<any>) => void;
    'onSlideChanged'?: (event: CustomEvent<any>) => void;
    'onTimeOut'?: (event: CustomEvent<any>) => void;
    'progress'?: IFormProgress;
    'scrollable'?: boolean;
    'showAnswers'?: boolean;
    'showPreview'?: boolean;
    'showRecap'?: boolean;
    'showSave'?: boolean;
    'showTabs'?: boolean;
    'skipValidation'?: boolean;
    'slides'?: Array<ISlide>;
    'suffix'?: string;
    'timer'?: number;
    'useGallery'?: boolean;
  }

  interface YooFormEmailreport {
    'asyncValidators': Array<AsyncValidator<Array<IUser>>>;
    'fieldValues': Array<string>;
    'name': string;
    'readonly': boolean;
    'stateful': boolean;
    'tags': Array<IEntitySearchTags>;
    'updateValues': (values: IUser[], formSearch?: IFormSearch) => void;
    'validators': Array<Validator<Array<IUser>> | ValidatorEntry>;
    'validity': boolean;
    'value': Array<IUser>;
  }
  interface YooFormEmailreportAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<Array<IUser>>>;
    'fieldValues'?: Array<string>;
    'name'?: string;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'stateful'?: boolean;
    'tags'?: Array<IEntitySearchTags>;
    'validators'?: Array<Validator<Array<IUser>> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: Array<IUser>;
  }

  interface YooFormFeedback {
    'asyncValidators': Array<AsyncValidator<number>>;
    'isHistory': boolean;
    'name': string;
    'readonly': boolean;
    'validators': Array<Validator<number> | ValidatorEntry>;
    'value': number;
  }
  interface YooFormFeedbackAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<number>>;
    'isHistory'?: boolean;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<boolean>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'validators'?: Array<Validator<number> | ValidatorEntry>;
    'value'?: number;
  }

  interface YooFormFooter {
    'buttons': Array<IButton>;
    'onHideShowTabbar': (ev: any) => void;
    'timerStart': any;
  }
  interface YooFormFooterAttributes extends StencilHTMLAttributes {
    'buttons'?: Array<IButton>;
    'timerStart'?: any;
  }

  interface YooFormFormula {
    'asyncValidators': Array<AsyncValidator<number>>;
    'name': string;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'type': string;
    'validators': Array<Validator<number> | ValidatorEntry>;
    'validity': boolean;
    'value': number;
  }
  interface YooFormFormulaAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<number>>;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<number> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: number;
  }

  interface YooFormIframe {
    'asyncValidators': Array<AsyncValidator<string>>;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'source': string;
    'type': 'omnivirt' | 'thinglink';
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': string | number;
  }
  interface YooFormIframeAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'source'?: string;
    'type'?: 'omnivirt' | 'thinglink';
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: string | number;
  }

  interface YooFormImageTagging {
    'annotations': Array<IPhotoAnnotation>;
    'answer': Array<string>;
    'asyncValidators': Array<AsyncValidator<string>>;
    'imageData': IFile;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'slideIndex': number;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': Array<string>;
    'values': Array<string>;
  }
  interface YooFormImageTaggingAttributes extends StencilHTMLAttributes {
    'annotations'?: Array<IPhotoAnnotation>;
    'answer'?: Array<string>;
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'imageData'?: IFile;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'slideIndex'?: number;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: Array<string>;
    'values'?: Array<string>;
  }

  interface YooFormInputContainer {
    'comments': string;
    'field': IFormField;
    'forceReadonly': boolean;
    'hideOptional': boolean;
    'invalid': boolean;
    'readonly': boolean;
    'required': boolean;
  }
  interface YooFormInputContainerAttributes extends StencilHTMLAttributes {
    'comments'?: string;
    'field'?: IFormField;
    'forceReadonly'?: boolean;
    'hideOptional'?: boolean;
    'invalid'?: boolean;
    'onCommentFocused'?: (event: CustomEvent<HTMLYooFormTextAreaElement>) => void;
    'onCommented'?: (event: CustomEvent<string>) => void;
    'onTaskClicked'?: (event: CustomEvent) => void;
    'readonly'?: boolean;
    'required'?: boolean;
  }

  interface YooFormInputGame {
    'fieldId': string;
    'gameName': string;
    'name': string;
    'phaser': any;
  }
  interface YooFormInputGameAttributes extends StencilHTMLAttributes {
    'fieldId'?: string;
    'gameName'?: string;
    'name'?: string;
    'onGameOver'?: (event: CustomEvent<boolean>) => void;
    'phaser'?: any;
  }

  interface YooFormInput {
    'asyncValidators': Array<AsyncValidator<string>>;
    'autocapitalize': string;
    'autocorrect': string;
    'clear': () => void;
    'clearable': boolean;
    'debounce': number;
    'disabled': boolean;
    'externalValidators': Array<ExternalValidator>;
    'forceValueUpdate': boolean;
    'getElement': () => Promise<this>;
    'iconPrefix': string;
    'iconSuffix': string;
    'isValidityNotEmpty': () => Promise<boolean>;
    'max': string;
    'min': string;
    'name': string;
    'placeholder': string;
    'placeholdertolabel': boolean;
    'readonly': boolean;
    'required': boolean;
    'setFocus': () => void;
    'showPasswordToggle': boolean;
    'step': number;
    'tooltip': string;
    'type': string;
    'uiValidation': IFormUIValidation;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': string | number;
  }
  interface YooFormInputAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'autocapitalize'?: string;
    'autocorrect'?: string;
    'clearable'?: boolean;
    'debounce'?: number;
    'disabled'?: boolean;
    'externalValidators'?: Array<ExternalValidator>;
    'forceValueUpdate'?: boolean;
    'iconPrefix'?: string;
    'iconSuffix'?: string;
    'max'?: string;
    'min'?: string;
    'name'?: string;
    'onEnterPressed'?: (event: CustomEvent<boolean>) => void;
    'onIconClicked'?: (event: CustomEvent<string>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onTabPressed'?: (event: CustomEvent<boolean>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'placeholdertolabel'?: boolean;
    'readonly'?: boolean;
    'required'?: boolean;
    'showPasswordToggle'?: boolean;
    'step'?: number;
    'tooltip'?: string;
    'type'?: string;
    'uiValidation'?: IFormUIValidation;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: string | number;
  }

  interface YooFormJson {
    'asyncValidators': Array<AsyncValidator<string>>;
    'readonly': boolean;
    'required': boolean;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': string;
  }
  interface YooFormJsonAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: string;
  }

  interface YooFormLocation {
    'asyncValidators': Array<AsyncValidator<ILocation | Array<ILocation>>>;
    'isHistory': boolean;
    'multiple': boolean;
    'name': string;
    'readonly': boolean;
    'tags': Array<IEntitySearchTags>;
    'updateValues': (values: any) => void;
    'validators': Array<Validator<ILocation | Array<ILocation>> | ValidatorEntry>;
    'validity': boolean;
    'value': ILocation | Array<ILocation>;
  }
  interface YooFormLocationAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<ILocation | Array<ILocation>>>;
    'isHistory'?: boolean;
    'multiple'?: boolean;
    'name'?: string;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'tags'?: Array<IEntitySearchTags>;
    'validators'?: Array<Validator<ILocation | Array<ILocation>> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: ILocation | Array<ILocation>;
  }

  interface YooFormMissingWord {
    'answer': Array<any>;
    'asyncValidators': Array<AsyncValidator<string>>;
    'isValid': () => Promise<boolean>;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'sentence': string;
    'slideIndex': number;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': Array<any>;
    'values': Array<string>;
  }
  interface YooFormMissingWordAttributes extends StencilHTMLAttributes {
    'answer'?: Array<any>;
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'sentence'?: string;
    'slideIndex'?: number;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: Array<any>;
    'values'?: Array<string>;
  }

  interface YooFormNumberPickerDialog {
    'value': Array<any> | any;
    'values': Array<any>;
  }
  interface YooFormNumberPickerDialogAttributes extends StencilHTMLAttributes {
    'onSwipedDown'?: (event: CustomEvent<boolean>) => void;
    'onSwipedUp'?: (event: CustomEvent<boolean>) => void;
    'value'?: Array<any> | any;
    'values'?: Array<any>;
  }

  interface YooFormNumberPicker {
    'asyncValidators': Array<AsyncValidator<string>>;
    'clearable': boolean;
    'isValid': () => Promise<boolean>;
    'max': number;
    'min': number;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'setValue': (value: any) => void;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': number;
  }
  interface YooFormNumberPickerAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'clearable'?: boolean;
    'max'?: number;
    'min'?: number;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: number;
  }

  interface YooFormProductBatch {
    'asyncValidators': Array<AsyncValidator<string>>;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': IProductBatch;
  }
  interface YooFormProductBatchAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: IProductBatch;
  }

  interface YooFormProgressIndicator {
    'currentStep': number;
    'displayMode': 'number' | 'icon';
    'isCompleted': boolean;
    'lockIndex': Array<boolean>;
    'steps': Array<IProgressIndicator>;
  }
  interface YooFormProgressIndicatorAttributes extends StencilHTMLAttributes {
    'currentStep'?: number;
    'displayMode'?: 'number' | 'icon';
    'isCompleted'?: boolean;
    'lockIndex'?: Array<boolean>;
    'onStepSelected'?: (event: CustomEvent<number>) => void;
    'onTitleLinesChanged'?: (event: CustomEvent<number>) => void;
    'steps'?: Array<IProgressIndicator>;
  }

  interface YooFormRadioGroup {
    'multiple': boolean;
    'name': string;
    'values': IRadioGroupEntry[];
  }
  interface YooFormRadioGroupAttributes extends StencilHTMLAttributes {
    'multiple'?: boolean;
    'name'?: string;
    'onSelectionChanged'?: (event: CustomEvent<Array<IRadioGroupEntry>>) => void;
    'values'?: IRadioGroupEntry[];
  }

  interface YooFormRadio {
    'disabled': boolean;
    'name': string;
    'state': string;
    'text': string;
  }
  interface YooFormRadioAttributes extends StencilHTMLAttributes {
    'disabled'?: boolean;
    'name'?: string;
    'onRadioClicked'?: (event: CustomEvent) => void;
    'state'?: string;
    'text'?: string;
  }

  interface YooFormRange {
    'asyncValidators': Array<AsyncValidator<number | Array<number>>>;
    'double': boolean;
    'max': number;
    'min': number;
    'name': string;
    'placeholder': string;
    'readonly': boolean;
    'validators': Array<Validator<number | Array<number>> | ValidatorEntry>;
    'validity': boolean;
    'value': number | Array<number>;
  }
  interface YooFormRangeAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<number | Array<number>>>;
    'double'?: boolean;
    'max'?: number;
    'min'?: number;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'validators'?: Array<Validator<number | Array<number>> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: number | Array<number>;
  }

  interface YooFormRanking {
    'answers'?: Array<string>;
    'readonly': boolean;
    'required'?: boolean;
    'value': Array<string>;
    'values': Array<string>;
  }
  interface YooFormRankingAttributes extends StencilHTMLAttributes {
    'answers'?: Array<string>;
    'onInputChanged'?: (event: CustomEvent<Array<string>>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'value'?: Array<string>;
    'values'?: Array<string>;
  }

  interface YooFormRecapStep {
    'locked': boolean;
    'mainTitle': string;
    'step': IProgressIndicator;
    'stepNumber': number;
    'subTitle': string;
  }
  interface YooFormRecapStepAttributes extends StencilHTMLAttributes {
    'locked'?: boolean;
    'mainTitle'?: string;
    'step'?: IProgressIndicator;
    'stepNumber'?: number;
    'subTitle'?: string;
  }

  interface YooFormSignaturePadDialog {
    'isAnimationFinished': boolean;
    'readonly': boolean;
    'value': string;
  }
  interface YooFormSignaturePadDialogAttributes extends StencilHTMLAttributes {
    'isAnimationFinished'?: boolean;
    'readonly'?: boolean;
    'value'?: string;
  }

  interface YooFormSignaturePad {
    'asyncValidators': Array<AsyncValidator<string>>;
    'isHistory': boolean;
    'name': string;
    'readonly': boolean;
    'required': boolean;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': string;
  }
  interface YooFormSignaturePadAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'isHistory'?: boolean;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: string;
  }

  interface YooFormSlider {
    'disabled': boolean;
    'doubleSlider': boolean;
    'hideLabel': boolean;
    'hideReferences': boolean;
    'initialLowValue': number;
    'initialValue': number;
    'maximum': number;
    'minimum': number;
    'name': string;
    'step': number;
    'triangleColor': string;
  }
  interface YooFormSliderAttributes extends StencilHTMLAttributes {
    'disabled'?: boolean;
    'doubleSlider'?: boolean;
    'hideLabel'?: boolean;
    'hideReferences'?: boolean;
    'initialLowValue'?: number;
    'initialValue'?: number;
    'maximum'?: number;
    'minimum'?: number;
    'name'?: string;
    'onDoubleSliderChanged'?: (event: CustomEvent<{ lowValue: number, highValue: number }>) => void;
    'onSingleSliderChanged'?: (event: CustomEvent<number>) => void;
    'step'?: number;
    'triangleColor'?: string;
  }

  interface YooFormStarRating {
    'asyncValidators': Array<AsyncValidator<number>>;
    'isHistory': boolean;
    'max': number;
    'name': string;
    'readonly': boolean;
    'type': FormStarType;
    'validators': Array<Validator<number> | ValidatorEntry>;
    'value': number;
  }
  interface YooFormStarRatingAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<number>>;
    'isHistory'?: boolean;
    'max'?: number;
    'name'?: string;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<boolean>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'type'?: FormStarType;
    'validators'?: Array<Validator<number> | ValidatorEntry>;
    'value'?: number;
  }

  interface YooFormSwipeCards {
    'answer': Array<Array<string>>;
    'asyncValidators': Array<AsyncValidator<string>>;
    'categories': Array<string>;
    'description': string;
    'images': Array<IFile>;
    'instructionsDocument': IFile;
    'label': string;
    'mode': 'text'| 'image' | 'textimage';
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': Array<Array<string>>;
    'values': Array<string | any>;
  }
  interface YooFormSwipeCardsAttributes extends StencilHTMLAttributes {
    'answer'?: Array<Array<string>>;
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'categories'?: Array<string>;
    'description'?: string;
    'images'?: Array<IFile>;
    'instructionsDocument'?: IFile;
    'label'?: string;
    'mode'?: 'text'| 'image' | 'textimage';
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: Array<Array<string>>;
    'values'?: Array<string | any>;
  }

  interface YooFormTask {
    'asyncValidators': Array<AsyncValidator<Array<ITodoTaskSimple>>>;
    'hideTitle': boolean;
    'isHistory': boolean;
    'name': string;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'setSlides': (data: any) => void;
    'type': string;
    'validators': Array<Validator<Array<ITodoTaskSimple>> | ValidatorEntry>;
    'validity': boolean;
    'value': Array<ITodoTaskSimple>;
  }
  interface YooFormTaskAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<Array<ITodoTaskSimple>>>;
    'hideTitle'?: boolean;
    'isHistory'?: boolean;
    'name'?: string;
    'onFetchCustomData'?: (event: CustomEvent<any>) => void;
    'onFieldFetchData'?: (event: CustomEvent<any>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<Array<ITodoTaskSimple>> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: Array<ITodoTaskSimple>;
  }

  interface YooFormTextArea {
    'asyncValidators': Array<AsyncValidator<string>>;
    'clear': () => void;
    'disableEnter': boolean;
    'initialRows': number;
    'maxRows': number;
    'name': string;
    'placeholder': string;
    'readonly': boolean;
    'resizable': 'both' | 'vertical' | 'horizontal' | 'none';
    'setFocus': () => void;
    'validateInput': boolean;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': string;
  }
  interface YooFormTextAreaAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'disableEnter'?: boolean;
    'initialRows'?: number;
    'maxRows'?: number;
    'name'?: string;
    'onEnterPressed'?: (event: CustomEvent<boolean>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onTabPressed'?: (event: CustomEvent<boolean>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'resizable'?: 'both' | 'vertical' | 'horizontal' | 'none';
    'validateInput'?: boolean;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: string;
  }

  interface YooFormTextEditor {
    'asyncValidators': Array<AsyncValidator<string>>;
    'readonly': boolean;
    'required': boolean;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'value': string;
  }
  interface YooFormTextEditorAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'value'?: string;
  }

  interface YooFormTime {
    'asyncValidators': Array<AsyncValidator<string>>;
    'clearable': boolean;
    'isSchedule': boolean;
    'maxDate': Date;
    'minDate': Date;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'type': string;
    'validators': Array<Validator<string> | ValidatorEntry>;
    'validity': boolean;
    'value': any;
  }
  interface YooFormTimeAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<string>>;
    'clearable'?: boolean;
    'isSchedule'?: boolean;
    'maxDate'?: Date;
    'minDate'?: Date;
    'onAmPmToggled'?: (event: CustomEvent<string>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<string> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: any;
  }

  interface YooFormTimer {
    'name': string;
    'timeChanged': (event: any, position: string) => void;
  }
  interface YooFormTimerAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'onTimeCalculated'?: (event: CustomEvent<string>) => void;
  }

  interface YooFormTodoDialog {
    'allPhotosRequired': boolean;
    'allowLibrary': boolean;
    'linked': boolean;
    'onFieldFetchData': any;
    'slidesTodo': Array<ISlide>;
    'slidesTodoTask': Array<ISlide>;
    'todo': ITodo;
    'values': Array<string>;
  }
  interface YooFormTodoDialogAttributes extends StencilHTMLAttributes {
    'allPhotosRequired'?: boolean;
    'allowLibrary'?: boolean;
    'linked'?: boolean;
    'onFieldFetchData'?: any;
    'slidesTodo'?: Array<ISlide>;
    'slidesTodoTask'?: Array<ISlide>;
    'todo'?: ITodo;
    'values'?: Array<string>;
  }

  interface YooFormTodoSingle {
    'readonly': boolean;
    'type': 'mission' | 'form';
    'values': ITodoTask[];
  }
  interface YooFormTodoSingleAttributes extends StencilHTMLAttributes {
    'onUpdate'?: (event: CustomEvent<ITodoTask[]>) => void;
    'readonly'?: boolean;
    'type'?: 'mission' | 'form';
    'values'?: ITodoTask[];
  }

  interface YooFormTodo {
    'allPhotosRequired': boolean;
    'allowLibrary': boolean;
    'asyncValidators': Array<AsyncValidator<ITodo>>;
    'linked': boolean;
    'name': string;
    'placeholder': string;
    'readonly': boolean;
    'required': boolean;
    'setSlides': (data: any) => void;
    'type': string;
    'validators': Array<Validator<ITodo> | ValidatorEntry>;
    'validity': boolean;
    'value': ITodo;
    'values': Array<any>;
  }
  interface YooFormTodoAttributes extends StencilHTMLAttributes {
    'allPhotosRequired'?: boolean;
    'allowLibrary'?: boolean;
    'asyncValidators'?: Array<AsyncValidator<ITodo>>;
    'linked'?: boolean;
    'name'?: string;
    'onFetchCustomData'?: (event: CustomEvent<any>) => void;
    'onFieldFetchData'?: (event: CustomEvent<any>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: string;
    'validators'?: Array<Validator<ITodo> | ValidatorEntry>;
    'validity'?: boolean;
    'value'?: ITodo;
    'values'?: Array<any>;
  }

  interface YooFormToggle {
    'asyncValidators': Array<AsyncValidator<boolean>>;
    'header': string;
    'name': string;
    'readonly': boolean;
    'required': boolean;
    'type': FormDisplayType;
    'validators': Array<Validator<boolean> | ValidatorEntry>;
    'value': boolean;
  }
  interface YooFormToggleAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<boolean>>;
    'header'?: string;
    'name'?: string;
    'onClicked'?: (event: CustomEvent<boolean>) => void;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'type'?: FormDisplayType;
    'validators'?: Array<Validator<boolean> | ValidatorEntry>;
    'value'?: boolean;
  }

  interface YooFormUploader {
    'asyncValidators': Array<AsyncValidator<boolean>>;
    'extensions': Array<string>;
    'multiple': boolean;
    'readonly': boolean;
    'required': boolean;
    'validators': Array<Validator<boolean> | ValidatorEntry>;
    'value': boolean;
  }
  interface YooFormUploaderAttributes extends StencilHTMLAttributes {
    'asyncValidators'?: Array<AsyncValidator<boolean>>;
    'extensions'?: Array<string>;
    'multiple'?: boolean;
    'onInputBlurred'?: (event: CustomEvent<any>) => void;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onInputFocused'?: (event: CustomEvent<any>) => void;
    'onValidityChanged'?: (event: CustomEvent<boolean>) => void;
    'readonly'?: boolean;
    'required'?: boolean;
    'validators'?: Array<Validator<boolean> | ValidatorEntry>;
    'value'?: boolean;
  }

  interface YooFormVideoplayer {
    'autoplay': boolean;
    'disableHeader': boolean;
    'disableSeekbar': boolean;
    'enableModalFullscreen': boolean;
    'fullscreen': boolean;
    'getCurrentTime': () => Promise<number>;
    'hideFullscreen': boolean;
    'isInsideForm': boolean;
    'isModal': boolean;
    'isVisible': boolean;
    'mediaType': string;
    'modalMode': boolean;
    'name': string;
    'pauseVideo': () => void;
    'playsOnFullscreen': boolean;
    'previousPlayerState'?: number;
    'readonly': boolean;
    'source': string;
    'startTime': any;
    'type': any;
    'updateCurrentTime': (time: number) => void;
  }
  interface YooFormVideoplayerAttributes extends StencilHTMLAttributes {
    'autoplay'?: boolean;
    'disableHeader'?: boolean;
    'disableSeekbar'?: boolean;
    'enableModalFullscreen'?: boolean;
    'fullscreen'?: boolean;
    'hideFullscreen'?: boolean;
    'isInsideForm'?: boolean;
    'isModal'?: boolean;
    'isVisible'?: boolean;
    'mediaType'?: string;
    'modalMode'?: boolean;
    'name'?: string;
    'onInputChanged'?: (event: CustomEvent<any>) => void;
    'onPlayerTimeUpdate'?: (event: CustomEvent<any>) => void;
    'playsOnFullscreen'?: boolean;
    'previousPlayerState'?: number;
    'readonly'?: boolean;
    'source'?: string;
    'startTime'?: any;
    'type'?: any;
  }

  interface YooPhotoEditor {
    /**
    * The source of the edited image to overlay over the original source. This can be a stitched image or a photo with drawings from v4. If there is no stitching, this image is hidden for photos that have drawings added on v6.
    */
    'annotatedImgSrc': string;
    /**
    * Description of an image which appears at the bottom of the photo-editor when previewing an image from a form-image-choice input
    */
    'description': string;
    /**
    * Specifies whether the header should be disabled
    */
    'disableHeader': boolean;
    /**
    * Specifies whether the photo-editor is opened in edit mode from inside the photo-editors gallery
    */
    'editInPhotoEditors': boolean;
    /**
    * If isModal is true, this property will render a back button if set to true and a cross if set to false, on the top-left corner of the photo-editor.
    */
    'isBackBtn': boolean;
    /**
    * Should be true when the photo-editor is opened in a modal. It works in combination with the isBackButton property.
    */
    'isModal': boolean;
    /**
    * True when the annotatedImgSrc is stitched after image recognition is applied to it.
    */
    'isStitch': boolean;
    /**
    * Specifies whether the component is in readonly mode
    */
    'readonly': boolean;
    /**
    * Specifies whether we should rotate this image for camera preview component where image is has wrong orientation
    */
    'rotateImage': boolean;
    /**
    * The source of the image to display
    */
    'src': string;
    /**
    * Specifies whether the editor is being opened in stitch mode
    */
    'stitchMode': boolean;
    /**
    * A string containing the serialized SVG with the drawings. This string is then parsed to render an SVGElement in the DOM.
    */
    'svgData': string;
    /**
    * Array of text annotations to render. These can be both dot and text annotations
    */
    'texts': Array<IPhotoAnnotation>;
  }
  interface YooPhotoEditorAttributes extends StencilHTMLAttributes {
    /**
    * The source of the edited image to overlay over the original source. This can be a stitched image or a photo with drawings from v4. If there is no stitching, this image is hidden for photos that have drawings added on v6.
    */
    'annotatedImgSrc'?: string;
    /**
    * Description of an image which appears at the bottom of the photo-editor when previewing an image from a form-image-choice input
    */
    'description'?: string;
    /**
    * Specifies whether the header should be disabled
    */
    'disableHeader'?: boolean;
    /**
    * Specifies whether the photo-editor is opened in edit mode from inside the photo-editors gallery
    */
    'editInPhotoEditors'?: boolean;
    /**
    * If isModal is true, this property will render a back button if set to true and a cross if set to false, on the top-left corner of the photo-editor.
    */
    'isBackBtn'?: boolean;
    /**
    * Should be true when the photo-editor is opened in a modal. It works in combination with the isBackButton property.
    */
    'isModal'?: boolean;
    /**
    * True when the annotatedImgSrc is stitched after image recognition is applied to it.
    */
    'isStitch'?: boolean;
    /**
    * Emitted when the yoo-zoom component inside the editor is clicked when in readonly mode
    */
    'onZoomClicked'?: (event: CustomEvent<boolean>) => void;
    /**
    * Specifies whether the component is in readonly mode
    */
    'readonly'?: boolean;
    /**
    * Specifies whether we should rotate this image for camera preview component where image is has wrong orientation
    */
    'rotateImage'?: boolean;
    /**
    * The source of the image to display
    */
    'src'?: string;
    /**
    * Specifies whether the editor is being opened in stitch mode
    */
    'stitchMode'?: boolean;
    /**
    * A string containing the serialized SVG with the drawings. This string is then parsed to render an SVGElement in the DOM.
    */
    'svgData'?: string;
    /**
    * Array of text annotations to render. These can be both dot and text annotations
    */
    'texts'?: Array<IPhotoAnnotation>;
  }

  interface YooPhotoEditors {
    'canAnnotate': boolean;
    'canChat': boolean;
    'hideCloseButton': boolean;
    'index': number;
    'isLight': boolean;
    'isReadonly': boolean;
    'items': any;
    'updatePhoto': (photo: any) => Promise<void>;
  }
  interface YooPhotoEditorsAttributes extends StencilHTMLAttributes {
    'canAnnotate'?: boolean;
    'canChat'?: boolean;
    'hideCloseButton'?: boolean;
    'index'?: number;
    'isLight'?: boolean;
    'isReadonly'?: boolean;
    'items'?: any;
    'onAnnotate'?: (event: CustomEvent<IPhoto>) => void;
    'onChat'?: (event: CustomEvent<IPhoto>) => void;
    'onDownload'?: (event: CustomEvent<IPhoto>) => void;
    'onFlag'?: (event: CustomEvent<IPhoto>) => void;
    'onLink'?: (event: CustomEvent<string>) => void;
    'onOpenMission'?: (event: CustomEvent<IPhoto>) => void;
    'onShare'?: (event: CustomEvent<string>) => void;
    'onTag'?: (event: CustomEvent<IPhoto>) => void;
    'onUserProfile'?: (event: CustomEvent<IPhoto>) => void;
  }

  interface YooAgGrid {
    'config': GridOptions;
  }
  interface YooAgGridAttributes extends StencilHTMLAttributes {
    'config'?: GridOptions;
  }

  interface YooGrid {
    'allowCustomTag': boolean;
    'animated': boolean;
    'bottomActions': Array<IEntityAction>;
    'clearSelection': (keepSelectionMode?: boolean, noEmit?: boolean) => void;
    'clearTags': boolean;
    'closeItemsSliding': () => void;
    'columnDefs': Array<IColumnDefinition>;
    'currentPosition': IPosition;
    'customModel': ICustomModel;
    'direction': 'vertical' | 'horizontal';
    'displayModes': Array<CardType>;
    'displayType': CardType;
    'emptyState': string;
    'emptyStateButtonText': string;
    'emptyStateDescription': string;
    'emptyStateHandler': () => void;
    'entityType': EntityType;
    'extraClass': string;
    'forceAddNewTag': boolean;
    'forceHeading': boolean;
    'globalActions': Array<IEntityAction>;
    'gridConfig': GridOptions;
    'hasVerticalLine': boolean;
    'headerFn'?: (item, index, records) => string;
    'heading': string;
    'hideAdvancedFilters': boolean;
    'hideEmptyState': boolean;
    'hideFooter': boolean;
    'hideHeader': boolean;
    'hideRefreshButton': boolean;
    'hideTags': boolean;
    'hideTotal': boolean;
    'icons': Array<IEntityAction>;
    'idAttributeName': string;
    'idOnly': boolean;
    'infiniteScrollDisabled': boolean;
    'initialSelection': Array<IEntity>;
    'isCollapsible': boolean;
    'isCompact': boolean;
    'isFramed': boolean;
    'isGeoLocEntity': boolean;
    'isLoading': boolean;
    'isLocal': boolean;
    'isReadonly': boolean;
    'isSelectionMode': boolean;
    'items': Array<IEntity>;
    'keepSelection': boolean;
    'loadMoreButton': boolean;
    'model': IAppSearchTab;
    'multiple': boolean;
    'pageSize': number;
    'progress'?: number;
    'progressCss'?: string;
    'progressbarAlignMode': string;
    'pullToRefresh': (refresher?: any) => void;
    'resetSearchText': () => void;
    'scrollItem': (index: number) => void;
    'scrollable': boolean;
    'search': string;
    'searchBarPlaceholder': string;
    'searchFieldOutsideComponent': boolean;
    'secondaryActions': Array<IEntityAction>;
    'secondaryActionsDropdown': boolean;
    'selectedTags': Array<IEntitySearchTags>;
    'showActionsAsMore': boolean;
    'showCreate': boolean;
    'showFilters': boolean;
    'showGlobalActions': boolean;
    'showSearch': boolean;
    'sortsAndFilters': { filters: Array<IEntitySearchFilters>, sorts: Array<ISort> };
    'subheading': string;
    'tags': Array<IEntitySearchTags>;
    'topActions': Array<IEntityAction>;
    'total': number;
    'useTranslate': boolean;
    'valuesColor': Array<any>;
  }
  interface YooGridAttributes extends StencilHTMLAttributes {
    'allowCustomTag'?: boolean;
    'animated'?: boolean;
    'bottomActions'?: Array<IEntityAction>;
    'clearTags'?: boolean;
    'columnDefs'?: Array<IColumnDefinition>;
    'currentPosition'?: IPosition;
    'customModel'?: ICustomModel;
    'direction'?: 'vertical' | 'horizontal';
    'displayModes'?: Array<CardType>;
    'displayType'?: CardType;
    'emptyState'?: string;
    'emptyStateButtonText'?: string;
    'emptyStateDescription'?: string;
    'emptyStateHandler'?: () => void;
    'entityType'?: EntityType;
    'extraClass'?: string;
    'forceAddNewTag'?: boolean;
    'forceHeading'?: boolean;
    'globalActions'?: Array<IEntityAction>;
    'gridConfig'?: GridOptions;
    'hasVerticalLine'?: boolean;
    'headerFn'?: (item, index, records) => string;
    'heading'?: string;
    'hideAdvancedFilters'?: boolean;
    'hideEmptyState'?: boolean;
    'hideFooter'?: boolean;
    'hideHeader'?: boolean;
    'hideRefreshButton'?: boolean;
    'hideTags'?: boolean;
    'hideTotal'?: boolean;
    'icons'?: Array<IEntityAction>;
    'idAttributeName'?: string;
    'idOnly'?: boolean;
    'infiniteScrollDisabled'?: boolean;
    'initialSelection'?: Array<IEntity>;
    'isCollapsible'?: boolean;
    'isCompact'?: boolean;
    'isFramed'?: boolean;
    'isGeoLocEntity'?: boolean;
    'isLoading'?: boolean;
    'isLocal'?: boolean;
    'isReadonly'?: boolean;
    'isSelectionMode'?: boolean;
    'items'?: Array<IEntity>;
    'keepSelection'?: boolean;
    'loadMoreButton'?: boolean;
    'model'?: IAppSearchTab;
    'multiple'?: boolean;
    'onAddNewTagPressed'?: (event: CustomEvent<string>) => void;
    'onDisplayTypeChange'?: (event: CustomEvent<CardType>) => void;
    'onEmptyResults'?: (event: CustomEvent<boolean>) => void;
    'onEntityCollapsed'?: (event: CustomEvent<{ collapsed: boolean, item: IEntity }>) => void;
    'onFetchData'?: (event: CustomEvent<IGridSearch>) => void;
    'onFieldFetchData'?: (event: CustomEvent<IFormSearch>) => void;
    'onFrameExpanded'?: (event: CustomEvent<boolean>) => void;
    'onHeadingClicked'?: (event: CustomEvent<boolean>) => void;
    'onItemOptionSelected'?: (event: CustomEvent<{ item: IEntity, action: IEntityAction }>) => void;
    'onSearchInputBlurred'?: (event: CustomEvent<boolean>) => void;
    'onSearchInputEnterPressed'?: (event: CustomEvent<string>) => void;
    'onSearchInputFocused'?: (event: CustomEvent<boolean>) => void;
    'onSelect'?: (event: CustomEvent<Array<IEntity> | IEntity>) => void;
    'onSortsAndFiltersChange'?: (event: CustomEvent<{ filters: Array<IEntitySearchFilters>, sorts: Array<ISort> }>) => void;
    'onSortsAndFiltersShowed'?: (event: CustomEvent<boolean>) => void;
    'onSwipeEnd'?: (event: CustomEvent<IEntity>) => void;
    'onTagsSelect'?: (event: CustomEvent<Array<IEntitySearchTags>>) => void;
    'onViewMoreToggled'?: (event: CustomEvent<IEntity>) => void;
    'pageSize'?: number;
    'progress'?: number;
    'progressCss'?: string;
    'progressbarAlignMode'?: string;
    'scrollable'?: boolean;
    'search'?: string;
    'searchBarPlaceholder'?: string;
    'searchFieldOutsideComponent'?: boolean;
    'secondaryActions'?: Array<IEntityAction>;
    'secondaryActionsDropdown'?: boolean;
    'selectedTags'?: Array<IEntitySearchTags>;
    'showActionsAsMore'?: boolean;
    'showCreate'?: boolean;
    'showFilters'?: boolean;
    'showGlobalActions'?: boolean;
    'showSearch'?: boolean;
    'sortsAndFilters'?: { filters: Array<IEntitySearchFilters>, sorts: Array<ISort> };
    'subheading'?: string;
    'tags'?: Array<IEntitySearchTags>;
    'topActions'?: Array<IEntityAction>;
    'total'?: number;
    'useTranslate'?: boolean;
    'valuesColor'?: Array<any>;
  }

  interface YooIonActionSheetController {
    /**
    * Create an action sheet overlay with action sheet options.
    */
    'create': (opts?: IActionSheet) => Promise<any>;
    /**
    * Dismiss the open action sheet overlay.
    */
    'dismiss': (data?: any, role?: string, actionSheetId?: number) => Promise<void>;
    /**
    * Get the most recently opened action sheet overlay.
    */
    'getTop': () => Promise<any>;
  }
  interface YooIonActionSheetControllerAttributes extends StencilHTMLAttributes {}

  interface YooIonAlertController {
    /**
    * Create an alert overlay with alert options
    */
    'create': (opts?: IAlertEntry) => Promise<any>;
    /**
    * Dismiss the open alert overlay.
    */
    'dismiss': (data?: any, role?: string, alertId?: number) => Promise<void>;
    /**
    * Get the most recently opened alert overlay.
    */
    'getTop': () => Promise<any>;
  }
  interface YooIonAlertControllerAttributes extends StencilHTMLAttributes {}

  interface YooIonButton {
    'buttonType': string;
    'color'?: Color;
    'disabled': boolean;
    'expand'?: 'full' | 'block';
    'fill'?: 'clear' | 'outline' | 'solid' | 'default';
    'href'?: string;
    'routerDirection'?: RouterDirection;
    'shape'?: 'round';
    'size'?: 'small' | 'default' | 'large';
    'strong': boolean;
    'tapAnimation': boolean;
    'type': 'submit' | 'reset' | 'button';
  }
  interface YooIonButtonAttributes extends StencilHTMLAttributes {
    'buttonType'?: string;
    'color'?: Color;
    'disabled'?: boolean;
    'expand'?: 'full' | 'block';
    'fill'?: 'clear' | 'outline' | 'solid' | 'default';
    'href'?: string;
    'onIonBlur'?: (event: CustomEvent<void>) => void;
    'onIonFocus'?: (event: CustomEvent<void>) => void;
    'routerDirection'?: RouterDirection;
    'shape'?: 'round';
    'size'?: 'small' | 'default' | 'large';
    'strong'?: boolean;
    'tapAnimation'?: boolean;
    'type'?: 'submit' | 'reset' | 'button';
  }

  interface YooIonButtons {
    'halfScreen': boolean;
  }
  interface YooIonButtonsAttributes extends StencilHTMLAttributes {
    'halfScreen'?: boolean;
  }

  interface YooIonContent {
    /**
    * If true and the content does not cause an overflow scroll, the scroll interaction will cause a bounce. If the content exceeds the bounds of ionContent, nothing will change. Note, the does not disable the system bounce on iOS. That is an OS level setting.
    */
    'forceOverscroll'?: boolean;
    /**
    * If true, the content will scroll behind the headers and footers. This effect can easily be seen by setting the toolbar to transparent.
    */
    'fullscreen': boolean;
    'getScrollElement': () => Promise<any>;
    /**
    * By default `ion-content` uses an `ion-scroll` under the hood to implement scrolling, if you want to disable the content scrolling for a given page, set this property to `false`.
    */
    'scrollEnabled': boolean;
    /**
    * Because of performance reasons, ionScroll events are disabled by default, in order to enable them and start listening from (ionScroll), set this property to `true`.
    */
    'scrollEvents': boolean;
  }
  interface YooIonContentAttributes extends StencilHTMLAttributes {
    /**
    * If true and the content does not cause an overflow scroll, the scroll interaction will cause a bounce. If the content exceeds the bounds of ionContent, nothing will change. Note, the does not disable the system bounce on iOS. That is an OS level setting.
    */
    'forceOverscroll'?: boolean;
    /**
    * If true, the content will scroll behind the headers and footers. This effect can easily be seen by setting the toolbar to transparent.
    */
    'fullscreen'?: boolean;
    'onIonScroll'?: (event: CustomEvent<ScrollDetail>) => void;
    /**
    * By default `ion-content` uses an `ion-scroll` under the hood to implement scrolling, if you want to disable the content scrolling for a given page, set this property to `false`.
    */
    'scrollEnabled'?: boolean;
    /**
    * Because of performance reasons, ionScroll events are disabled by default, in order to enable them and start listening from (ionScroll), set this property to `true`.
    */
    'scrollEvents'?: boolean;
  }

  interface YooIonFooter {}
  interface YooIonFooterAttributes extends StencilHTMLAttributes {}

  interface YooIonGestureController {
    /**
    * Creates a gesture delegate based on the GestureConfig passed
    */
    'create': (config: GestureConfig) => Promise<any>;
    /**
    * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.
    */
    'createBlocker': (opts?: BlockerConfig) => Promise<BlockerDelegate>;
  }
  interface YooIonGestureControllerAttributes extends StencilHTMLAttributes {
    /**
    * Event emitted when a gesture has been captured.
    */
    'onIonGestureCaptured'?: (event: CustomEvent<string>) => void;
  }

  interface YooIonGesture {
    /**
    * What component to attach listeners to.
    */
    'attachTo': string | HTMLElement;
    /**
    * Function to execute to see if gesture can start. Return boolean
    */
    'canStart'?: GestureCallback;
    /**
    * What direction to listen for gesture changes
    */
    'direction': string;
    /**
    * If true, the current gesture will disabling scrolling interactions
    */
    'disableScroll': boolean;
    /**
    * If true, the current gesture interaction is disabled
    */
    'disabled': boolean;
    /**
    * Name for the gesture action
    */
    'gestureName': string;
    /**
    * What priority the gesture should take. The higher the number, the higher the priority.
    */
    'gesturePriority': number;
    /**
    * The max angle for the gesture
    */
    'maxAngle': number;
    /**
    * Function to execute when the gesture has not been captured
    */
    'notCaptured'?: GestureCallback;
    /**
    * Function to execute when the gesture has end
    */
    'onEnd'?: GestureCallback;
    /**
    * Function to execute when the gesture has moved
    */
    'onMove'?: GestureCallback;
    /**
    * Function to execute when the gesture has start
    */
    'onStart'?: GestureCallback;
    /**
    * Function to execute when the gesture will start
    */
    'onWillStart'?: (_: GestureDetail) => Promise<void>;
    /**
    * If the event should use passive event listeners
    */
    'passive': boolean;
    /**
    * How many pixels of change the gesture should wait for before triggering the action.
    */
    'threshold': number;
  }
  interface YooIonGestureAttributes extends StencilHTMLAttributes {
    /**
    * What component to attach listeners to.
    */
    'attachTo'?: string | HTMLElement;
    /**
    * Function to execute to see if gesture can start. Return boolean
    */
    'canStart'?: GestureCallback;
    /**
    * What direction to listen for gesture changes
    */
    'direction'?: string;
    /**
    * If true, the current gesture will disabling scrolling interactions
    */
    'disableScroll'?: boolean;
    /**
    * If true, the current gesture interaction is disabled
    */
    'disabled'?: boolean;
    /**
    * Name for the gesture action
    */
    'gestureName'?: string;
    /**
    * What priority the gesture should take. The higher the number, the higher the priority.
    */
    'gesturePriority'?: number;
    /**
    * The max angle for the gesture
    */
    'maxAngle'?: number;
    /**
    * Function to execute when the gesture has not been captured
    */
    'notCaptured'?: GestureCallback;
    /**
    * Function to execute when the gesture has end
    */
    'onEnd'?: GestureCallback;
    /**
    * Function to execute when the gesture has moved
    */
    'onMove'?: GestureCallback;
    /**
    * Function to execute when the gesture has start
    */
    'onStart'?: GestureCallback;
    /**
    * Function to execute when the gesture will start
    */
    'onWillStart'?: (_: GestureDetail) => Promise<void>;
    /**
    * If the event should use passive event listeners
    */
    'passive'?: boolean;
    /**
    * How many pixels of change the gesture should wait for before triggering the action.
    */
    'threshold'?: number;
  }

  interface YooIonHeader {}
  interface YooIonHeaderAttributes extends StencilHTMLAttributes {}

  interface YooIonInfiniteScrollContent {
    /**
    * An animated SVG spinner that shows while loading.
    */
    'loadingSpinner'?: string;
    /**
    * Optional text to display while loading.
    */
    'loadingText'?: string;
  }
  interface YooIonInfiniteScrollContentAttributes extends StencilHTMLAttributes {
    /**
    * An animated SVG spinner that shows while loading.
    */
    'loadingSpinner'?: string;
    /**
    * Optional text to display while loading.
    */
    'loadingText'?: string;
  }

  interface YooIonInfiniteScroll {
    /**
    * Call `complete()` within the `infinite` output event handler when your async operation has completed. For example, the `loading` state is while the app is performing an asynchronous operation, such as receiving more data from an AJAX request to add more items to a data list. Once the data has been received and UI updated, you then call this method to signify that the loading has completed. This method will change the infinite scroll's state from `loading` to `enabled`.
    */
    'complete': () => void;
    'disabled': boolean;
    'position': 'top' | 'bottom';
    'threshold': string;
    /**
    * Pass a promise inside `waitFor()` within the `infinite` output event handler in order to change state of infiniteScroll to "complete"
    */
    'waitFor': (action: Promise<any>) => void;
  }
  interface YooIonInfiniteScrollAttributes extends StencilHTMLAttributes {
    'disabled'?: boolean;
    'onIonInfinite'?: (event: CustomEvent<void>) => void;
    'position'?: 'top' | 'bottom';
    'threshold'?: string;
  }

  interface YooIonItemDivider {
    /**
    * The color to use for the item-divider
    */
    'color'?: string;
  }
  interface YooIonItemDividerAttributes extends StencilHTMLAttributes {
    /**
    * The color to use for the item-divider
    */
    'color'?: string;
  }

  interface YooIonItemOptions {
    'fireSwipeEvent': () => void;
    /**
    * The side the option button should be on. Possible values: `"start"` and `"end"`. Defaults to `"end"`. If you have multiple `ion-item-options`, a side must be provided for each.
    */
    'side': Side;
  }
  interface YooIonItemOptionsAttributes extends StencilHTMLAttributes {
    /**
    * Emitted when the item has been fully swiped.
    */
    'onIonSwipe'?: (event: CustomEvent<void>) => void;
    /**
    * The side the option button should be on. Possible values: `"start"` and `"end"`. Defaults to `"end"`. If you have multiple `ion-item-options`, a side must be provided for each.
    */
    'side'?: Side;
  }

  interface YooIonItemSliding {
    /**
    * Close the sliding item. Items can also be closed from the [List](../../list/List).
    */
    'close': () => void;
    /**
    * Get the amount the item is open in pixels.
    */
    'getOpenAmount': () => Promise<number>;
    /**
    * Get the ratio of the open amount of the item compared to the width of the options. If the number returned is positive, then the options on the right side are open. If the number returned is negative, then the options on the left side are open. If the absolute value of the number is greater than 1, the item is open more than the width of the options.
    */
    'getSlidingRatio': () => Promise<number>;
    'slidingType': ItemSlidingType;
    'updateOptions': () => void;
  }
  interface YooIonItemSlidingAttributes extends StencilHTMLAttributes {
    'onIonDrag'?: (event: CustomEvent) => void;
    'slidingType'?: ItemSlidingType;
  }

  interface YooIonItem {
    /**
    * The mode determines which platform styles to use. Possible values are: `"ios"` or `"md"`. If true, a button tag will be rendered and the item will be tappable. Defaults to `false`.
    */
    'button': boolean;
    /**
    * The color to use for the background of the item.
    */
    'color'?: string;
    /**
    * If true, a detail arrow will appear on the item. Defaults to `false` unless the `mode` is `ios` and an `href`, `onclick` or `button` property is present.
    */
    'detail'?: boolean;
    /**
    * The icon to use when `detail` is set to `true`. Defaults to `"ios-arrow-forward"`.
    */
    'detailIcon': string;
    /**
    * If true, the user cannot interact with the item. Defaults to `false`.
    */
    'disabled': boolean;
    /**
    * Contains a URL or a URL fragment that the hyperlink points to. If this property is set, an anchor tag will be rendered.
    */
    'href'?: string;
    /**
    * How the bottom border should be displayed on the item.
    */
    'lines'?: 'full' | 'inset' | 'none';
    /**
    * When using a router, it specifies the transition direction when navigating to another page using `href`.
    */
    'routerDirection'?: RouterDirection;
    'state'?: 'valid' | 'invalid' | 'focus';
  }
  interface YooIonItemAttributes extends StencilHTMLAttributes {
    /**
    * The mode determines which platform styles to use. Possible values are: `"ios"` or `"md"`. If true, a button tag will be rendered and the item will be tappable. Defaults to `false`.
    */
    'button'?: boolean;
    /**
    * The color to use for the background of the item.
    */
    'color'?: string;
    /**
    * If true, a detail arrow will appear on the item. Defaults to `false` unless the `mode` is `ios` and an `href`, `onclick` or `button` property is present.
    */
    'detail'?: boolean;
    /**
    * The icon to use when `detail` is set to `true`. Defaults to `"ios-arrow-forward"`.
    */
    'detailIcon'?: string;
    /**
    * If true, the user cannot interact with the item. Defaults to `false`.
    */
    'disabled'?: boolean;
    /**
    * Contains a URL or a URL fragment that the hyperlink points to. If this property is set, an anchor tag will be rendered.
    */
    'href'?: string;
    /**
    * How the bottom border should be displayed on the item.
    */
    'lines'?: 'full' | 'inset' | 'none';
    /**
    * When using a router, it specifies the transition direction when navigating to another page using `href`.
    */
    'routerDirection'?: RouterDirection;
    'state'?: 'valid' | 'invalid' | 'focus';
  }

  interface YooIonList {
    /**
    * Close the sliding items. Items can also be closed from the [Item Sliding](../../item-sliding/ItemSliding). Returns a boolean value of whether it closed an item or not.
    */
    'closeSlidingItems': () => Promise<boolean>;
    /**
    * Get the [Item Sliding](../../item-sliding/ItemSliding) that is currently open.
    */
    'getOpenItem': () => Promise<any>;
    /**
    * If true, the list will have margin around it and rounded corners. Defaults to `false`.
    */
    'inset': boolean;
    /**
    * How the bottom border should be displayed on all items.
    */
    'lines'?: 'full' | 'inset' | 'none';
    /**
    * Set an [Item Sliding](../../item-sliding/ItemSliding) as the open item.
    */
    'setOpenItem': (itemSliding: any) => void;
  }
  interface YooIonListAttributes extends StencilHTMLAttributes {
    /**
    * If true, the list will have margin around it and rounded corners. Defaults to `false`.
    */
    'inset'?: boolean;
    /**
    * How the bottom border should be displayed on all items.
    */
    'lines'?: 'full' | 'inset' | 'none';
  }

  interface YooIonModalController {
    /**
    * Create a modal overlay with modal options.
    */
    'create': (opts?: any) => Promise<any>;
    /**
    * Dismiss the open modal overlay.
    */
    'dismiss': (data?: any, role?: string, modalId?: number) => Promise<void>;
    /**
    * Get the most recently opened modal overlay.
    */
    'getTop': () => Promise<any>;
  }
  interface YooIonModalControllerAttributes extends StencilHTMLAttributes {}

  interface YooIonModal {
    /**
    * The component to display inside of the modal.
    */
    'component': ComponentRef;
    'componentInstance'?: any;
    /**
    * The data to pass to the modal component.
    */
    'componentProps'?: ComponentProps;
    /**
    * Additional classes to apply for custom CSS. If multiple classes are provided they should be separated by spaces.
    */
    'cssClass'?: string | string[];
    'delegate'?: FrameworkDelegate;
    /**
    * Dismiss the modal overlay after it has been presented.
    */
    'dismiss': (data?: any, role?: string, overlayDismiss?: boolean) => Promise<void>;
    'displayFullscreenButton': boolean;
    /**
    * If true, the modal will be dismissed when the backdrop is clicked. Defaults to `true`.
    */
    'enableBackdropDismiss': boolean;
    'enterAnimation'?: ModalAnimation;
    /**
    * The modal animation on web will be force to fade in and fade out by default, unless this prop is set to true, it will overide the enterAnimation and leaveAnimation passed in.
    */
    'forceCustomAnimationOnWeb': boolean;
    'keyboardClose': boolean;
    'leaveAnimation'?: ModalAnimation;
    /**
    * Returns a promise that resolves when the modal did dismiss. It also accepts a callback that is called in the same circustances.
    */
    'onDidDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    /**
    * Returns a promise that resolves when the modal will dismiss. It also accepts a callback that is called in the same circustances.
    */
    'onWillDismiss': (callback?: (detail: OverlayEventDetail<any>) => void) => Promise<OverlayEventDetail<any>>;
    'overlayId': number;
    /**
    * Present the modal overlay after it has been created.
    */
    'present': () => Promise<void>;
    /**
    * If true, a backdrop will be displayed behind the modal. Defaults to `true`.
    */
    'showBackdrop': boolean;
    /**
    * If true, the modal will animate. Defaults to `true`.
    */
    'willAnimate': boolean;
  }
  interface YooIonModalAttributes extends StencilHTMLAttributes {
    /**
    * The component to display inside of the modal.
    */
    'component': ComponentRef;
    'componentInstance'?: any;
    /**
    * The data to pass to the modal component.
    */
    'componentProps'?: ComponentProps;
    /**
    * Additional classes to apply for custom CSS. If multiple classes are provided they should be separated by spaces.
    */
    'cssClass'?: string | string[];
    'delegate'?: FrameworkDelegate;
    'displayFullscreenButton'?: boolean;
    /**
    * If true, the modal will be dismissed when the backdrop is clicked. Defaults to `true`.
    */
    'enableBackdropDismiss'?: boolean;
    'enterAnimation'?: ModalAnimation;
    /**
    * The modal animation on web will be force to fade in and fade out by default, unless this prop is set to true, it will overide the enterAnimation and leaveAnimation passed in.
    */
    'forceCustomAnimationOnWeb'?: boolean;
    'keyboardClose'?: boolean;
    'leaveAnimation'?: ModalAnimation;
    /**
    * Emitted after the modal has dismissed.
    */
    'onIonModalDidDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    /**
    * Emitted after the modal has loaded.
    */
    'onIonModalDidLoad'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted after the modal has presented.
    */
    'onIonModalDidPresent'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted after the modal has unloaded.
    */
    'onIonModalDidUnload'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted before the modal has dismissed.
    */
    'onIonModalWillDismiss'?: (event: CustomEvent<OverlayEventDetail>) => void;
    /**
    * Emitted before the modal has presented.
    */
    'onIonModalWillPresent'?: (event: CustomEvent<void>) => void;
    'overlayId'?: number;
    /**
    * If true, a backdrop will be displayed behind the modal. Defaults to `true`.
    */
    'showBackdrop'?: boolean;
    /**
    * If true, the modal will animate. Defaults to `true`.
    */
    'willAnimate'?: boolean;
  }

  interface YooIonRefresherContent {
    /**
    * The text you want to display when you begin to pull down
    */
    'pullingText'?: string;
    /**
    * The text you want to display when performing a refresh
    */
    'refreshingText'?: string;
  }
  interface YooIonRefresherContentAttributes extends StencilHTMLAttributes {
    /**
    * The text you want to display when you begin to pull down
    */
    'pullingText'?: string;
    /**
    * The text you want to display when performing a refresh
    */
    'refreshingText'?: string;
  }

  interface YooIonRefresher {
    /**
    * Changes the refresher's state from `refreshing` to `cancelling`.
    */
    'cancel': () => void;
    /**
    * Time it takes to close the refresher. Defaults to `280ms`.
    */
    'closeDuration': string;
    /**
    * Call `complete()` when your async operation has completed. For example, the `refreshing` state is while the app is performing an asynchronous operation, such as receiving more data from an AJAX request. Once the data has been received, you then call this method to signify that the refreshing has completed and to close the refresher. This method also changes the refresher's state from `refreshing` to `completing`.
    */
    'complete': () => void;
    /**
    * If true, the refresher will be hidden. Defaults to `true`.
    */
    'disabled': boolean;
    /**
    * A number representing how far down the user has pulled. The number `0` represents the user hasn't pulled down at all. The number `1`, and anything greater than `1`, represents that the user has pulled far enough down that when they let go then the refresh will happen. If they let go and the number is less than `1`, then the refresh will not happen, and the content will return to it's original position.
    */
    'getProgress': () => Promise<number>;
    /**
    * The maximum distance of the pull until the refresher will automatically go into the `refreshing` state. Defaults to the result of `pullMin + 60`.
    */
    'pullMax': number;
    /**
    * The minimum distance the user must pull down until the refresher will go into the `refreshing` state. Defaults to `60`.
    */
    'pullMin': number;
    /**
    * Time it takes the refresher to to snap back to the `refreshing` state. Defaults to `280ms`.
    */
    'snapbackDuration': string;
  }
  interface YooIonRefresherAttributes extends StencilHTMLAttributes {
    /**
    * Time it takes to close the refresher. Defaults to `280ms`.
    */
    'closeDuration'?: string;
    /**
    * If true, the refresher will be hidden. Defaults to `true`.
    */
    'disabled'?: boolean;
    /**
    * Emitted while the user is pulling down the content and exposing the refresher.
    */
    'onIonPull'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the user lets go of the content and has pulled down further than the `pullMin` or pulls the content down and exceeds the pullMax. Updates the refresher state to `refreshing`. The `complete()` method should be called when the async operation has completed.
    */
    'onIonRefresh'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the user begins to start pulling down.
    */
    'onIonStart'?: (event: CustomEvent<void>) => void;
    /**
    * The maximum distance of the pull until the refresher will automatically go into the `refreshing` state. Defaults to the result of `pullMin + 60`.
    */
    'pullMax'?: number;
    /**
    * The minimum distance the user must pull down until the refresher will go into the `refreshing` state. Defaults to `60`.
    */
    'pullMin'?: number;
    /**
    * Time it takes the refresher to to snap back to the `refreshing` state. Defaults to `280ms`.
    */
    'snapbackDuration'?: string;
  }

  interface YooIonScroll {
    'forceOverscroll'?: boolean;
    'height': string;
    'horizontalMode': boolean;
    'isScrollDistanceBiggerThanScroll': (y: number) => Promise<boolean>;
    /**
    * Re-render the scroll component
    */
    'refresh': () => void;
    /**
    * Scroll by a specified X/Y distance in the component
    */
    'scrollByPoint': (x: number, y: number, duration: number, done?: Function) => Promise<any>;
    'scrollEvents': boolean;
    /**
    * Scroll to the bottom of the component
    */
    'scrollToBottom': (duration: number) => Promise<void>;
    /**
    * Scroll to a specified X/Y location in the component
    */
    'scrollToPoint': (x: number, y: number, duration?: number) => Promise<void>;
    /**
    * Scroll to the top of the component
    */
    'scrollToTop': (duration: number) => Promise<void>;
    'showScrollbar': boolean;
  }
  interface YooIonScrollAttributes extends StencilHTMLAttributes {
    'forceOverscroll'?: boolean;
    'height'?: string;
    'horizontalMode'?: boolean;
    'onHideTabbar'?: (event: CustomEvent<boolean>) => void;
    'onIonScroll'?: (event: CustomEvent<ScrollDetail>) => void;
    'onIonScrollEnd'?: (event: CustomEvent<ScrollBaseDetail>) => void;
    'onIonScrollStart'?: (event: CustomEvent<ScrollBaseDetail>) => void;
    'scrollEvents'?: boolean;
    'showScrollbar'?: boolean;
  }

  interface YooIonSlide {}
  interface YooIonSlideAttributes extends StencilHTMLAttributes {}

  interface YooIonSlides {
    /**
    * Get the index of the active slide.
    */
    'getActiveIndex': () => Promise<number>;
    /**
    * Get the index of the previous slide.
    */
    'getPreviousIndex': () => Promise<number>;
    /**
    * The initial slide to open
    */
    'initialSlide': number;
    /**
    * Get whether or not the current slide is the first slide.
    */
    'isBeginning': () => Promise<boolean>;
    /**
    * Get whether or not the current slide is the last slide.
    */
    'isEnd': () => Promise<boolean>;
    /**
    * Get the total number of slides.
    */
    'length': () => Promise<number>;
    /**
    * Lock or unlock the ability to slide to the next slides.
    */
    'lockSwipeToNext': (shouldLockSwipeToNext: boolean) => Promise<void>;
    /**
    * Lock or unlock the ability to slide to the previous slides.
    */
    'lockSwipeToPrev': (shouldLockSwipeToPrev: boolean) => Promise<void>;
    /**
    * Lock or unlock the ability to slide to change slides.
    */
    'lockSwipes': (shouldLockSwipes: boolean) => Promise<void>;
    /**
    * If true, show the navigation (navigation should not be seen on mobile). Defaults to `isWeb`.
    */
    'navigation': boolean;
    /**
    * Options to pass to the swiper instance. See http://idangero.us/swiper/api/ for valid options
    */
    'options': any;
    /**
    * If true, show the pagination. Defaults to `false`.
    */
    'pager': boolean;
    /**
    * If true, show the scrollbar. Defaults to `false`.
    */
    'scrollbar': boolean;
    /**
    * Transition to the next slide.
    */
    'slideNext': (speed?: number, runCallbacks?: boolean) => Promise<void>;
    /**
    * Transition to the previous slide.
    */
    'slidePrev': (speed?: number, runCallbacks?: boolean) => Promise<void>;
    /**
    * Transition to the specified slide.
    */
    'slideTo': (index: number, speed?: number, runCallbacks?: boolean) => Promise<void>;
    /**
    * Start auto play.
    */
    'startAutoplay': () => Promise<void>;
    /**
    * Stop auto play.
    */
    'stopAutoplay': () => Promise<void>;
    'syncSlideHeight': () => void;
    /**
    * Update the underlying slider implementation. Call this if you've added or removed child slides.
    */
    'update': () => Promise<void>;
  }
  interface YooIonSlidesAttributes extends StencilHTMLAttributes {
    /**
    * The initial slide to open
    */
    'initialSlide'?: number;
    /**
    * If true, show the navigation (navigation should not be seen on mobile). Defaults to `isWeb`.
    */
    'navigation'?: boolean;
    /**
    * Emitted after the active slide has changed.
    */
    'onIonSlideDidChange'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the user double taps on the slide's container.
    */
    'onIonSlideDoubleTap'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the slider is actively being moved.
    */
    'onIonSlideDrag'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the next slide has ended.
    */
    'onIonSlideNextEnd'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the next slide has started.
    */
    'onIonSlideNextStart'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the previous slide has ended.
    */
    'onIonSlidePrevEnd'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the previous slide has started.
    */
    'onIonSlidePrevStart'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the slider is at the last slide.
    */
    'onIonSlideReachEnd'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the slider is at its initial position.
    */
    'onIonSlideReachStart'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the user taps/clicks on the slide's container.
    */
    'onIonSlideTap'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the user releases the touch.
    */
    'onIonSlideTouchEnd'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the user first touches the slider.
    */
    'onIonSlideTouchStart'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the slide transition has ended.
    */
    'onIonSlideTransitionEnd'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted when the slide transition has started.
    */
    'onIonSlideTransitionStart'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted before the active slide has changed.
    */
    'onIonSlideWillChange'?: (event: CustomEvent<void>) => void;
    /**
    * Emitted after Swiper initialization
    */
    'onIonSlidesDidLoad'?: (event: CustomEvent<void>) => void;
    /**
    * Options to pass to the swiper instance. See http://idangero.us/swiper/api/ for valid options
    */
    'options'?: any;
    /**
    * If true, show the pagination. Defaults to `false`.
    */
    'pager'?: boolean;
    /**
    * If true, show the scrollbar. Defaults to `false`.
    */
    'scrollbar'?: boolean;
  }

  interface YooIonTitle {
    'color'?: Color;
    'halfScreen': boolean;
  }
  interface YooIonTitleAttributes extends StencilHTMLAttributes {
    'color'?: Color;
    'halfScreen'?: boolean;
  }

  interface YooIonToastController {
    /**
    * Create a toast overlay with toast options.
    */
    'create': (opts?: IToastEntry) => Promise<any>;
    /**
    * Dismiss the open toast overlay.
    */
    'dismiss': (data?: any, role?: string, toastId?: number) => Promise<void>;
    /**
    * Get the most recently opened toast overlay.
    */
    'getTop': () => Promise<any>;
  }
  interface YooIonToastControllerAttributes extends StencilHTMLAttributes {}

  interface YooIonToolbar {
    'animateOnLoad': boolean;
    'centerTitle': boolean;
    'color'?: string;
    'halfScreen': boolean;
    'secondary': boolean;
    'translucent': boolean;
  }
  interface YooIonToolbarAttributes extends StencilHTMLAttributes {
    'animateOnLoad'?: boolean;
    'centerTitle'?: boolean;
    'color'?: string;
    'halfScreen'?: boolean;
    'secondary'?: boolean;
    'translucent'?: boolean;
  }

  interface YooAmap {
    'filterGroups': IFilterGroup[];
    'mapEntry': IMapEntry;
  }
  interface YooAmapAttributes extends StencilHTMLAttributes {
    'filterGroups'?: IFilterGroup[];
    'mapEntry'?: IMapEntry;
    'onFilterGroupsChanged'?: (event: CustomEvent<IFilterGroup[]>) => void;
    'onSelect'?: (event: CustomEvent<IMarker[]>) => void;
  }

  interface YooMapGl {
    'filterGroups': IFilterGroup[];
    'flyTo': (longitude: number, latitude: number, zoom?: number) => void;
    'getCenter': () => Promise<any>;
    'mapEntry': IMapEntry;
    'markers': IMarker[];
  }
  interface YooMapGlAttributes extends StencilHTMLAttributes {
    'filterGroups'?: IFilterGroup[];
    'mapEntry'?: IMapEntry;
    'markers'?: IMarker[];
    'onFetchData'?: (event: CustomEvent<boolean>) => void;
    'onFilterGroupsChanged'?: (event: CustomEvent<IFilterGroup[]>) => void;
    'onSelect'?: (event: CustomEvent<IMarker[]>) => void;
    'onSizeToggled'?: (event: CustomEvent<boolean>) => void;
  }

  interface YooMapJs {
    'filterGroups': IFilterGroup[];
    'flyTo': (longitude: number, latitude: number, zoom?: number) => void;
    'mapEntry': IMapEntry;
    'markers': IMarker[];
  }
  interface YooMapJsAttributes extends StencilHTMLAttributes {
    'filterGroups'?: IFilterGroup[];
    'mapEntry'?: IMapEntry;
    'markers'?: IMarker[];
    'onFilterGroupsChanged'?: (event: CustomEvent<IFilterGroup[]>) => void;
    'onSelect'?: (event: CustomEvent<IMarker[]>) => void;
  }

  interface YooMapLegend {
    'filterGroups': IFilterGroup[];
  }
  interface YooMapLegendAttributes extends StencilHTMLAttributes {
    'filterGroups'?: IFilterGroup[];
    'onFilterClicked'?: (event: CustomEvent<IFilterGroup>) => void;
  }

  interface YooMap {
    'currentLanguage': string;
    'disableZoom': boolean;
    'filterGroups': IFilterGroup[];
    'fitToMarkers': boolean;
    'flyTo': (longitude: number, latitude: number, zoom?: number) => void;
    'getCenter': () => Promise<{ lat: number; lng: number; }>;
    'gridMapCardCollapsed': boolean;
    'groupBy': string;
    'icon': string;
    'isGridMap': boolean;
    'isModal': boolean;
    'legendColors': IMarkerColor[];
    'mapEntry': IMapEntry;
    'markers': IMarker[];
    'maxZoom': number;
    'minZoom': number;
    'position': IPosition;
    'setProps': (mapEntry: IMapEntry) => void;
    'showControls': boolean;
    'showDirections': boolean;
    'showFullscreenControl': boolean;
    'showGetDirectionsButton': boolean;
    'showLegend': boolean;
    'useCluster': boolean;
    'zoom': number;
  }
  interface YooMapAttributes extends StencilHTMLAttributes {
    'currentLanguage'?: string;
    'disableZoom'?: boolean;
    'filterGroups'?: IFilterGroup[];
    'fitToMarkers'?: boolean;
    'gridMapCardCollapsed'?: boolean;
    'groupBy'?: string;
    'icon'?: string;
    'isGridMap'?: boolean;
    'isModal'?: boolean;
    'legendColors'?: IMarkerColor[];
    'mapEntry'?: IMapEntry;
    'markers'?: IMarker[];
    'maxZoom'?: number;
    'minZoom'?: number;
    'onFetchMapData'?: (event: CustomEvent<boolean>) => void;
    'onFilterGroupsChanged'?: (event: CustomEvent<IFilterGroup[]>) => void;
    'onSelect'?: (event: CustomEvent<IMarker[]>) => void;
    'onUseAppleMaps'?: (event: CustomEvent<string>) => void;
    'onUseCityMapper'?: (event: CustomEvent<string>) => void;
    'onUseCopyAddress'?: (event: CustomEvent<string>) => void;
    'onUseGoogleMaps'?: (event: CustomEvent<string>) => void;
    'position'?: IPosition;
    'showControls'?: boolean;
    'showDirections'?: boolean;
    'showFullscreenControl'?: boolean;
    'showGetDirectionsButton'?: boolean;
    'showLegend'?: boolean;
    'useCluster'?: boolean;
    'zoom'?: number;
  }

  interface YooRete {}
  interface YooReteAttributes extends StencilHTMLAttributes {}

  interface YooBarcodeDialog {
    'heading': string;
    'type': string;
    'value': string;
  }
  interface YooBarcodeDialogAttributes extends StencilHTMLAttributes {
    'heading'?: string;
    'type'?: string;
    'value'?: string;
  }

  interface YooBarcode {
    'height': number;
    'type': string;
    'value': string;
  }
  interface YooBarcodeAttributes extends StencilHTMLAttributes {
    'height'?: number;
    'type'?: string;
    'value'?: string;
  }

  interface YooScandit {
    'cleanUpScandit': () => void;
    'currentOcrRegex': IFormBarcodeOcrRegex;
    'pauseScanning': () => void;
    'restartOcrScanner': () => void;
    'scanMode': 'default' | 'batch' | 'ocr';
  }
  interface YooScanditAttributes extends StencilHTMLAttributes {
    'currentOcrRegex'?: IFormBarcodeOcrRegex;
    'onScannedSuccess'?: (event: CustomEvent<any>) => void;
    'scanMode'?: 'default' | 'batch' | 'ocr';
  }

  interface YooZebra {
    'appId': string;
  }
  interface YooZebraAttributes extends StencilHTMLAttributes {
    'appId'?: string;
    'onScannedSuccess'?: (event: CustomEvent<string>) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'YooCourseDetail': Components.YooCourseDetail;
    'YooLessonBadges': Components.YooLessonBadges;
    'YooLessonDetail': Components.YooLessonDetail;
    'YooLessonHeading': Components.YooLessonHeading;
    'YooLessonHighscores': Components.YooLessonHighscores;
    'YooLessonQuestionResult': Components.YooLessonQuestionResult;
    'YooPodium': Components.YooPodium;
    'YooQuestionDetail': Components.YooQuestionDetail;
    'YooUserDetail': Components.YooUserDetail;
    'YooCampaignEditorRecap': Components.YooCampaignEditorRecap;
    'YooCampaignHeading': Components.YooCampaignHeading;
    'YooContactDetail': Components.YooContactDetail;
    'YooDashboardDetail': Components.YooDashboardDetail;
    'YooFeedDetail': Components.YooFeedDetail;
    'YooHealthscoreDialog': Components.YooHealthscoreDialog;
    'YooHealthscore': Components.YooHealthscore;
    'YooLocationHeading': Components.YooLocationHeading;
    'YooLocationInfo': Components.YooLocationInfo;
    'YooLocationMap': Components.YooLocationMap;
    'YooMemoListDialog': Components.YooMemoListDialog;
    'YooMemoList': Components.YooMemoList;
    'YooMissionContents': Components.YooMissionContents;
    'YooMissionDetail': Components.YooMissionDetail;
    'YooMissionHeading': Components.YooMissionHeading;
    'YooMissionResults': Components.YooMissionResults;
    'YooMissionScore': Components.YooMissionScore;
    'YooMissionTodo': Components.YooMissionTodo;
    'YooAbout': Components.YooAbout;
    'YooApp': Components.YooApp;
    'YooLanguageSelector': Components.YooLanguageSelector;
    'YooLogin': Components.YooLogin;
    'YooProfile': Components.YooProfile;
    'YooResetPassword': Components.YooResetPassword;
    'YooUserProfile': Components.YooUserProfile;
    'YooWalkthrough': Components.YooWalkthrough;
    'YooWelcomeBanner': Components.YooWelcomeBanner;
    'YooChart': Components.YooChart;
    'YooKpiContainer': Components.YooKpiContainer;
    'YooKpiExternal': Components.YooKpiExternal;
    'YooKpi': Components.YooKpi;
    'YooPivotTable': Components.YooPivotTable;
    'YooAccordion': Components.YooAccordion;
    'YooActionSheet': Components.YooActionSheet;
    'YooAlert': Components.YooAlert;
    'YooAudioPlayer': Components.YooAudioPlayer;
    'YooAvatar': Components.YooAvatar;
    'YooBadge': Components.YooBadge;
    'YooBanner': Components.YooBanner;
    'YooBreadcrumbs': Components.YooBreadcrumbs;
    'YooButtonGroup': Components.YooButtonGroup;
    'YooButton': Components.YooButton;
    'YooCalendar': Components.YooCalendar;
    'YooChatMessage': Components.YooChatMessage;
    'YooChat': Components.YooChat;
    'YooColorSelector': Components.YooColorSelector;
    'YooContextMenu': Components.YooContextMenu;
    'YooCountDown': Components.YooCountDown;
    'YooDate': Components.YooDate;
    'YooDevice': Components.YooDevice;
    'YooEmptyState': Components.YooEmptyState;
    'YooFabButton': Components.YooFabButton;
    'YooFabContainer': Components.YooFabContainer;
    'YooFabList': Components.YooFabList;
    'YooIcon': Components.YooIcon;
    'YooImg': Components.YooImg;
    'YooInfoText': Components.YooInfoText;
    'YooInputBar': Components.YooInputBar;
    'YooLoader': Components.YooLoader;
    'YooMobileTabbar': Components.YooMobileTabbar;
    'YooModal': Components.YooModal;
    'YooNavbar': Components.YooNavbar;
    'YooPagination': Components.YooPagination;
    'YooPolyglot': Components.YooPolyglot;
    'YooProgressBarCircle': Components.YooProgressBarCircle;
    'YooProgressBarCore': Components.YooProgressBarCore;
    'YooProgressBarLine': Components.YooProgressBarLine;
    'YooProgressBarSemiCircle': Components.YooProgressBarSemiCircle;
    'YooProgressLoader': Components.YooProgressLoader;
    'YooPropertyCard': Components.YooPropertyCard;
    'YooResultDialog': Components.YooResultDialog;
    'YooSliderScale': Components.YooSliderScale;
    'YooSlider': Components.YooSlider;
    'YooSticky': Components.YooSticky;
    'YooSwipeContainer': Components.YooSwipeContainer;
    'YooTabs': Components.YooTabs;
    'YooTappable': Components.YooTappable;
    'YooTextTruncate': Components.YooTextTruncate;
    'YooTile': Components.YooTile;
    'YooToast': Components.YooToast;
    'YooToolbar': Components.YooToolbar;
    'YooTooltip': Components.YooTooltip;
    'YooTransition': Components.YooTransition;
    'YooWebMenu': Components.YooWebMenu;
    'YooZoom': Components.YooZoom;
    'YooBackgroundBlur': Components.YooBackgroundBlur;
    'YooCardCell': Components.YooCardCell;
    'YooCardCourseRow': Components.YooCardCourseRow;
    'YooCardCourse': Components.YooCardCourse;
    'YooCardFeed': Components.YooCardFeed;
    'YooCardFile': Components.YooCardFile;
    'YooCardImage': Components.YooCardImage;
    'YooCardLesson': Components.YooCardLesson;
    'YooCardList': Components.YooCardList;
    'YooCardMedia': Components.YooCardMedia;
    'YooCardPlaceholder': Components.YooCardPlaceholder;
    'YooCardQuestion': Components.YooCardQuestion;
    'YooCardSticky': Components.YooCardSticky;
    'YooCard': Components.YooCard;
    'YooEntitySearchDialog': Components.YooEntitySearchDialog;
    'YooEntitySearchFilters': Components.YooEntitySearchFilters;
    'YooEntitySearchRecent': Components.YooEntitySearchRecent;
    'YooEntitySearchSorts': Components.YooEntitySearchSorts;
    'YooEntitySearchTags': Components.YooEntitySearchTags;
    'YooEntitySearch': Components.YooEntitySearch;
    'YooEntity': Components.YooEntity;
    'YooUserPicker': Components.YooUserPicker;
    'YooFormCreatorBlockExpandable': Components.YooFormCreatorBlockExpandable;
    'YooFormCreatorBlockSimple': Components.YooFormCreatorBlockSimple;
    'YooFormCreatorHeader': Components.YooFormCreatorHeader;
    'YooFormCreatorPageCard': Components.YooFormCreatorPageCard;
    'YooFormCreator': Components.YooFormCreator;
    'YooFromCreatorPageCardList': Components.YooFromCreatorPageCardList;
    'YooCameraPreviewDialog': Components.YooCameraPreviewDialog;
    'YooFieldValidity': Components.YooFieldValidity;
    'YooFormAutocompleteDialog': Components.YooFormAutocompleteDialog;
    'YooFormAutocomplete': Components.YooFormAutocomplete;
    'YooFormBarcodeDialog': Components.YooFormBarcodeDialog;
    'YooFormBarcode': Components.YooFormBarcode;
    'YooFormCaptureTagDialog': Components.YooFormCaptureTagDialog;
    'YooFormCaptureViewDialog': Components.YooFormCaptureViewDialog;
    'YooFormCaptureWebcamDialog': Components.YooFormCaptureWebcamDialog;
    'YooFormCapture': Components.YooFormCapture;
    'YooFormCatalogDialog': Components.YooFormCatalogDialog;
    'YooFormCatalog': Components.YooFormCatalog;
    'YooFormCategorizeWords': Components.YooFormCategorizeWords;
    'YooFormCheckbox': Components.YooFormCheckbox;
    'YooFormChecklist': Components.YooFormChecklist;
    'YooFormChoice': Components.YooFormChoice;
    'YooFormColorField': Components.YooFormColorField;
    'YooFormColorPicker': Components.YooFormColorPicker;
    'YooFormConnect': Components.YooFormConnect;
    'YooFormDateTime': Components.YooFormDateTime;
    'YooFormDocumentDialog': Components.YooFormDocumentDialog;
    'YooFormDocument': Components.YooFormDocument;
    'YooFormDynamicDialog': Components.YooFormDynamicDialog;
    'YooFormDynamicHistoryDialog': Components.YooFormDynamicHistoryDialog;
    'YooFormDynamic': Components.YooFormDynamic;
    'YooFormEmailreport': Components.YooFormEmailreport;
    'YooFormFeedback': Components.YooFormFeedback;
    'YooFormFooter': Components.YooFormFooter;
    'YooFormFormula': Components.YooFormFormula;
    'YooFormIframe': Components.YooFormIframe;
    'YooFormImageTagging': Components.YooFormImageTagging;
    'YooFormInputContainer': Components.YooFormInputContainer;
    'YooFormInputGame': Components.YooFormInputGame;
    'YooFormInput': Components.YooFormInput;
    'YooFormJson': Components.YooFormJson;
    'YooFormLocation': Components.YooFormLocation;
    'YooFormMissingWord': Components.YooFormMissingWord;
    'YooFormNumberPickerDialog': Components.YooFormNumberPickerDialog;
    'YooFormNumberPicker': Components.YooFormNumberPicker;
    'YooFormProductBatch': Components.YooFormProductBatch;
    'YooFormProgressIndicator': Components.YooFormProgressIndicator;
    'YooFormRadioGroup': Components.YooFormRadioGroup;
    'YooFormRadio': Components.YooFormRadio;
    'YooFormRange': Components.YooFormRange;
    'YooFormRanking': Components.YooFormRanking;
    'YooFormRecapStep': Components.YooFormRecapStep;
    'YooFormSignaturePadDialog': Components.YooFormSignaturePadDialog;
    'YooFormSignaturePad': Components.YooFormSignaturePad;
    'YooFormSlider': Components.YooFormSlider;
    'YooFormStarRating': Components.YooFormStarRating;
    'YooFormSwipeCards': Components.YooFormSwipeCards;
    'YooFormTask': Components.YooFormTask;
    'YooFormTextArea': Components.YooFormTextArea;
    'YooFormTextEditor': Components.YooFormTextEditor;
    'YooFormTime': Components.YooFormTime;
    'YooFormTimer': Components.YooFormTimer;
    'YooFormTodoDialog': Components.YooFormTodoDialog;
    'YooFormTodoSingle': Components.YooFormTodoSingle;
    'YooFormTodo': Components.YooFormTodo;
    'YooFormToggle': Components.YooFormToggle;
    'YooFormUploader': Components.YooFormUploader;
    'YooFormVideoplayer': Components.YooFormVideoplayer;
    'YooPhotoEditor': Components.YooPhotoEditor;
    'YooPhotoEditors': Components.YooPhotoEditors;
    'YooAgGrid': Components.YooAgGrid;
    'YooGrid': Components.YooGrid;
    'YooIonActionSheetController': Components.YooIonActionSheetController;
    'YooIonAlertController': Components.YooIonAlertController;
    'YooIonButton': Components.YooIonButton;
    'YooIonButtons': Components.YooIonButtons;
    'YooIonContent': Components.YooIonContent;
    'YooIonFooter': Components.YooIonFooter;
    'YooIonGestureController': Components.YooIonGestureController;
    'YooIonGesture': Components.YooIonGesture;
    'YooIonHeader': Components.YooIonHeader;
    'YooIonInfiniteScrollContent': Components.YooIonInfiniteScrollContent;
    'YooIonInfiniteScroll': Components.YooIonInfiniteScroll;
    'YooIonItemDivider': Components.YooIonItemDivider;
    'YooIonItemOptions': Components.YooIonItemOptions;
    'YooIonItemSliding': Components.YooIonItemSliding;
    'YooIonItem': Components.YooIonItem;
    'YooIonList': Components.YooIonList;
    'YooIonModalController': Components.YooIonModalController;
    'YooIonModal': Components.YooIonModal;
    'YooIonRefresherContent': Components.YooIonRefresherContent;
    'YooIonRefresher': Components.YooIonRefresher;
    'YooIonScroll': Components.YooIonScroll;
    'YooIonSlide': Components.YooIonSlide;
    'YooIonSlides': Components.YooIonSlides;
    'YooIonTitle': Components.YooIonTitle;
    'YooIonToastController': Components.YooIonToastController;
    'YooIonToolbar': Components.YooIonToolbar;
    'YooAmap': Components.YooAmap;
    'YooMapGl': Components.YooMapGl;
    'YooMapJs': Components.YooMapJs;
    'YooMapLegend': Components.YooMapLegend;
    'YooMap': Components.YooMap;
    'YooRete': Components.YooRete;
    'YooBarcodeDialog': Components.YooBarcodeDialog;
    'YooBarcode': Components.YooBarcode;
    'YooScandit': Components.YooScandit;
    'YooZebra': Components.YooZebra;
  }

  interface StencilIntrinsicElements {
    'yoo-course-detail': Components.YooCourseDetailAttributes;
    'yoo-lesson-badges': Components.YooLessonBadgesAttributes;
    'yoo-lesson-detail': Components.YooLessonDetailAttributes;
    'yoo-lesson-heading': Components.YooLessonHeadingAttributes;
    'yoo-lesson-highscores': Components.YooLessonHighscoresAttributes;
    'yoo-lesson-question-result': Components.YooLessonQuestionResultAttributes;
    'yoo-podium': Components.YooPodiumAttributes;
    'yoo-question-detail': Components.YooQuestionDetailAttributes;
    'yoo-user-detail': Components.YooUserDetailAttributes;
    'yoo-campaign-editor-recap': Components.YooCampaignEditorRecapAttributes;
    'yoo-campaign-heading': Components.YooCampaignHeadingAttributes;
    'yoo-contact-detail': Components.YooContactDetailAttributes;
    'yoo-dashboard-detail': Components.YooDashboardDetailAttributes;
    'yoo-feed-detail': Components.YooFeedDetailAttributes;
    'yoo-healthscore-dialog': Components.YooHealthscoreDialogAttributes;
    'yoo-healthscore': Components.YooHealthscoreAttributes;
    'yoo-location-heading': Components.YooLocationHeadingAttributes;
    'yoo-location-info': Components.YooLocationInfoAttributes;
    'yoo-location-map': Components.YooLocationMapAttributes;
    'yoo-memo-list-dialog': Components.YooMemoListDialogAttributes;
    'yoo-memo-list': Components.YooMemoListAttributes;
    'yoo-mission-contents': Components.YooMissionContentsAttributes;
    'yoo-mission-detail': Components.YooMissionDetailAttributes;
    'yoo-mission-heading': Components.YooMissionHeadingAttributes;
    'yoo-mission-results': Components.YooMissionResultsAttributes;
    'yoo-mission-score': Components.YooMissionScoreAttributes;
    'yoo-mission-todo': Components.YooMissionTodoAttributes;
    'yoo-about': Components.YooAboutAttributes;
    'yoo-app': Components.YooAppAttributes;
    'yoo-language-selector': Components.YooLanguageSelectorAttributes;
    'yoo-login': Components.YooLoginAttributes;
    'yoo-profile': Components.YooProfileAttributes;
    'yoo-reset-password': Components.YooResetPasswordAttributes;
    'yoo-user-profile': Components.YooUserProfileAttributes;
    'yoo-walkthrough': Components.YooWalkthroughAttributes;
    'yoo-welcome-banner': Components.YooWelcomeBannerAttributes;
    'yoo-chart': Components.YooChartAttributes;
    'yoo-kpi-container': Components.YooKpiContainerAttributes;
    'yoo-kpi-external': Components.YooKpiExternalAttributes;
    'yoo-kpi': Components.YooKpiAttributes;
    'yoo-pivot-table': Components.YooPivotTableAttributes;
    'yoo-accordion': Components.YooAccordionAttributes;
    'yoo-action-sheet': Components.YooActionSheetAttributes;
    'yoo-alert': Components.YooAlertAttributes;
    'yoo-audio-player': Components.YooAudioPlayerAttributes;
    'yoo-avatar': Components.YooAvatarAttributes;
    'yoo-badge': Components.YooBadgeAttributes;
    'yoo-banner': Components.YooBannerAttributes;
    'yoo-breadcrumbs': Components.YooBreadcrumbsAttributes;
    'yoo-button-group': Components.YooButtonGroupAttributes;
    'yoo-button': Components.YooButtonAttributes;
    'yoo-calendar': Components.YooCalendarAttributes;
    'yoo-chat-message': Components.YooChatMessageAttributes;
    'yoo-chat': Components.YooChatAttributes;
    'yoo-color-selector': Components.YooColorSelectorAttributes;
    'yoo-context-menu': Components.YooContextMenuAttributes;
    'yoo-count-down': Components.YooCountDownAttributes;
    'yoo-date': Components.YooDateAttributes;
    'yoo-device': Components.YooDeviceAttributes;
    'yoo-empty-state': Components.YooEmptyStateAttributes;
    'yoo-fab-button': Components.YooFabButtonAttributes;
    'yoo-fab-container': Components.YooFabContainerAttributes;
    'yoo-fab-list': Components.YooFabListAttributes;
    'yoo-icon': Components.YooIconAttributes;
    'yoo-img': Components.YooImgAttributes;
    'yoo-info-text': Components.YooInfoTextAttributes;
    'yoo-input-bar': Components.YooInputBarAttributes;
    'yoo-loader': Components.YooLoaderAttributes;
    'yoo-mobile-tabbar': Components.YooMobileTabbarAttributes;
    'yoo-modal': Components.YooModalAttributes;
    'yoo-navbar': Components.YooNavbarAttributes;
    'yoo-pagination': Components.YooPaginationAttributes;
    'yoo-polyglot': Components.YooPolyglotAttributes;
    'yoo-progress-bar-circle': Components.YooProgressBarCircleAttributes;
    'yoo-progress-bar-core': Components.YooProgressBarCoreAttributes;
    'yoo-progress-bar-line': Components.YooProgressBarLineAttributes;
    'yoo-progress-bar-semi-circle': Components.YooProgressBarSemiCircleAttributes;
    'yoo-progress-loader': Components.YooProgressLoaderAttributes;
    'yoo-property-card': Components.YooPropertyCardAttributes;
    'yoo-result-dialog': Components.YooResultDialogAttributes;
    'yoo-slider-scale': Components.YooSliderScaleAttributes;
    'yoo-slider': Components.YooSliderAttributes;
    'yoo-sticky': Components.YooStickyAttributes;
    'yoo-swipe-container': Components.YooSwipeContainerAttributes;
    'yoo-tabs': Components.YooTabsAttributes;
    'yoo-tappable': Components.YooTappableAttributes;
    'yoo-text-truncate': Components.YooTextTruncateAttributes;
    'yoo-tile': Components.YooTileAttributes;
    'yoo-toast': Components.YooToastAttributes;
    'yoo-toolbar': Components.YooToolbarAttributes;
    'yoo-tooltip': Components.YooTooltipAttributes;
    'yoo-transition': Components.YooTransitionAttributes;
    'yoo-web-menu': Components.YooWebMenuAttributes;
    'yoo-zoom': Components.YooZoomAttributes;
    'yoo-background-blur': Components.YooBackgroundBlurAttributes;
    'yoo-card-cell': Components.YooCardCellAttributes;
    'yoo-card-course-row': Components.YooCardCourseRowAttributes;
    'yoo-card-course': Components.YooCardCourseAttributes;
    'yoo-card-feed': Components.YooCardFeedAttributes;
    'yoo-card-file': Components.YooCardFileAttributes;
    'yoo-card-image': Components.YooCardImageAttributes;
    'yoo-card-lesson': Components.YooCardLessonAttributes;
    'yoo-card-list': Components.YooCardListAttributes;
    'yoo-card-media': Components.YooCardMediaAttributes;
    'yoo-card-placeholder': Components.YooCardPlaceholderAttributes;
    'yoo-card-question': Components.YooCardQuestionAttributes;
    'yoo-card-sticky': Components.YooCardStickyAttributes;
    'yoo-card': Components.YooCardAttributes;
    'yoo-entity-search-dialog': Components.YooEntitySearchDialogAttributes;
    'yoo-entity-search-filters': Components.YooEntitySearchFiltersAttributes;
    'yoo-entity-search-recent': Components.YooEntitySearchRecentAttributes;
    'yoo-entity-search-sorts': Components.YooEntitySearchSortsAttributes;
    'yoo-entity-search-tags': Components.YooEntitySearchTagsAttributes;
    'yoo-entity-search': Components.YooEntitySearchAttributes;
    'yoo-entity': Components.YooEntityAttributes;
    'yoo-user-picker': Components.YooUserPickerAttributes;
    'yoo-form-creator-block-expandable': Components.YooFormCreatorBlockExpandableAttributes;
    'yoo-form-creator-block-simple': Components.YooFormCreatorBlockSimpleAttributes;
    'yoo-form-creator-header': Components.YooFormCreatorHeaderAttributes;
    'yoo-form-creator-page-card': Components.YooFormCreatorPageCardAttributes;
    'yoo-form-creator': Components.YooFormCreatorAttributes;
    'yoo-from-creator-page-card-list': Components.YooFromCreatorPageCardListAttributes;
    'yoo-camera-preview-dialog': Components.YooCameraPreviewDialogAttributes;
    'yoo-field-validity': Components.YooFieldValidityAttributes;
    'yoo-form-autocomplete-dialog': Components.YooFormAutocompleteDialogAttributes;
    'yoo-form-autocomplete': Components.YooFormAutocompleteAttributes;
    'yoo-form-barcode-dialog': Components.YooFormBarcodeDialogAttributes;
    'yoo-form-barcode': Components.YooFormBarcodeAttributes;
    'yoo-form-capture-tag-dialog': Components.YooFormCaptureTagDialogAttributes;
    'yoo-form-capture-view-dialog': Components.YooFormCaptureViewDialogAttributes;
    'yoo-form-capture-webcam-dialog': Components.YooFormCaptureWebcamDialogAttributes;
    'yoo-form-capture': Components.YooFormCaptureAttributes;
    'yoo-form-catalog-dialog': Components.YooFormCatalogDialogAttributes;
    'yoo-form-catalog': Components.YooFormCatalogAttributes;
    'yoo-form-categorize-words': Components.YooFormCategorizeWordsAttributes;
    'yoo-form-checkbox': Components.YooFormCheckboxAttributes;
    'yoo-form-checklist': Components.YooFormChecklistAttributes;
    'yoo-form-choice': Components.YooFormChoiceAttributes;
    'yoo-form-color-field': Components.YooFormColorFieldAttributes;
    'yoo-form-color-picker': Components.YooFormColorPickerAttributes;
    'yoo-form-connect': Components.YooFormConnectAttributes;
    'yoo-form-date-time': Components.YooFormDateTimeAttributes;
    'yoo-form-document-dialog': Components.YooFormDocumentDialogAttributes;
    'yoo-form-document': Components.YooFormDocumentAttributes;
    'yoo-form-dynamic-dialog': Components.YooFormDynamicDialogAttributes;
    'yoo-form-dynamic-history-dialog': Components.YooFormDynamicHistoryDialogAttributes;
    'yoo-form-dynamic': Components.YooFormDynamicAttributes;
    'yoo-form-emailreport': Components.YooFormEmailreportAttributes;
    'yoo-form-feedback': Components.YooFormFeedbackAttributes;
    'yoo-form-footer': Components.YooFormFooterAttributes;
    'yoo-form-formula': Components.YooFormFormulaAttributes;
    'yoo-form-iframe': Components.YooFormIframeAttributes;
    'yoo-form-image-tagging': Components.YooFormImageTaggingAttributes;
    'yoo-form-input-container': Components.YooFormInputContainerAttributes;
    'yoo-form-input-game': Components.YooFormInputGameAttributes;
    'yoo-form-input': Components.YooFormInputAttributes;
    'yoo-form-json': Components.YooFormJsonAttributes;
    'yoo-form-location': Components.YooFormLocationAttributes;
    'yoo-form-missing-word': Components.YooFormMissingWordAttributes;
    'yoo-form-number-picker-dialog': Components.YooFormNumberPickerDialogAttributes;
    'yoo-form-number-picker': Components.YooFormNumberPickerAttributes;
    'yoo-form-product-batch': Components.YooFormProductBatchAttributes;
    'yoo-form-progress-indicator': Components.YooFormProgressIndicatorAttributes;
    'yoo-form-radio-group': Components.YooFormRadioGroupAttributes;
    'yoo-form-radio': Components.YooFormRadioAttributes;
    'yoo-form-range': Components.YooFormRangeAttributes;
    'yoo-form-ranking': Components.YooFormRankingAttributes;
    'yoo-form-recap-step': Components.YooFormRecapStepAttributes;
    'yoo-form-signature-pad-dialog': Components.YooFormSignaturePadDialogAttributes;
    'yoo-form-signature-pad': Components.YooFormSignaturePadAttributes;
    'yoo-form-slider': Components.YooFormSliderAttributes;
    'yoo-form-star-rating': Components.YooFormStarRatingAttributes;
    'yoo-form-swipe-cards': Components.YooFormSwipeCardsAttributes;
    'yoo-form-task': Components.YooFormTaskAttributes;
    'yoo-form-text-area': Components.YooFormTextAreaAttributes;
    'yoo-form-text-editor': Components.YooFormTextEditorAttributes;
    'yoo-form-time': Components.YooFormTimeAttributes;
    'yoo-form-timer': Components.YooFormTimerAttributes;
    'yoo-form-todo-dialog': Components.YooFormTodoDialogAttributes;
    'yoo-form-todo-single': Components.YooFormTodoSingleAttributes;
    'yoo-form-todo': Components.YooFormTodoAttributes;
    'yoo-form-toggle': Components.YooFormToggleAttributes;
    'yoo-form-uploader': Components.YooFormUploaderAttributes;
    'yoo-form-videoplayer': Components.YooFormVideoplayerAttributes;
    'yoo-photo-editor': Components.YooPhotoEditorAttributes;
    'yoo-photo-editors': Components.YooPhotoEditorsAttributes;
    'yoo-ag-grid': Components.YooAgGridAttributes;
    'yoo-grid': Components.YooGridAttributes;
    'yoo-ion-action-sheet-controller': Components.YooIonActionSheetControllerAttributes;
    'yoo-ion-alert-controller': Components.YooIonAlertControllerAttributes;
    'yoo-ion-button': Components.YooIonButtonAttributes;
    'yoo-ion-buttons': Components.YooIonButtonsAttributes;
    'yoo-ion-content': Components.YooIonContentAttributes;
    'yoo-ion-footer': Components.YooIonFooterAttributes;
    'yoo-ion-gesture-controller': Components.YooIonGestureControllerAttributes;
    'yoo-ion-gesture': Components.YooIonGestureAttributes;
    'yoo-ion-header': Components.YooIonHeaderAttributes;
    'yoo-ion-infinite-scroll-content': Components.YooIonInfiniteScrollContentAttributes;
    'yoo-ion-infinite-scroll': Components.YooIonInfiniteScrollAttributes;
    'yoo-ion-item-divider': Components.YooIonItemDividerAttributes;
    'yoo-ion-item-options': Components.YooIonItemOptionsAttributes;
    'yoo-ion-item-sliding': Components.YooIonItemSlidingAttributes;
    'yoo-ion-item': Components.YooIonItemAttributes;
    'yoo-ion-list': Components.YooIonListAttributes;
    'yoo-ion-modal-controller': Components.YooIonModalControllerAttributes;
    'yoo-ion-modal': Components.YooIonModalAttributes;
    'yoo-ion-refresher-content': Components.YooIonRefresherContentAttributes;
    'yoo-ion-refresher': Components.YooIonRefresherAttributes;
    'yoo-ion-scroll': Components.YooIonScrollAttributes;
    'yoo-ion-slide': Components.YooIonSlideAttributes;
    'yoo-ion-slides': Components.YooIonSlidesAttributes;
    'yoo-ion-title': Components.YooIonTitleAttributes;
    'yoo-ion-toast-controller': Components.YooIonToastControllerAttributes;
    'yoo-ion-toolbar': Components.YooIonToolbarAttributes;
    'yoo-amap': Components.YooAmapAttributes;
    'yoo-map-gl': Components.YooMapGlAttributes;
    'yoo-map-js': Components.YooMapJsAttributes;
    'yoo-map-legend': Components.YooMapLegendAttributes;
    'yoo-map': Components.YooMapAttributes;
    'yoo-rete': Components.YooReteAttributes;
    'yoo-barcode-dialog': Components.YooBarcodeDialogAttributes;
    'yoo-barcode': Components.YooBarcodeAttributes;
    'yoo-scandit': Components.YooScanditAttributes;
    'yoo-zebra': Components.YooZebraAttributes;
  }


  interface HTMLYooCourseDetailElement extends Components.YooCourseDetail, HTMLStencilElement {}
  var HTMLYooCourseDetailElement: {
    prototype: HTMLYooCourseDetailElement;
    new (): HTMLYooCourseDetailElement;
  };

  interface HTMLYooLessonBadgesElement extends Components.YooLessonBadges, HTMLStencilElement {}
  var HTMLYooLessonBadgesElement: {
    prototype: HTMLYooLessonBadgesElement;
    new (): HTMLYooLessonBadgesElement;
  };

  interface HTMLYooLessonDetailElement extends Components.YooLessonDetail, HTMLStencilElement {}
  var HTMLYooLessonDetailElement: {
    prototype: HTMLYooLessonDetailElement;
    new (): HTMLYooLessonDetailElement;
  };

  interface HTMLYooLessonHeadingElement extends Components.YooLessonHeading, HTMLStencilElement {}
  var HTMLYooLessonHeadingElement: {
    prototype: HTMLYooLessonHeadingElement;
    new (): HTMLYooLessonHeadingElement;
  };

  interface HTMLYooLessonHighscoresElement extends Components.YooLessonHighscores, HTMLStencilElement {}
  var HTMLYooLessonHighscoresElement: {
    prototype: HTMLYooLessonHighscoresElement;
    new (): HTMLYooLessonHighscoresElement;
  };

  interface HTMLYooLessonQuestionResultElement extends Components.YooLessonQuestionResult, HTMLStencilElement {}
  var HTMLYooLessonQuestionResultElement: {
    prototype: HTMLYooLessonQuestionResultElement;
    new (): HTMLYooLessonQuestionResultElement;
  };

  interface HTMLYooPodiumElement extends Components.YooPodium, HTMLStencilElement {}
  var HTMLYooPodiumElement: {
    prototype: HTMLYooPodiumElement;
    new (): HTMLYooPodiumElement;
  };

  interface HTMLYooQuestionDetailElement extends Components.YooQuestionDetail, HTMLStencilElement {}
  var HTMLYooQuestionDetailElement: {
    prototype: HTMLYooQuestionDetailElement;
    new (): HTMLYooQuestionDetailElement;
  };

  interface HTMLYooUserDetailElement extends Components.YooUserDetail, HTMLStencilElement {}
  var HTMLYooUserDetailElement: {
    prototype: HTMLYooUserDetailElement;
    new (): HTMLYooUserDetailElement;
  };

  interface HTMLYooCampaignEditorRecapElement extends Components.YooCampaignEditorRecap, HTMLStencilElement {}
  var HTMLYooCampaignEditorRecapElement: {
    prototype: HTMLYooCampaignEditorRecapElement;
    new (): HTMLYooCampaignEditorRecapElement;
  };

  interface HTMLYooCampaignHeadingElement extends Components.YooCampaignHeading, HTMLStencilElement {}
  var HTMLYooCampaignHeadingElement: {
    prototype: HTMLYooCampaignHeadingElement;
    new (): HTMLYooCampaignHeadingElement;
  };

  interface HTMLYooContactDetailElement extends Components.YooContactDetail, HTMLStencilElement {}
  var HTMLYooContactDetailElement: {
    prototype: HTMLYooContactDetailElement;
    new (): HTMLYooContactDetailElement;
  };

  interface HTMLYooDashboardDetailElement extends Components.YooDashboardDetail, HTMLStencilElement {}
  var HTMLYooDashboardDetailElement: {
    prototype: HTMLYooDashboardDetailElement;
    new (): HTMLYooDashboardDetailElement;
  };

  interface HTMLYooFeedDetailElement extends Components.YooFeedDetail, HTMLStencilElement {}
  var HTMLYooFeedDetailElement: {
    prototype: HTMLYooFeedDetailElement;
    new (): HTMLYooFeedDetailElement;
  };

  interface HTMLYooHealthscoreDialogElement extends Components.YooHealthscoreDialog, HTMLStencilElement {}
  var HTMLYooHealthscoreDialogElement: {
    prototype: HTMLYooHealthscoreDialogElement;
    new (): HTMLYooHealthscoreDialogElement;
  };

  interface HTMLYooHealthscoreElement extends Components.YooHealthscore, HTMLStencilElement {}
  var HTMLYooHealthscoreElement: {
    prototype: HTMLYooHealthscoreElement;
    new (): HTMLYooHealthscoreElement;
  };

  interface HTMLYooLocationHeadingElement extends Components.YooLocationHeading, HTMLStencilElement {}
  var HTMLYooLocationHeadingElement: {
    prototype: HTMLYooLocationHeadingElement;
    new (): HTMLYooLocationHeadingElement;
  };

  interface HTMLYooLocationInfoElement extends Components.YooLocationInfo, HTMLStencilElement {}
  var HTMLYooLocationInfoElement: {
    prototype: HTMLYooLocationInfoElement;
    new (): HTMLYooLocationInfoElement;
  };

  interface HTMLYooLocationMapElement extends Components.YooLocationMap, HTMLStencilElement {}
  var HTMLYooLocationMapElement: {
    prototype: HTMLYooLocationMapElement;
    new (): HTMLYooLocationMapElement;
  };

  interface HTMLYooMemoListDialogElement extends Components.YooMemoListDialog, HTMLStencilElement {}
  var HTMLYooMemoListDialogElement: {
    prototype: HTMLYooMemoListDialogElement;
    new (): HTMLYooMemoListDialogElement;
  };

  interface HTMLYooMemoListElement extends Components.YooMemoList, HTMLStencilElement {}
  var HTMLYooMemoListElement: {
    prototype: HTMLYooMemoListElement;
    new (): HTMLYooMemoListElement;
  };

  interface HTMLYooMissionContentsElement extends Components.YooMissionContents, HTMLStencilElement {}
  var HTMLYooMissionContentsElement: {
    prototype: HTMLYooMissionContentsElement;
    new (): HTMLYooMissionContentsElement;
  };

  interface HTMLYooMissionDetailElement extends Components.YooMissionDetail, HTMLStencilElement {}
  var HTMLYooMissionDetailElement: {
    prototype: HTMLYooMissionDetailElement;
    new (): HTMLYooMissionDetailElement;
  };

  interface HTMLYooMissionHeadingElement extends Components.YooMissionHeading, HTMLStencilElement {}
  var HTMLYooMissionHeadingElement: {
    prototype: HTMLYooMissionHeadingElement;
    new (): HTMLYooMissionHeadingElement;
  };

  interface HTMLYooMissionResultsElement extends Components.YooMissionResults, HTMLStencilElement {}
  var HTMLYooMissionResultsElement: {
    prototype: HTMLYooMissionResultsElement;
    new (): HTMLYooMissionResultsElement;
  };

  interface HTMLYooMissionScoreElement extends Components.YooMissionScore, HTMLStencilElement {}
  var HTMLYooMissionScoreElement: {
    prototype: HTMLYooMissionScoreElement;
    new (): HTMLYooMissionScoreElement;
  };

  interface HTMLYooMissionTodoElement extends Components.YooMissionTodo, HTMLStencilElement {}
  var HTMLYooMissionTodoElement: {
    prototype: HTMLYooMissionTodoElement;
    new (): HTMLYooMissionTodoElement;
  };

  interface HTMLYooAboutElement extends Components.YooAbout, HTMLStencilElement {}
  var HTMLYooAboutElement: {
    prototype: HTMLYooAboutElement;
    new (): HTMLYooAboutElement;
  };

  interface HTMLYooAppElement extends Components.YooApp, HTMLStencilElement {}
  var HTMLYooAppElement: {
    prototype: HTMLYooAppElement;
    new (): HTMLYooAppElement;
  };

  interface HTMLYooLanguageSelectorElement extends Components.YooLanguageSelector, HTMLStencilElement {}
  var HTMLYooLanguageSelectorElement: {
    prototype: HTMLYooLanguageSelectorElement;
    new (): HTMLYooLanguageSelectorElement;
  };

  interface HTMLYooLoginElement extends Components.YooLogin, HTMLStencilElement {}
  var HTMLYooLoginElement: {
    prototype: HTMLYooLoginElement;
    new (): HTMLYooLoginElement;
  };

  interface HTMLYooProfileElement extends Components.YooProfile, HTMLStencilElement {}
  var HTMLYooProfileElement: {
    prototype: HTMLYooProfileElement;
    new (): HTMLYooProfileElement;
  };

  interface HTMLYooResetPasswordElement extends Components.YooResetPassword, HTMLStencilElement {}
  var HTMLYooResetPasswordElement: {
    prototype: HTMLYooResetPasswordElement;
    new (): HTMLYooResetPasswordElement;
  };

  interface HTMLYooUserProfileElement extends Components.YooUserProfile, HTMLStencilElement {}
  var HTMLYooUserProfileElement: {
    prototype: HTMLYooUserProfileElement;
    new (): HTMLYooUserProfileElement;
  };

  interface HTMLYooWalkthroughElement extends Components.YooWalkthrough, HTMLStencilElement {}
  var HTMLYooWalkthroughElement: {
    prototype: HTMLYooWalkthroughElement;
    new (): HTMLYooWalkthroughElement;
  };

  interface HTMLYooWelcomeBannerElement extends Components.YooWelcomeBanner, HTMLStencilElement {}
  var HTMLYooWelcomeBannerElement: {
    prototype: HTMLYooWelcomeBannerElement;
    new (): HTMLYooWelcomeBannerElement;
  };

  interface HTMLYooChartElement extends Components.YooChart, HTMLStencilElement {}
  var HTMLYooChartElement: {
    prototype: HTMLYooChartElement;
    new (): HTMLYooChartElement;
  };

  interface HTMLYooKpiContainerElement extends Components.YooKpiContainer, HTMLStencilElement {}
  var HTMLYooKpiContainerElement: {
    prototype: HTMLYooKpiContainerElement;
    new (): HTMLYooKpiContainerElement;
  };

  interface HTMLYooKpiExternalElement extends Components.YooKpiExternal, HTMLStencilElement {}
  var HTMLYooKpiExternalElement: {
    prototype: HTMLYooKpiExternalElement;
    new (): HTMLYooKpiExternalElement;
  };

  interface HTMLYooKpiElement extends Components.YooKpi, HTMLStencilElement {}
  var HTMLYooKpiElement: {
    prototype: HTMLYooKpiElement;
    new (): HTMLYooKpiElement;
  };

  interface HTMLYooPivotTableElement extends Components.YooPivotTable, HTMLStencilElement {}
  var HTMLYooPivotTableElement: {
    prototype: HTMLYooPivotTableElement;
    new (): HTMLYooPivotTableElement;
  };

  interface HTMLYooAccordionElement extends Components.YooAccordion, HTMLStencilElement {}
  var HTMLYooAccordionElement: {
    prototype: HTMLYooAccordionElement;
    new (): HTMLYooAccordionElement;
  };

  interface HTMLYooActionSheetElement extends Components.YooActionSheet, HTMLStencilElement {}
  var HTMLYooActionSheetElement: {
    prototype: HTMLYooActionSheetElement;
    new (): HTMLYooActionSheetElement;
  };

  interface HTMLYooAlertElement extends Components.YooAlert, HTMLStencilElement {}
  var HTMLYooAlertElement: {
    prototype: HTMLYooAlertElement;
    new (): HTMLYooAlertElement;
  };

  interface HTMLYooAudioPlayerElement extends Components.YooAudioPlayer, HTMLStencilElement {}
  var HTMLYooAudioPlayerElement: {
    prototype: HTMLYooAudioPlayerElement;
    new (): HTMLYooAudioPlayerElement;
  };

  interface HTMLYooAvatarElement extends Components.YooAvatar, HTMLStencilElement {}
  var HTMLYooAvatarElement: {
    prototype: HTMLYooAvatarElement;
    new (): HTMLYooAvatarElement;
  };

  interface HTMLYooBadgeElement extends Components.YooBadge, HTMLStencilElement {}
  var HTMLYooBadgeElement: {
    prototype: HTMLYooBadgeElement;
    new (): HTMLYooBadgeElement;
  };

  interface HTMLYooBannerElement extends Components.YooBanner, HTMLStencilElement {}
  var HTMLYooBannerElement: {
    prototype: HTMLYooBannerElement;
    new (): HTMLYooBannerElement;
  };

  interface HTMLYooBreadcrumbsElement extends Components.YooBreadcrumbs, HTMLStencilElement {}
  var HTMLYooBreadcrumbsElement: {
    prototype: HTMLYooBreadcrumbsElement;
    new (): HTMLYooBreadcrumbsElement;
  };

  interface HTMLYooButtonGroupElement extends Components.YooButtonGroup, HTMLStencilElement {}
  var HTMLYooButtonGroupElement: {
    prototype: HTMLYooButtonGroupElement;
    new (): HTMLYooButtonGroupElement;
  };

  interface HTMLYooButtonElement extends Components.YooButton, HTMLStencilElement {}
  var HTMLYooButtonElement: {
    prototype: HTMLYooButtonElement;
    new (): HTMLYooButtonElement;
  };

  interface HTMLYooCalendarElement extends Components.YooCalendar, HTMLStencilElement {}
  var HTMLYooCalendarElement: {
    prototype: HTMLYooCalendarElement;
    new (): HTMLYooCalendarElement;
  };

  interface HTMLYooChatMessageElement extends Components.YooChatMessage, HTMLStencilElement {}
  var HTMLYooChatMessageElement: {
    prototype: HTMLYooChatMessageElement;
    new (): HTMLYooChatMessageElement;
  };

  interface HTMLYooChatElement extends Components.YooChat, HTMLStencilElement {}
  var HTMLYooChatElement: {
    prototype: HTMLYooChatElement;
    new (): HTMLYooChatElement;
  };

  interface HTMLYooColorSelectorElement extends Components.YooColorSelector, HTMLStencilElement {}
  var HTMLYooColorSelectorElement: {
    prototype: HTMLYooColorSelectorElement;
    new (): HTMLYooColorSelectorElement;
  };

  interface HTMLYooContextMenuElement extends Components.YooContextMenu, HTMLStencilElement {}
  var HTMLYooContextMenuElement: {
    prototype: HTMLYooContextMenuElement;
    new (): HTMLYooContextMenuElement;
  };

  interface HTMLYooCountDownElement extends Components.YooCountDown, HTMLStencilElement {}
  var HTMLYooCountDownElement: {
    prototype: HTMLYooCountDownElement;
    new (): HTMLYooCountDownElement;
  };

  interface HTMLYooDateElement extends Components.YooDate, HTMLStencilElement {}
  var HTMLYooDateElement: {
    prototype: HTMLYooDateElement;
    new (): HTMLYooDateElement;
  };

  interface HTMLYooDeviceElement extends Components.YooDevice, HTMLStencilElement {}
  var HTMLYooDeviceElement: {
    prototype: HTMLYooDeviceElement;
    new (): HTMLYooDeviceElement;
  };

  interface HTMLYooEmptyStateElement extends Components.YooEmptyState, HTMLStencilElement {}
  var HTMLYooEmptyStateElement: {
    prototype: HTMLYooEmptyStateElement;
    new (): HTMLYooEmptyStateElement;
  };

  interface HTMLYooFabButtonElement extends Components.YooFabButton, HTMLStencilElement {}
  var HTMLYooFabButtonElement: {
    prototype: HTMLYooFabButtonElement;
    new (): HTMLYooFabButtonElement;
  };

  interface HTMLYooFabContainerElement extends Components.YooFabContainer, HTMLStencilElement {}
  var HTMLYooFabContainerElement: {
    prototype: HTMLYooFabContainerElement;
    new (): HTMLYooFabContainerElement;
  };

  interface HTMLYooFabListElement extends Components.YooFabList, HTMLStencilElement {}
  var HTMLYooFabListElement: {
    prototype: HTMLYooFabListElement;
    new (): HTMLYooFabListElement;
  };

  interface HTMLYooIconElement extends Components.YooIcon, HTMLStencilElement {}
  var HTMLYooIconElement: {
    prototype: HTMLYooIconElement;
    new (): HTMLYooIconElement;
  };

  interface HTMLYooImgElement extends Components.YooImg, HTMLStencilElement {}
  var HTMLYooImgElement: {
    prototype: HTMLYooImgElement;
    new (): HTMLYooImgElement;
  };

  interface HTMLYooInfoTextElement extends Components.YooInfoText, HTMLStencilElement {}
  var HTMLYooInfoTextElement: {
    prototype: HTMLYooInfoTextElement;
    new (): HTMLYooInfoTextElement;
  };

  interface HTMLYooInputBarElement extends Components.YooInputBar, HTMLStencilElement {}
  var HTMLYooInputBarElement: {
    prototype: HTMLYooInputBarElement;
    new (): HTMLYooInputBarElement;
  };

  interface HTMLYooLoaderElement extends Components.YooLoader, HTMLStencilElement {}
  var HTMLYooLoaderElement: {
    prototype: HTMLYooLoaderElement;
    new (): HTMLYooLoaderElement;
  };

  interface HTMLYooMobileTabbarElement extends Components.YooMobileTabbar, HTMLStencilElement {}
  var HTMLYooMobileTabbarElement: {
    prototype: HTMLYooMobileTabbarElement;
    new (): HTMLYooMobileTabbarElement;
  };

  interface HTMLYooModalElement extends Components.YooModal, HTMLStencilElement {}
  var HTMLYooModalElement: {
    prototype: HTMLYooModalElement;
    new (): HTMLYooModalElement;
  };

  interface HTMLYooNavbarElement extends Components.YooNavbar, HTMLStencilElement {}
  var HTMLYooNavbarElement: {
    prototype: HTMLYooNavbarElement;
    new (): HTMLYooNavbarElement;
  };

  interface HTMLYooPaginationElement extends Components.YooPagination, HTMLStencilElement {}
  var HTMLYooPaginationElement: {
    prototype: HTMLYooPaginationElement;
    new (): HTMLYooPaginationElement;
  };

  interface HTMLYooPolyglotElement extends Components.YooPolyglot, HTMLStencilElement {}
  var HTMLYooPolyglotElement: {
    prototype: HTMLYooPolyglotElement;
    new (): HTMLYooPolyglotElement;
  };

  interface HTMLYooProgressBarCircleElement extends Components.YooProgressBarCircle, HTMLStencilElement {}
  var HTMLYooProgressBarCircleElement: {
    prototype: HTMLYooProgressBarCircleElement;
    new (): HTMLYooProgressBarCircleElement;
  };

  interface HTMLYooProgressBarCoreElement extends Components.YooProgressBarCore, HTMLStencilElement {}
  var HTMLYooProgressBarCoreElement: {
    prototype: HTMLYooProgressBarCoreElement;
    new (): HTMLYooProgressBarCoreElement;
  };

  interface HTMLYooProgressBarLineElement extends Components.YooProgressBarLine, HTMLStencilElement {}
  var HTMLYooProgressBarLineElement: {
    prototype: HTMLYooProgressBarLineElement;
    new (): HTMLYooProgressBarLineElement;
  };

  interface HTMLYooProgressBarSemiCircleElement extends Components.YooProgressBarSemiCircle, HTMLStencilElement {}
  var HTMLYooProgressBarSemiCircleElement: {
    prototype: HTMLYooProgressBarSemiCircleElement;
    new (): HTMLYooProgressBarSemiCircleElement;
  };

  interface HTMLYooProgressLoaderElement extends Components.YooProgressLoader, HTMLStencilElement {}
  var HTMLYooProgressLoaderElement: {
    prototype: HTMLYooProgressLoaderElement;
    new (): HTMLYooProgressLoaderElement;
  };

  interface HTMLYooPropertyCardElement extends Components.YooPropertyCard, HTMLStencilElement {}
  var HTMLYooPropertyCardElement: {
    prototype: HTMLYooPropertyCardElement;
    new (): HTMLYooPropertyCardElement;
  };

  interface HTMLYooResultDialogElement extends Components.YooResultDialog, HTMLStencilElement {}
  var HTMLYooResultDialogElement: {
    prototype: HTMLYooResultDialogElement;
    new (): HTMLYooResultDialogElement;
  };

  interface HTMLYooSliderScaleElement extends Components.YooSliderScale, HTMLStencilElement {}
  var HTMLYooSliderScaleElement: {
    prototype: HTMLYooSliderScaleElement;
    new (): HTMLYooSliderScaleElement;
  };

  interface HTMLYooSliderElement extends Components.YooSlider, HTMLStencilElement {}
  var HTMLYooSliderElement: {
    prototype: HTMLYooSliderElement;
    new (): HTMLYooSliderElement;
  };

  interface HTMLYooStickyElement extends Components.YooSticky, HTMLStencilElement {}
  var HTMLYooStickyElement: {
    prototype: HTMLYooStickyElement;
    new (): HTMLYooStickyElement;
  };

  interface HTMLYooSwipeContainerElement extends Components.YooSwipeContainer, HTMLStencilElement {}
  var HTMLYooSwipeContainerElement: {
    prototype: HTMLYooSwipeContainerElement;
    new (): HTMLYooSwipeContainerElement;
  };

  interface HTMLYooTabsElement extends Components.YooTabs, HTMLStencilElement {}
  var HTMLYooTabsElement: {
    prototype: HTMLYooTabsElement;
    new (): HTMLYooTabsElement;
  };

  interface HTMLYooTappableElement extends Components.YooTappable, HTMLStencilElement {}
  var HTMLYooTappableElement: {
    prototype: HTMLYooTappableElement;
    new (): HTMLYooTappableElement;
  };

  interface HTMLYooTextTruncateElement extends Components.YooTextTruncate, HTMLStencilElement {}
  var HTMLYooTextTruncateElement: {
    prototype: HTMLYooTextTruncateElement;
    new (): HTMLYooTextTruncateElement;
  };

  interface HTMLYooTileElement extends Components.YooTile, HTMLStencilElement {}
  var HTMLYooTileElement: {
    prototype: HTMLYooTileElement;
    new (): HTMLYooTileElement;
  };

  interface HTMLYooToastElement extends Components.YooToast, HTMLStencilElement {}
  var HTMLYooToastElement: {
    prototype: HTMLYooToastElement;
    new (): HTMLYooToastElement;
  };

  interface HTMLYooToolbarElement extends Components.YooToolbar, HTMLStencilElement {}
  var HTMLYooToolbarElement: {
    prototype: HTMLYooToolbarElement;
    new (): HTMLYooToolbarElement;
  };

  interface HTMLYooTooltipElement extends Components.YooTooltip, HTMLStencilElement {}
  var HTMLYooTooltipElement: {
    prototype: HTMLYooTooltipElement;
    new (): HTMLYooTooltipElement;
  };

  interface HTMLYooTransitionElement extends Components.YooTransition, HTMLStencilElement {}
  var HTMLYooTransitionElement: {
    prototype: HTMLYooTransitionElement;
    new (): HTMLYooTransitionElement;
  };

  interface HTMLYooWebMenuElement extends Components.YooWebMenu, HTMLStencilElement {}
  var HTMLYooWebMenuElement: {
    prototype: HTMLYooWebMenuElement;
    new (): HTMLYooWebMenuElement;
  };

  interface HTMLYooZoomElement extends Components.YooZoom, HTMLStencilElement {}
  var HTMLYooZoomElement: {
    prototype: HTMLYooZoomElement;
    new (): HTMLYooZoomElement;
  };

  interface HTMLYooBackgroundBlurElement extends Components.YooBackgroundBlur, HTMLStencilElement {}
  var HTMLYooBackgroundBlurElement: {
    prototype: HTMLYooBackgroundBlurElement;
    new (): HTMLYooBackgroundBlurElement;
  };

  interface HTMLYooCardCellElement extends Components.YooCardCell, HTMLStencilElement {}
  var HTMLYooCardCellElement: {
    prototype: HTMLYooCardCellElement;
    new (): HTMLYooCardCellElement;
  };

  interface HTMLYooCardCourseRowElement extends Components.YooCardCourseRow, HTMLStencilElement {}
  var HTMLYooCardCourseRowElement: {
    prototype: HTMLYooCardCourseRowElement;
    new (): HTMLYooCardCourseRowElement;
  };

  interface HTMLYooCardCourseElement extends Components.YooCardCourse, HTMLStencilElement {}
  var HTMLYooCardCourseElement: {
    prototype: HTMLYooCardCourseElement;
    new (): HTMLYooCardCourseElement;
  };

  interface HTMLYooCardFeedElement extends Components.YooCardFeed, HTMLStencilElement {}
  var HTMLYooCardFeedElement: {
    prototype: HTMLYooCardFeedElement;
    new (): HTMLYooCardFeedElement;
  };

  interface HTMLYooCardFileElement extends Components.YooCardFile, HTMLStencilElement {}
  var HTMLYooCardFileElement: {
    prototype: HTMLYooCardFileElement;
    new (): HTMLYooCardFileElement;
  };

  interface HTMLYooCardImageElement extends Components.YooCardImage, HTMLStencilElement {}
  var HTMLYooCardImageElement: {
    prototype: HTMLYooCardImageElement;
    new (): HTMLYooCardImageElement;
  };

  interface HTMLYooCardLessonElement extends Components.YooCardLesson, HTMLStencilElement {}
  var HTMLYooCardLessonElement: {
    prototype: HTMLYooCardLessonElement;
    new (): HTMLYooCardLessonElement;
  };

  interface HTMLYooCardListElement extends Components.YooCardList, HTMLStencilElement {}
  var HTMLYooCardListElement: {
    prototype: HTMLYooCardListElement;
    new (): HTMLYooCardListElement;
  };

  interface HTMLYooCardMediaElement extends Components.YooCardMedia, HTMLStencilElement {}
  var HTMLYooCardMediaElement: {
    prototype: HTMLYooCardMediaElement;
    new (): HTMLYooCardMediaElement;
  };

  interface HTMLYooCardPlaceholderElement extends Components.YooCardPlaceholder, HTMLStencilElement {}
  var HTMLYooCardPlaceholderElement: {
    prototype: HTMLYooCardPlaceholderElement;
    new (): HTMLYooCardPlaceholderElement;
  };

  interface HTMLYooCardQuestionElement extends Components.YooCardQuestion, HTMLStencilElement {}
  var HTMLYooCardQuestionElement: {
    prototype: HTMLYooCardQuestionElement;
    new (): HTMLYooCardQuestionElement;
  };

  interface HTMLYooCardStickyElement extends Components.YooCardSticky, HTMLStencilElement {}
  var HTMLYooCardStickyElement: {
    prototype: HTMLYooCardStickyElement;
    new (): HTMLYooCardStickyElement;
  };

  interface HTMLYooCardElement extends Components.YooCard, HTMLStencilElement {}
  var HTMLYooCardElement: {
    prototype: HTMLYooCardElement;
    new (): HTMLYooCardElement;
  };

  interface HTMLYooEntitySearchDialogElement extends Components.YooEntitySearchDialog, HTMLStencilElement {}
  var HTMLYooEntitySearchDialogElement: {
    prototype: HTMLYooEntitySearchDialogElement;
    new (): HTMLYooEntitySearchDialogElement;
  };

  interface HTMLYooEntitySearchFiltersElement extends Components.YooEntitySearchFilters, HTMLStencilElement {}
  var HTMLYooEntitySearchFiltersElement: {
    prototype: HTMLYooEntitySearchFiltersElement;
    new (): HTMLYooEntitySearchFiltersElement;
  };

  interface HTMLYooEntitySearchRecentElement extends Components.YooEntitySearchRecent, HTMLStencilElement {}
  var HTMLYooEntitySearchRecentElement: {
    prototype: HTMLYooEntitySearchRecentElement;
    new (): HTMLYooEntitySearchRecentElement;
  };

  interface HTMLYooEntitySearchSortsElement extends Components.YooEntitySearchSorts, HTMLStencilElement {}
  var HTMLYooEntitySearchSortsElement: {
    prototype: HTMLYooEntitySearchSortsElement;
    new (): HTMLYooEntitySearchSortsElement;
  };

  interface HTMLYooEntitySearchTagsElement extends Components.YooEntitySearchTags, HTMLStencilElement {}
  var HTMLYooEntitySearchTagsElement: {
    prototype: HTMLYooEntitySearchTagsElement;
    new (): HTMLYooEntitySearchTagsElement;
  };

  interface HTMLYooEntitySearchElement extends Components.YooEntitySearch, HTMLStencilElement {}
  var HTMLYooEntitySearchElement: {
    prototype: HTMLYooEntitySearchElement;
    new (): HTMLYooEntitySearchElement;
  };

  interface HTMLYooEntityElement extends Components.YooEntity, HTMLStencilElement {}
  var HTMLYooEntityElement: {
    prototype: HTMLYooEntityElement;
    new (): HTMLYooEntityElement;
  };

  interface HTMLYooUserPickerElement extends Components.YooUserPicker, HTMLStencilElement {}
  var HTMLYooUserPickerElement: {
    prototype: HTMLYooUserPickerElement;
    new (): HTMLYooUserPickerElement;
  };

  interface HTMLYooFormCreatorBlockExpandableElement extends Components.YooFormCreatorBlockExpandable, HTMLStencilElement {}
  var HTMLYooFormCreatorBlockExpandableElement: {
    prototype: HTMLYooFormCreatorBlockExpandableElement;
    new (): HTMLYooFormCreatorBlockExpandableElement;
  };

  interface HTMLYooFormCreatorBlockSimpleElement extends Components.YooFormCreatorBlockSimple, HTMLStencilElement {}
  var HTMLYooFormCreatorBlockSimpleElement: {
    prototype: HTMLYooFormCreatorBlockSimpleElement;
    new (): HTMLYooFormCreatorBlockSimpleElement;
  };

  interface HTMLYooFormCreatorHeaderElement extends Components.YooFormCreatorHeader, HTMLStencilElement {}
  var HTMLYooFormCreatorHeaderElement: {
    prototype: HTMLYooFormCreatorHeaderElement;
    new (): HTMLYooFormCreatorHeaderElement;
  };

  interface HTMLYooFormCreatorPageCardElement extends Components.YooFormCreatorPageCard, HTMLStencilElement {}
  var HTMLYooFormCreatorPageCardElement: {
    prototype: HTMLYooFormCreatorPageCardElement;
    new (): HTMLYooFormCreatorPageCardElement;
  };

  interface HTMLYooFormCreatorElement extends Components.YooFormCreator, HTMLStencilElement {}
  var HTMLYooFormCreatorElement: {
    prototype: HTMLYooFormCreatorElement;
    new (): HTMLYooFormCreatorElement;
  };

  interface HTMLYooFromCreatorPageCardListElement extends Components.YooFromCreatorPageCardList, HTMLStencilElement {}
  var HTMLYooFromCreatorPageCardListElement: {
    prototype: HTMLYooFromCreatorPageCardListElement;
    new (): HTMLYooFromCreatorPageCardListElement;
  };

  interface HTMLYooCameraPreviewDialogElement extends Components.YooCameraPreviewDialog, HTMLStencilElement {}
  var HTMLYooCameraPreviewDialogElement: {
    prototype: HTMLYooCameraPreviewDialogElement;
    new (): HTMLYooCameraPreviewDialogElement;
  };

  interface HTMLYooFieldValidityElement extends Components.YooFieldValidity, HTMLStencilElement {}
  var HTMLYooFieldValidityElement: {
    prototype: HTMLYooFieldValidityElement;
    new (): HTMLYooFieldValidityElement;
  };

  interface HTMLYooFormAutocompleteDialogElement extends Components.YooFormAutocompleteDialog, HTMLStencilElement {}
  var HTMLYooFormAutocompleteDialogElement: {
    prototype: HTMLYooFormAutocompleteDialogElement;
    new (): HTMLYooFormAutocompleteDialogElement;
  };

  interface HTMLYooFormAutocompleteElement extends Components.YooFormAutocomplete, HTMLStencilElement {}
  var HTMLYooFormAutocompleteElement: {
    prototype: HTMLYooFormAutocompleteElement;
    new (): HTMLYooFormAutocompleteElement;
  };

  interface HTMLYooFormBarcodeDialogElement extends Components.YooFormBarcodeDialog, HTMLStencilElement {}
  var HTMLYooFormBarcodeDialogElement: {
    prototype: HTMLYooFormBarcodeDialogElement;
    new (): HTMLYooFormBarcodeDialogElement;
  };

  interface HTMLYooFormBarcodeElement extends Components.YooFormBarcode, HTMLStencilElement {}
  var HTMLYooFormBarcodeElement: {
    prototype: HTMLYooFormBarcodeElement;
    new (): HTMLYooFormBarcodeElement;
  };

  interface HTMLYooFormCaptureTagDialogElement extends Components.YooFormCaptureTagDialog, HTMLStencilElement {}
  var HTMLYooFormCaptureTagDialogElement: {
    prototype: HTMLYooFormCaptureTagDialogElement;
    new (): HTMLYooFormCaptureTagDialogElement;
  };

  interface HTMLYooFormCaptureViewDialogElement extends Components.YooFormCaptureViewDialog, HTMLStencilElement {}
  var HTMLYooFormCaptureViewDialogElement: {
    prototype: HTMLYooFormCaptureViewDialogElement;
    new (): HTMLYooFormCaptureViewDialogElement;
  };

  interface HTMLYooFormCaptureWebcamDialogElement extends Components.YooFormCaptureWebcamDialog, HTMLStencilElement {}
  var HTMLYooFormCaptureWebcamDialogElement: {
    prototype: HTMLYooFormCaptureWebcamDialogElement;
    new (): HTMLYooFormCaptureWebcamDialogElement;
  };

  interface HTMLYooFormCaptureElement extends Components.YooFormCapture, HTMLStencilElement {}
  var HTMLYooFormCaptureElement: {
    prototype: HTMLYooFormCaptureElement;
    new (): HTMLYooFormCaptureElement;
  };

  interface HTMLYooFormCatalogDialogElement extends Components.YooFormCatalogDialog, HTMLStencilElement {}
  var HTMLYooFormCatalogDialogElement: {
    prototype: HTMLYooFormCatalogDialogElement;
    new (): HTMLYooFormCatalogDialogElement;
  };

  interface HTMLYooFormCatalogElement extends Components.YooFormCatalog, HTMLStencilElement {}
  var HTMLYooFormCatalogElement: {
    prototype: HTMLYooFormCatalogElement;
    new (): HTMLYooFormCatalogElement;
  };

  interface HTMLYooFormCategorizeWordsElement extends Components.YooFormCategorizeWords, HTMLStencilElement {}
  var HTMLYooFormCategorizeWordsElement: {
    prototype: HTMLYooFormCategorizeWordsElement;
    new (): HTMLYooFormCategorizeWordsElement;
  };

  interface HTMLYooFormCheckboxElement extends Components.YooFormCheckbox, HTMLStencilElement {}
  var HTMLYooFormCheckboxElement: {
    prototype: HTMLYooFormCheckboxElement;
    new (): HTMLYooFormCheckboxElement;
  };

  interface HTMLYooFormChecklistElement extends Components.YooFormChecklist, HTMLStencilElement {}
  var HTMLYooFormChecklistElement: {
    prototype: HTMLYooFormChecklistElement;
    new (): HTMLYooFormChecklistElement;
  };

  interface HTMLYooFormChoiceElement extends Components.YooFormChoice, HTMLStencilElement {}
  var HTMLYooFormChoiceElement: {
    prototype: HTMLYooFormChoiceElement;
    new (): HTMLYooFormChoiceElement;
  };

  interface HTMLYooFormColorFieldElement extends Components.YooFormColorField, HTMLStencilElement {}
  var HTMLYooFormColorFieldElement: {
    prototype: HTMLYooFormColorFieldElement;
    new (): HTMLYooFormColorFieldElement;
  };

  interface HTMLYooFormColorPickerElement extends Components.YooFormColorPicker, HTMLStencilElement {}
  var HTMLYooFormColorPickerElement: {
    prototype: HTMLYooFormColorPickerElement;
    new (): HTMLYooFormColorPickerElement;
  };

  interface HTMLYooFormConnectElement extends Components.YooFormConnect, HTMLStencilElement {}
  var HTMLYooFormConnectElement: {
    prototype: HTMLYooFormConnectElement;
    new (): HTMLYooFormConnectElement;
  };

  interface HTMLYooFormDateTimeElement extends Components.YooFormDateTime, HTMLStencilElement {}
  var HTMLYooFormDateTimeElement: {
    prototype: HTMLYooFormDateTimeElement;
    new (): HTMLYooFormDateTimeElement;
  };

  interface HTMLYooFormDocumentDialogElement extends Components.YooFormDocumentDialog, HTMLStencilElement {}
  var HTMLYooFormDocumentDialogElement: {
    prototype: HTMLYooFormDocumentDialogElement;
    new (): HTMLYooFormDocumentDialogElement;
  };

  interface HTMLYooFormDocumentElement extends Components.YooFormDocument, HTMLStencilElement {}
  var HTMLYooFormDocumentElement: {
    prototype: HTMLYooFormDocumentElement;
    new (): HTMLYooFormDocumentElement;
  };

  interface HTMLYooFormDynamicDialogElement extends Components.YooFormDynamicDialog, HTMLStencilElement {}
  var HTMLYooFormDynamicDialogElement: {
    prototype: HTMLYooFormDynamicDialogElement;
    new (): HTMLYooFormDynamicDialogElement;
  };

  interface HTMLYooFormDynamicHistoryDialogElement extends Components.YooFormDynamicHistoryDialog, HTMLStencilElement {}
  var HTMLYooFormDynamicHistoryDialogElement: {
    prototype: HTMLYooFormDynamicHistoryDialogElement;
    new (): HTMLYooFormDynamicHistoryDialogElement;
  };

  interface HTMLYooFormDynamicElement extends Components.YooFormDynamic, HTMLStencilElement {}
  var HTMLYooFormDynamicElement: {
    prototype: HTMLYooFormDynamicElement;
    new (): HTMLYooFormDynamicElement;
  };

  interface HTMLYooFormEmailreportElement extends Components.YooFormEmailreport, HTMLStencilElement {}
  var HTMLYooFormEmailreportElement: {
    prototype: HTMLYooFormEmailreportElement;
    new (): HTMLYooFormEmailreportElement;
  };

  interface HTMLYooFormFeedbackElement extends Components.YooFormFeedback, HTMLStencilElement {}
  var HTMLYooFormFeedbackElement: {
    prototype: HTMLYooFormFeedbackElement;
    new (): HTMLYooFormFeedbackElement;
  };

  interface HTMLYooFormFooterElement extends Components.YooFormFooter, HTMLStencilElement {}
  var HTMLYooFormFooterElement: {
    prototype: HTMLYooFormFooterElement;
    new (): HTMLYooFormFooterElement;
  };

  interface HTMLYooFormFormulaElement extends Components.YooFormFormula, HTMLStencilElement {}
  var HTMLYooFormFormulaElement: {
    prototype: HTMLYooFormFormulaElement;
    new (): HTMLYooFormFormulaElement;
  };

  interface HTMLYooFormIframeElement extends Components.YooFormIframe, HTMLStencilElement {}
  var HTMLYooFormIframeElement: {
    prototype: HTMLYooFormIframeElement;
    new (): HTMLYooFormIframeElement;
  };

  interface HTMLYooFormImageTaggingElement extends Components.YooFormImageTagging, HTMLStencilElement {}
  var HTMLYooFormImageTaggingElement: {
    prototype: HTMLYooFormImageTaggingElement;
    new (): HTMLYooFormImageTaggingElement;
  };

  interface HTMLYooFormInputContainerElement extends Components.YooFormInputContainer, HTMLStencilElement {}
  var HTMLYooFormInputContainerElement: {
    prototype: HTMLYooFormInputContainerElement;
    new (): HTMLYooFormInputContainerElement;
  };

  interface HTMLYooFormInputGameElement extends Components.YooFormInputGame, HTMLStencilElement {}
  var HTMLYooFormInputGameElement: {
    prototype: HTMLYooFormInputGameElement;
    new (): HTMLYooFormInputGameElement;
  };

  interface HTMLYooFormInputElement extends Components.YooFormInput, HTMLStencilElement {}
  var HTMLYooFormInputElement: {
    prototype: HTMLYooFormInputElement;
    new (): HTMLYooFormInputElement;
  };

  interface HTMLYooFormJsonElement extends Components.YooFormJson, HTMLStencilElement {}
  var HTMLYooFormJsonElement: {
    prototype: HTMLYooFormJsonElement;
    new (): HTMLYooFormJsonElement;
  };

  interface HTMLYooFormLocationElement extends Components.YooFormLocation, HTMLStencilElement {}
  var HTMLYooFormLocationElement: {
    prototype: HTMLYooFormLocationElement;
    new (): HTMLYooFormLocationElement;
  };

  interface HTMLYooFormMissingWordElement extends Components.YooFormMissingWord, HTMLStencilElement {}
  var HTMLYooFormMissingWordElement: {
    prototype: HTMLYooFormMissingWordElement;
    new (): HTMLYooFormMissingWordElement;
  };

  interface HTMLYooFormNumberPickerDialogElement extends Components.YooFormNumberPickerDialog, HTMLStencilElement {}
  var HTMLYooFormNumberPickerDialogElement: {
    prototype: HTMLYooFormNumberPickerDialogElement;
    new (): HTMLYooFormNumberPickerDialogElement;
  };

  interface HTMLYooFormNumberPickerElement extends Components.YooFormNumberPicker, HTMLStencilElement {}
  var HTMLYooFormNumberPickerElement: {
    prototype: HTMLYooFormNumberPickerElement;
    new (): HTMLYooFormNumberPickerElement;
  };

  interface HTMLYooFormProductBatchElement extends Components.YooFormProductBatch, HTMLStencilElement {}
  var HTMLYooFormProductBatchElement: {
    prototype: HTMLYooFormProductBatchElement;
    new (): HTMLYooFormProductBatchElement;
  };

  interface HTMLYooFormProgressIndicatorElement extends Components.YooFormProgressIndicator, HTMLStencilElement {}
  var HTMLYooFormProgressIndicatorElement: {
    prototype: HTMLYooFormProgressIndicatorElement;
    new (): HTMLYooFormProgressIndicatorElement;
  };

  interface HTMLYooFormRadioGroupElement extends Components.YooFormRadioGroup, HTMLStencilElement {}
  var HTMLYooFormRadioGroupElement: {
    prototype: HTMLYooFormRadioGroupElement;
    new (): HTMLYooFormRadioGroupElement;
  };

  interface HTMLYooFormRadioElement extends Components.YooFormRadio, HTMLStencilElement {}
  var HTMLYooFormRadioElement: {
    prototype: HTMLYooFormRadioElement;
    new (): HTMLYooFormRadioElement;
  };

  interface HTMLYooFormRangeElement extends Components.YooFormRange, HTMLStencilElement {}
  var HTMLYooFormRangeElement: {
    prototype: HTMLYooFormRangeElement;
    new (): HTMLYooFormRangeElement;
  };

  interface HTMLYooFormRankingElement extends Components.YooFormRanking, HTMLStencilElement {}
  var HTMLYooFormRankingElement: {
    prototype: HTMLYooFormRankingElement;
    new (): HTMLYooFormRankingElement;
  };

  interface HTMLYooFormRecapStepElement extends Components.YooFormRecapStep, HTMLStencilElement {}
  var HTMLYooFormRecapStepElement: {
    prototype: HTMLYooFormRecapStepElement;
    new (): HTMLYooFormRecapStepElement;
  };

  interface HTMLYooFormSignaturePadDialogElement extends Components.YooFormSignaturePadDialog, HTMLStencilElement {}
  var HTMLYooFormSignaturePadDialogElement: {
    prototype: HTMLYooFormSignaturePadDialogElement;
    new (): HTMLYooFormSignaturePadDialogElement;
  };

  interface HTMLYooFormSignaturePadElement extends Components.YooFormSignaturePad, HTMLStencilElement {}
  var HTMLYooFormSignaturePadElement: {
    prototype: HTMLYooFormSignaturePadElement;
    new (): HTMLYooFormSignaturePadElement;
  };

  interface HTMLYooFormSliderElement extends Components.YooFormSlider, HTMLStencilElement {}
  var HTMLYooFormSliderElement: {
    prototype: HTMLYooFormSliderElement;
    new (): HTMLYooFormSliderElement;
  };

  interface HTMLYooFormStarRatingElement extends Components.YooFormStarRating, HTMLStencilElement {}
  var HTMLYooFormStarRatingElement: {
    prototype: HTMLYooFormStarRatingElement;
    new (): HTMLYooFormStarRatingElement;
  };

  interface HTMLYooFormSwipeCardsElement extends Components.YooFormSwipeCards, HTMLStencilElement {}
  var HTMLYooFormSwipeCardsElement: {
    prototype: HTMLYooFormSwipeCardsElement;
    new (): HTMLYooFormSwipeCardsElement;
  };

  interface HTMLYooFormTaskElement extends Components.YooFormTask, HTMLStencilElement {}
  var HTMLYooFormTaskElement: {
    prototype: HTMLYooFormTaskElement;
    new (): HTMLYooFormTaskElement;
  };

  interface HTMLYooFormTextAreaElement extends Components.YooFormTextArea, HTMLStencilElement {}
  var HTMLYooFormTextAreaElement: {
    prototype: HTMLYooFormTextAreaElement;
    new (): HTMLYooFormTextAreaElement;
  };

  interface HTMLYooFormTextEditorElement extends Components.YooFormTextEditor, HTMLStencilElement {}
  var HTMLYooFormTextEditorElement: {
    prototype: HTMLYooFormTextEditorElement;
    new (): HTMLYooFormTextEditorElement;
  };

  interface HTMLYooFormTimeElement extends Components.YooFormTime, HTMLStencilElement {}
  var HTMLYooFormTimeElement: {
    prototype: HTMLYooFormTimeElement;
    new (): HTMLYooFormTimeElement;
  };

  interface HTMLYooFormTimerElement extends Components.YooFormTimer, HTMLStencilElement {}
  var HTMLYooFormTimerElement: {
    prototype: HTMLYooFormTimerElement;
    new (): HTMLYooFormTimerElement;
  };

  interface HTMLYooFormTodoDialogElement extends Components.YooFormTodoDialog, HTMLStencilElement {}
  var HTMLYooFormTodoDialogElement: {
    prototype: HTMLYooFormTodoDialogElement;
    new (): HTMLYooFormTodoDialogElement;
  };

  interface HTMLYooFormTodoSingleElement extends Components.YooFormTodoSingle, HTMLStencilElement {}
  var HTMLYooFormTodoSingleElement: {
    prototype: HTMLYooFormTodoSingleElement;
    new (): HTMLYooFormTodoSingleElement;
  };

  interface HTMLYooFormTodoElement extends Components.YooFormTodo, HTMLStencilElement {}
  var HTMLYooFormTodoElement: {
    prototype: HTMLYooFormTodoElement;
    new (): HTMLYooFormTodoElement;
  };

  interface HTMLYooFormToggleElement extends Components.YooFormToggle, HTMLStencilElement {}
  var HTMLYooFormToggleElement: {
    prototype: HTMLYooFormToggleElement;
    new (): HTMLYooFormToggleElement;
  };

  interface HTMLYooFormUploaderElement extends Components.YooFormUploader, HTMLStencilElement {}
  var HTMLYooFormUploaderElement: {
    prototype: HTMLYooFormUploaderElement;
    new (): HTMLYooFormUploaderElement;
  };

  interface HTMLYooFormVideoplayerElement extends Components.YooFormVideoplayer, HTMLStencilElement {}
  var HTMLYooFormVideoplayerElement: {
    prototype: HTMLYooFormVideoplayerElement;
    new (): HTMLYooFormVideoplayerElement;
  };

  interface HTMLYooPhotoEditorElement extends Components.YooPhotoEditor, HTMLStencilElement {}
  var HTMLYooPhotoEditorElement: {
    prototype: HTMLYooPhotoEditorElement;
    new (): HTMLYooPhotoEditorElement;
  };

  interface HTMLYooPhotoEditorsElement extends Components.YooPhotoEditors, HTMLStencilElement {}
  var HTMLYooPhotoEditorsElement: {
    prototype: HTMLYooPhotoEditorsElement;
    new (): HTMLYooPhotoEditorsElement;
  };

  interface HTMLYooAgGridElement extends Components.YooAgGrid, HTMLStencilElement {}
  var HTMLYooAgGridElement: {
    prototype: HTMLYooAgGridElement;
    new (): HTMLYooAgGridElement;
  };

  interface HTMLYooGridElement extends Components.YooGrid, HTMLStencilElement {}
  var HTMLYooGridElement: {
    prototype: HTMLYooGridElement;
    new (): HTMLYooGridElement;
  };

  interface HTMLYooIonActionSheetControllerElement extends Components.YooIonActionSheetController, HTMLStencilElement {}
  var HTMLYooIonActionSheetControllerElement: {
    prototype: HTMLYooIonActionSheetControllerElement;
    new (): HTMLYooIonActionSheetControllerElement;
  };

  interface HTMLYooIonAlertControllerElement extends Components.YooIonAlertController, HTMLStencilElement {}
  var HTMLYooIonAlertControllerElement: {
    prototype: HTMLYooIonAlertControllerElement;
    new (): HTMLYooIonAlertControllerElement;
  };

  interface HTMLYooIonButtonElement extends Components.YooIonButton, HTMLStencilElement {}
  var HTMLYooIonButtonElement: {
    prototype: HTMLYooIonButtonElement;
    new (): HTMLYooIonButtonElement;
  };

  interface HTMLYooIonButtonsElement extends Components.YooIonButtons, HTMLStencilElement {}
  var HTMLYooIonButtonsElement: {
    prototype: HTMLYooIonButtonsElement;
    new (): HTMLYooIonButtonsElement;
  };

  interface HTMLYooIonContentElement extends Components.YooIonContent, HTMLStencilElement {}
  var HTMLYooIonContentElement: {
    prototype: HTMLYooIonContentElement;
    new (): HTMLYooIonContentElement;
  };

  interface HTMLYooIonFooterElement extends Components.YooIonFooter, HTMLStencilElement {}
  var HTMLYooIonFooterElement: {
    prototype: HTMLYooIonFooterElement;
    new (): HTMLYooIonFooterElement;
  };

  interface HTMLYooIonGestureControllerElement extends Components.YooIonGestureController, HTMLStencilElement {}
  var HTMLYooIonGestureControllerElement: {
    prototype: HTMLYooIonGestureControllerElement;
    new (): HTMLYooIonGestureControllerElement;
  };

  interface HTMLYooIonGestureElement extends Components.YooIonGesture, HTMLStencilElement {}
  var HTMLYooIonGestureElement: {
    prototype: HTMLYooIonGestureElement;
    new (): HTMLYooIonGestureElement;
  };

  interface HTMLYooIonHeaderElement extends Components.YooIonHeader, HTMLStencilElement {}
  var HTMLYooIonHeaderElement: {
    prototype: HTMLYooIonHeaderElement;
    new (): HTMLYooIonHeaderElement;
  };

  interface HTMLYooIonInfiniteScrollContentElement extends Components.YooIonInfiniteScrollContent, HTMLStencilElement {}
  var HTMLYooIonInfiniteScrollContentElement: {
    prototype: HTMLYooIonInfiniteScrollContentElement;
    new (): HTMLYooIonInfiniteScrollContentElement;
  };

  interface HTMLYooIonInfiniteScrollElement extends Components.YooIonInfiniteScroll, HTMLStencilElement {}
  var HTMLYooIonInfiniteScrollElement: {
    prototype: HTMLYooIonInfiniteScrollElement;
    new (): HTMLYooIonInfiniteScrollElement;
  };

  interface HTMLYooIonItemDividerElement extends Components.YooIonItemDivider, HTMLStencilElement {}
  var HTMLYooIonItemDividerElement: {
    prototype: HTMLYooIonItemDividerElement;
    new (): HTMLYooIonItemDividerElement;
  };

  interface HTMLYooIonItemOptionsElement extends Components.YooIonItemOptions, HTMLStencilElement {}
  var HTMLYooIonItemOptionsElement: {
    prototype: HTMLYooIonItemOptionsElement;
    new (): HTMLYooIonItemOptionsElement;
  };

  interface HTMLYooIonItemSlidingElement extends Components.YooIonItemSliding, HTMLStencilElement {}
  var HTMLYooIonItemSlidingElement: {
    prototype: HTMLYooIonItemSlidingElement;
    new (): HTMLYooIonItemSlidingElement;
  };

  interface HTMLYooIonItemElement extends Components.YooIonItem, HTMLStencilElement {}
  var HTMLYooIonItemElement: {
    prototype: HTMLYooIonItemElement;
    new (): HTMLYooIonItemElement;
  };

  interface HTMLYooIonListElement extends Components.YooIonList, HTMLStencilElement {}
  var HTMLYooIonListElement: {
    prototype: HTMLYooIonListElement;
    new (): HTMLYooIonListElement;
  };

  interface HTMLYooIonModalControllerElement extends Components.YooIonModalController, HTMLStencilElement {}
  var HTMLYooIonModalControllerElement: {
    prototype: HTMLYooIonModalControllerElement;
    new (): HTMLYooIonModalControllerElement;
  };

  interface HTMLYooIonModalElement extends Components.YooIonModal, HTMLStencilElement {}
  var HTMLYooIonModalElement: {
    prototype: HTMLYooIonModalElement;
    new (): HTMLYooIonModalElement;
  };

  interface HTMLYooIonRefresherContentElement extends Components.YooIonRefresherContent, HTMLStencilElement {}
  var HTMLYooIonRefresherContentElement: {
    prototype: HTMLYooIonRefresherContentElement;
    new (): HTMLYooIonRefresherContentElement;
  };

  interface HTMLYooIonRefresherElement extends Components.YooIonRefresher, HTMLStencilElement {}
  var HTMLYooIonRefresherElement: {
    prototype: HTMLYooIonRefresherElement;
    new (): HTMLYooIonRefresherElement;
  };

  interface HTMLYooIonScrollElement extends Components.YooIonScroll, HTMLStencilElement {}
  var HTMLYooIonScrollElement: {
    prototype: HTMLYooIonScrollElement;
    new (): HTMLYooIonScrollElement;
  };

  interface HTMLYooIonSlideElement extends Components.YooIonSlide, HTMLStencilElement {}
  var HTMLYooIonSlideElement: {
    prototype: HTMLYooIonSlideElement;
    new (): HTMLYooIonSlideElement;
  };

  interface HTMLYooIonSlidesElement extends Components.YooIonSlides, HTMLStencilElement {}
  var HTMLYooIonSlidesElement: {
    prototype: HTMLYooIonSlidesElement;
    new (): HTMLYooIonSlidesElement;
  };

  interface HTMLYooIonTitleElement extends Components.YooIonTitle, HTMLStencilElement {}
  var HTMLYooIonTitleElement: {
    prototype: HTMLYooIonTitleElement;
    new (): HTMLYooIonTitleElement;
  };

  interface HTMLYooIonToastControllerElement extends Components.YooIonToastController, HTMLStencilElement {}
  var HTMLYooIonToastControllerElement: {
    prototype: HTMLYooIonToastControllerElement;
    new (): HTMLYooIonToastControllerElement;
  };

  interface HTMLYooIonToolbarElement extends Components.YooIonToolbar, HTMLStencilElement {}
  var HTMLYooIonToolbarElement: {
    prototype: HTMLYooIonToolbarElement;
    new (): HTMLYooIonToolbarElement;
  };

  interface HTMLYooAmapElement extends Components.YooAmap, HTMLStencilElement {}
  var HTMLYooAmapElement: {
    prototype: HTMLYooAmapElement;
    new (): HTMLYooAmapElement;
  };

  interface HTMLYooMapGlElement extends Components.YooMapGl, HTMLStencilElement {}
  var HTMLYooMapGlElement: {
    prototype: HTMLYooMapGlElement;
    new (): HTMLYooMapGlElement;
  };

  interface HTMLYooMapJsElement extends Components.YooMapJs, HTMLStencilElement {}
  var HTMLYooMapJsElement: {
    prototype: HTMLYooMapJsElement;
    new (): HTMLYooMapJsElement;
  };

  interface HTMLYooMapLegendElement extends Components.YooMapLegend, HTMLStencilElement {}
  var HTMLYooMapLegendElement: {
    prototype: HTMLYooMapLegendElement;
    new (): HTMLYooMapLegendElement;
  };

  interface HTMLYooMapElement extends Components.YooMap, HTMLStencilElement {}
  var HTMLYooMapElement: {
    prototype: HTMLYooMapElement;
    new (): HTMLYooMapElement;
  };

  interface HTMLYooReteElement extends Components.YooRete, HTMLStencilElement {}
  var HTMLYooReteElement: {
    prototype: HTMLYooReteElement;
    new (): HTMLYooReteElement;
  };

  interface HTMLYooBarcodeDialogElement extends Components.YooBarcodeDialog, HTMLStencilElement {}
  var HTMLYooBarcodeDialogElement: {
    prototype: HTMLYooBarcodeDialogElement;
    new (): HTMLYooBarcodeDialogElement;
  };

  interface HTMLYooBarcodeElement extends Components.YooBarcode, HTMLStencilElement {}
  var HTMLYooBarcodeElement: {
    prototype: HTMLYooBarcodeElement;
    new (): HTMLYooBarcodeElement;
  };

  interface HTMLYooScanditElement extends Components.YooScandit, HTMLStencilElement {}
  var HTMLYooScanditElement: {
    prototype: HTMLYooScanditElement;
    new (): HTMLYooScanditElement;
  };

  interface HTMLYooZebraElement extends Components.YooZebra, HTMLStencilElement {}
  var HTMLYooZebraElement: {
    prototype: HTMLYooZebraElement;
    new (): HTMLYooZebraElement;
  };

  interface HTMLElementTagNameMap {
    'yoo-course-detail': HTMLYooCourseDetailElement
    'yoo-lesson-badges': HTMLYooLessonBadgesElement
    'yoo-lesson-detail': HTMLYooLessonDetailElement
    'yoo-lesson-heading': HTMLYooLessonHeadingElement
    'yoo-lesson-highscores': HTMLYooLessonHighscoresElement
    'yoo-lesson-question-result': HTMLYooLessonQuestionResultElement
    'yoo-podium': HTMLYooPodiumElement
    'yoo-question-detail': HTMLYooQuestionDetailElement
    'yoo-user-detail': HTMLYooUserDetailElement
    'yoo-campaign-editor-recap': HTMLYooCampaignEditorRecapElement
    'yoo-campaign-heading': HTMLYooCampaignHeadingElement
    'yoo-contact-detail': HTMLYooContactDetailElement
    'yoo-dashboard-detail': HTMLYooDashboardDetailElement
    'yoo-feed-detail': HTMLYooFeedDetailElement
    'yoo-healthscore-dialog': HTMLYooHealthscoreDialogElement
    'yoo-healthscore': HTMLYooHealthscoreElement
    'yoo-location-heading': HTMLYooLocationHeadingElement
    'yoo-location-info': HTMLYooLocationInfoElement
    'yoo-location-map': HTMLYooLocationMapElement
    'yoo-memo-list-dialog': HTMLYooMemoListDialogElement
    'yoo-memo-list': HTMLYooMemoListElement
    'yoo-mission-contents': HTMLYooMissionContentsElement
    'yoo-mission-detail': HTMLYooMissionDetailElement
    'yoo-mission-heading': HTMLYooMissionHeadingElement
    'yoo-mission-results': HTMLYooMissionResultsElement
    'yoo-mission-score': HTMLYooMissionScoreElement
    'yoo-mission-todo': HTMLYooMissionTodoElement
    'yoo-about': HTMLYooAboutElement
    'yoo-app': HTMLYooAppElement
    'yoo-language-selector': HTMLYooLanguageSelectorElement
    'yoo-login': HTMLYooLoginElement
    'yoo-profile': HTMLYooProfileElement
    'yoo-reset-password': HTMLYooResetPasswordElement
    'yoo-user-profile': HTMLYooUserProfileElement
    'yoo-walkthrough': HTMLYooWalkthroughElement
    'yoo-welcome-banner': HTMLYooWelcomeBannerElement
    'yoo-chart': HTMLYooChartElement
    'yoo-kpi-container': HTMLYooKpiContainerElement
    'yoo-kpi-external': HTMLYooKpiExternalElement
    'yoo-kpi': HTMLYooKpiElement
    'yoo-pivot-table': HTMLYooPivotTableElement
    'yoo-accordion': HTMLYooAccordionElement
    'yoo-action-sheet': HTMLYooActionSheetElement
    'yoo-alert': HTMLYooAlertElement
    'yoo-audio-player': HTMLYooAudioPlayerElement
    'yoo-avatar': HTMLYooAvatarElement
    'yoo-badge': HTMLYooBadgeElement
    'yoo-banner': HTMLYooBannerElement
    'yoo-breadcrumbs': HTMLYooBreadcrumbsElement
    'yoo-button-group': HTMLYooButtonGroupElement
    'yoo-button': HTMLYooButtonElement
    'yoo-calendar': HTMLYooCalendarElement
    'yoo-chat-message': HTMLYooChatMessageElement
    'yoo-chat': HTMLYooChatElement
    'yoo-color-selector': HTMLYooColorSelectorElement
    'yoo-context-menu': HTMLYooContextMenuElement
    'yoo-count-down': HTMLYooCountDownElement
    'yoo-date': HTMLYooDateElement
    'yoo-device': HTMLYooDeviceElement
    'yoo-empty-state': HTMLYooEmptyStateElement
    'yoo-fab-button': HTMLYooFabButtonElement
    'yoo-fab-container': HTMLYooFabContainerElement
    'yoo-fab-list': HTMLYooFabListElement
    'yoo-icon': HTMLYooIconElement
    'yoo-img': HTMLYooImgElement
    'yoo-info-text': HTMLYooInfoTextElement
    'yoo-input-bar': HTMLYooInputBarElement
    'yoo-loader': HTMLYooLoaderElement
    'yoo-mobile-tabbar': HTMLYooMobileTabbarElement
    'yoo-modal': HTMLYooModalElement
    'yoo-navbar': HTMLYooNavbarElement
    'yoo-pagination': HTMLYooPaginationElement
    'yoo-polyglot': HTMLYooPolyglotElement
    'yoo-progress-bar-circle': HTMLYooProgressBarCircleElement
    'yoo-progress-bar-core': HTMLYooProgressBarCoreElement
    'yoo-progress-bar-line': HTMLYooProgressBarLineElement
    'yoo-progress-bar-semi-circle': HTMLYooProgressBarSemiCircleElement
    'yoo-progress-loader': HTMLYooProgressLoaderElement
    'yoo-property-card': HTMLYooPropertyCardElement
    'yoo-result-dialog': HTMLYooResultDialogElement
    'yoo-slider-scale': HTMLYooSliderScaleElement
    'yoo-slider': HTMLYooSliderElement
    'yoo-sticky': HTMLYooStickyElement
    'yoo-swipe-container': HTMLYooSwipeContainerElement
    'yoo-tabs': HTMLYooTabsElement
    'yoo-tappable': HTMLYooTappableElement
    'yoo-text-truncate': HTMLYooTextTruncateElement
    'yoo-tile': HTMLYooTileElement
    'yoo-toast': HTMLYooToastElement
    'yoo-toolbar': HTMLYooToolbarElement
    'yoo-tooltip': HTMLYooTooltipElement
    'yoo-transition': HTMLYooTransitionElement
    'yoo-web-menu': HTMLYooWebMenuElement
    'yoo-zoom': HTMLYooZoomElement
    'yoo-background-blur': HTMLYooBackgroundBlurElement
    'yoo-card-cell': HTMLYooCardCellElement
    'yoo-card-course-row': HTMLYooCardCourseRowElement
    'yoo-card-course': HTMLYooCardCourseElement
    'yoo-card-feed': HTMLYooCardFeedElement
    'yoo-card-file': HTMLYooCardFileElement
    'yoo-card-image': HTMLYooCardImageElement
    'yoo-card-lesson': HTMLYooCardLessonElement
    'yoo-card-list': HTMLYooCardListElement
    'yoo-card-media': HTMLYooCardMediaElement
    'yoo-card-placeholder': HTMLYooCardPlaceholderElement
    'yoo-card-question': HTMLYooCardQuestionElement
    'yoo-card-sticky': HTMLYooCardStickyElement
    'yoo-card': HTMLYooCardElement
    'yoo-entity-search-dialog': HTMLYooEntitySearchDialogElement
    'yoo-entity-search-filters': HTMLYooEntitySearchFiltersElement
    'yoo-entity-search-recent': HTMLYooEntitySearchRecentElement
    'yoo-entity-search-sorts': HTMLYooEntitySearchSortsElement
    'yoo-entity-search-tags': HTMLYooEntitySearchTagsElement
    'yoo-entity-search': HTMLYooEntitySearchElement
    'yoo-entity': HTMLYooEntityElement
    'yoo-user-picker': HTMLYooUserPickerElement
    'yoo-form-creator-block-expandable': HTMLYooFormCreatorBlockExpandableElement
    'yoo-form-creator-block-simple': HTMLYooFormCreatorBlockSimpleElement
    'yoo-form-creator-header': HTMLYooFormCreatorHeaderElement
    'yoo-form-creator-page-card': HTMLYooFormCreatorPageCardElement
    'yoo-form-creator': HTMLYooFormCreatorElement
    'yoo-from-creator-page-card-list': HTMLYooFromCreatorPageCardListElement
    'yoo-camera-preview-dialog': HTMLYooCameraPreviewDialogElement
    'yoo-field-validity': HTMLYooFieldValidityElement
    'yoo-form-autocomplete-dialog': HTMLYooFormAutocompleteDialogElement
    'yoo-form-autocomplete': HTMLYooFormAutocompleteElement
    'yoo-form-barcode-dialog': HTMLYooFormBarcodeDialogElement
    'yoo-form-barcode': HTMLYooFormBarcodeElement
    'yoo-form-capture-tag-dialog': HTMLYooFormCaptureTagDialogElement
    'yoo-form-capture-view-dialog': HTMLYooFormCaptureViewDialogElement
    'yoo-form-capture-webcam-dialog': HTMLYooFormCaptureWebcamDialogElement
    'yoo-form-capture': HTMLYooFormCaptureElement
    'yoo-form-catalog-dialog': HTMLYooFormCatalogDialogElement
    'yoo-form-catalog': HTMLYooFormCatalogElement
    'yoo-form-categorize-words': HTMLYooFormCategorizeWordsElement
    'yoo-form-checkbox': HTMLYooFormCheckboxElement
    'yoo-form-checklist': HTMLYooFormChecklistElement
    'yoo-form-choice': HTMLYooFormChoiceElement
    'yoo-form-color-field': HTMLYooFormColorFieldElement
    'yoo-form-color-picker': HTMLYooFormColorPickerElement
    'yoo-form-connect': HTMLYooFormConnectElement
    'yoo-form-date-time': HTMLYooFormDateTimeElement
    'yoo-form-document-dialog': HTMLYooFormDocumentDialogElement
    'yoo-form-document': HTMLYooFormDocumentElement
    'yoo-form-dynamic-dialog': HTMLYooFormDynamicDialogElement
    'yoo-form-dynamic-history-dialog': HTMLYooFormDynamicHistoryDialogElement
    'yoo-form-dynamic': HTMLYooFormDynamicElement
    'yoo-form-emailreport': HTMLYooFormEmailreportElement
    'yoo-form-feedback': HTMLYooFormFeedbackElement
    'yoo-form-footer': HTMLYooFormFooterElement
    'yoo-form-formula': HTMLYooFormFormulaElement
    'yoo-form-iframe': HTMLYooFormIframeElement
    'yoo-form-image-tagging': HTMLYooFormImageTaggingElement
    'yoo-form-input-container': HTMLYooFormInputContainerElement
    'yoo-form-input-game': HTMLYooFormInputGameElement
    'yoo-form-input': HTMLYooFormInputElement
    'yoo-form-json': HTMLYooFormJsonElement
    'yoo-form-location': HTMLYooFormLocationElement
    'yoo-form-missing-word': HTMLYooFormMissingWordElement
    'yoo-form-number-picker-dialog': HTMLYooFormNumberPickerDialogElement
    'yoo-form-number-picker': HTMLYooFormNumberPickerElement
    'yoo-form-product-batch': HTMLYooFormProductBatchElement
    'yoo-form-progress-indicator': HTMLYooFormProgressIndicatorElement
    'yoo-form-radio-group': HTMLYooFormRadioGroupElement
    'yoo-form-radio': HTMLYooFormRadioElement
    'yoo-form-range': HTMLYooFormRangeElement
    'yoo-form-ranking': HTMLYooFormRankingElement
    'yoo-form-recap-step': HTMLYooFormRecapStepElement
    'yoo-form-signature-pad-dialog': HTMLYooFormSignaturePadDialogElement
    'yoo-form-signature-pad': HTMLYooFormSignaturePadElement
    'yoo-form-slider': HTMLYooFormSliderElement
    'yoo-form-star-rating': HTMLYooFormStarRatingElement
    'yoo-form-swipe-cards': HTMLYooFormSwipeCardsElement
    'yoo-form-task': HTMLYooFormTaskElement
    'yoo-form-text-area': HTMLYooFormTextAreaElement
    'yoo-form-text-editor': HTMLYooFormTextEditorElement
    'yoo-form-time': HTMLYooFormTimeElement
    'yoo-form-timer': HTMLYooFormTimerElement
    'yoo-form-todo-dialog': HTMLYooFormTodoDialogElement
    'yoo-form-todo-single': HTMLYooFormTodoSingleElement
    'yoo-form-todo': HTMLYooFormTodoElement
    'yoo-form-toggle': HTMLYooFormToggleElement
    'yoo-form-uploader': HTMLYooFormUploaderElement
    'yoo-form-videoplayer': HTMLYooFormVideoplayerElement
    'yoo-photo-editor': HTMLYooPhotoEditorElement
    'yoo-photo-editors': HTMLYooPhotoEditorsElement
    'yoo-ag-grid': HTMLYooAgGridElement
    'yoo-grid': HTMLYooGridElement
    'yoo-ion-action-sheet-controller': HTMLYooIonActionSheetControllerElement
    'yoo-ion-alert-controller': HTMLYooIonAlertControllerElement
    'yoo-ion-button': HTMLYooIonButtonElement
    'yoo-ion-buttons': HTMLYooIonButtonsElement
    'yoo-ion-content': HTMLYooIonContentElement
    'yoo-ion-footer': HTMLYooIonFooterElement
    'yoo-ion-gesture-controller': HTMLYooIonGestureControllerElement
    'yoo-ion-gesture': HTMLYooIonGestureElement
    'yoo-ion-header': HTMLYooIonHeaderElement
    'yoo-ion-infinite-scroll-content': HTMLYooIonInfiniteScrollContentElement
    'yoo-ion-infinite-scroll': HTMLYooIonInfiniteScrollElement
    'yoo-ion-item-divider': HTMLYooIonItemDividerElement
    'yoo-ion-item-options': HTMLYooIonItemOptionsElement
    'yoo-ion-item-sliding': HTMLYooIonItemSlidingElement
    'yoo-ion-item': HTMLYooIonItemElement
    'yoo-ion-list': HTMLYooIonListElement
    'yoo-ion-modal-controller': HTMLYooIonModalControllerElement
    'yoo-ion-modal': HTMLYooIonModalElement
    'yoo-ion-refresher-content': HTMLYooIonRefresherContentElement
    'yoo-ion-refresher': HTMLYooIonRefresherElement
    'yoo-ion-scroll': HTMLYooIonScrollElement
    'yoo-ion-slide': HTMLYooIonSlideElement
    'yoo-ion-slides': HTMLYooIonSlidesElement
    'yoo-ion-title': HTMLYooIonTitleElement
    'yoo-ion-toast-controller': HTMLYooIonToastControllerElement
    'yoo-ion-toolbar': HTMLYooIonToolbarElement
    'yoo-amap': HTMLYooAmapElement
    'yoo-map-gl': HTMLYooMapGlElement
    'yoo-map-js': HTMLYooMapJsElement
    'yoo-map-legend': HTMLYooMapLegendElement
    'yoo-map': HTMLYooMapElement
    'yoo-rete': HTMLYooReteElement
    'yoo-barcode-dialog': HTMLYooBarcodeDialogElement
    'yoo-barcode': HTMLYooBarcodeElement
    'yoo-scandit': HTMLYooScanditElement
    'yoo-zebra': HTMLYooZebraElement
  }

  interface ElementTagNameMap {
    'yoo-course-detail': HTMLYooCourseDetailElement;
    'yoo-lesson-badges': HTMLYooLessonBadgesElement;
    'yoo-lesson-detail': HTMLYooLessonDetailElement;
    'yoo-lesson-heading': HTMLYooLessonHeadingElement;
    'yoo-lesson-highscores': HTMLYooLessonHighscoresElement;
    'yoo-lesson-question-result': HTMLYooLessonQuestionResultElement;
    'yoo-podium': HTMLYooPodiumElement;
    'yoo-question-detail': HTMLYooQuestionDetailElement;
    'yoo-user-detail': HTMLYooUserDetailElement;
    'yoo-campaign-editor-recap': HTMLYooCampaignEditorRecapElement;
    'yoo-campaign-heading': HTMLYooCampaignHeadingElement;
    'yoo-contact-detail': HTMLYooContactDetailElement;
    'yoo-dashboard-detail': HTMLYooDashboardDetailElement;
    'yoo-feed-detail': HTMLYooFeedDetailElement;
    'yoo-healthscore-dialog': HTMLYooHealthscoreDialogElement;
    'yoo-healthscore': HTMLYooHealthscoreElement;
    'yoo-location-heading': HTMLYooLocationHeadingElement;
    'yoo-location-info': HTMLYooLocationInfoElement;
    'yoo-location-map': HTMLYooLocationMapElement;
    'yoo-memo-list-dialog': HTMLYooMemoListDialogElement;
    'yoo-memo-list': HTMLYooMemoListElement;
    'yoo-mission-contents': HTMLYooMissionContentsElement;
    'yoo-mission-detail': HTMLYooMissionDetailElement;
    'yoo-mission-heading': HTMLYooMissionHeadingElement;
    'yoo-mission-results': HTMLYooMissionResultsElement;
    'yoo-mission-score': HTMLYooMissionScoreElement;
    'yoo-mission-todo': HTMLYooMissionTodoElement;
    'yoo-about': HTMLYooAboutElement;
    'yoo-app': HTMLYooAppElement;
    'yoo-language-selector': HTMLYooLanguageSelectorElement;
    'yoo-login': HTMLYooLoginElement;
    'yoo-profile': HTMLYooProfileElement;
    'yoo-reset-password': HTMLYooResetPasswordElement;
    'yoo-user-profile': HTMLYooUserProfileElement;
    'yoo-walkthrough': HTMLYooWalkthroughElement;
    'yoo-welcome-banner': HTMLYooWelcomeBannerElement;
    'yoo-chart': HTMLYooChartElement;
    'yoo-kpi-container': HTMLYooKpiContainerElement;
    'yoo-kpi-external': HTMLYooKpiExternalElement;
    'yoo-kpi': HTMLYooKpiElement;
    'yoo-pivot-table': HTMLYooPivotTableElement;
    'yoo-accordion': HTMLYooAccordionElement;
    'yoo-action-sheet': HTMLYooActionSheetElement;
    'yoo-alert': HTMLYooAlertElement;
    'yoo-audio-player': HTMLYooAudioPlayerElement;
    'yoo-avatar': HTMLYooAvatarElement;
    'yoo-badge': HTMLYooBadgeElement;
    'yoo-banner': HTMLYooBannerElement;
    'yoo-breadcrumbs': HTMLYooBreadcrumbsElement;
    'yoo-button-group': HTMLYooButtonGroupElement;
    'yoo-button': HTMLYooButtonElement;
    'yoo-calendar': HTMLYooCalendarElement;
    'yoo-chat-message': HTMLYooChatMessageElement;
    'yoo-chat': HTMLYooChatElement;
    'yoo-color-selector': HTMLYooColorSelectorElement;
    'yoo-context-menu': HTMLYooContextMenuElement;
    'yoo-count-down': HTMLYooCountDownElement;
    'yoo-date': HTMLYooDateElement;
    'yoo-device': HTMLYooDeviceElement;
    'yoo-empty-state': HTMLYooEmptyStateElement;
    'yoo-fab-button': HTMLYooFabButtonElement;
    'yoo-fab-container': HTMLYooFabContainerElement;
    'yoo-fab-list': HTMLYooFabListElement;
    'yoo-icon': HTMLYooIconElement;
    'yoo-img': HTMLYooImgElement;
    'yoo-info-text': HTMLYooInfoTextElement;
    'yoo-input-bar': HTMLYooInputBarElement;
    'yoo-loader': HTMLYooLoaderElement;
    'yoo-mobile-tabbar': HTMLYooMobileTabbarElement;
    'yoo-modal': HTMLYooModalElement;
    'yoo-navbar': HTMLYooNavbarElement;
    'yoo-pagination': HTMLYooPaginationElement;
    'yoo-polyglot': HTMLYooPolyglotElement;
    'yoo-progress-bar-circle': HTMLYooProgressBarCircleElement;
    'yoo-progress-bar-core': HTMLYooProgressBarCoreElement;
    'yoo-progress-bar-line': HTMLYooProgressBarLineElement;
    'yoo-progress-bar-semi-circle': HTMLYooProgressBarSemiCircleElement;
    'yoo-progress-loader': HTMLYooProgressLoaderElement;
    'yoo-property-card': HTMLYooPropertyCardElement;
    'yoo-result-dialog': HTMLYooResultDialogElement;
    'yoo-slider-scale': HTMLYooSliderScaleElement;
    'yoo-slider': HTMLYooSliderElement;
    'yoo-sticky': HTMLYooStickyElement;
    'yoo-swipe-container': HTMLYooSwipeContainerElement;
    'yoo-tabs': HTMLYooTabsElement;
    'yoo-tappable': HTMLYooTappableElement;
    'yoo-text-truncate': HTMLYooTextTruncateElement;
    'yoo-tile': HTMLYooTileElement;
    'yoo-toast': HTMLYooToastElement;
    'yoo-toolbar': HTMLYooToolbarElement;
    'yoo-tooltip': HTMLYooTooltipElement;
    'yoo-transition': HTMLYooTransitionElement;
    'yoo-web-menu': HTMLYooWebMenuElement;
    'yoo-zoom': HTMLYooZoomElement;
    'yoo-background-blur': HTMLYooBackgroundBlurElement;
    'yoo-card-cell': HTMLYooCardCellElement;
    'yoo-card-course-row': HTMLYooCardCourseRowElement;
    'yoo-card-course': HTMLYooCardCourseElement;
    'yoo-card-feed': HTMLYooCardFeedElement;
    'yoo-card-file': HTMLYooCardFileElement;
    'yoo-card-image': HTMLYooCardImageElement;
    'yoo-card-lesson': HTMLYooCardLessonElement;
    'yoo-card-list': HTMLYooCardListElement;
    'yoo-card-media': HTMLYooCardMediaElement;
    'yoo-card-placeholder': HTMLYooCardPlaceholderElement;
    'yoo-card-question': HTMLYooCardQuestionElement;
    'yoo-card-sticky': HTMLYooCardStickyElement;
    'yoo-card': HTMLYooCardElement;
    'yoo-entity-search-dialog': HTMLYooEntitySearchDialogElement;
    'yoo-entity-search-filters': HTMLYooEntitySearchFiltersElement;
    'yoo-entity-search-recent': HTMLYooEntitySearchRecentElement;
    'yoo-entity-search-sorts': HTMLYooEntitySearchSortsElement;
    'yoo-entity-search-tags': HTMLYooEntitySearchTagsElement;
    'yoo-entity-search': HTMLYooEntitySearchElement;
    'yoo-entity': HTMLYooEntityElement;
    'yoo-user-picker': HTMLYooUserPickerElement;
    'yoo-form-creator-block-expandable': HTMLYooFormCreatorBlockExpandableElement;
    'yoo-form-creator-block-simple': HTMLYooFormCreatorBlockSimpleElement;
    'yoo-form-creator-header': HTMLYooFormCreatorHeaderElement;
    'yoo-form-creator-page-card': HTMLYooFormCreatorPageCardElement;
    'yoo-form-creator': HTMLYooFormCreatorElement;
    'yoo-from-creator-page-card-list': HTMLYooFromCreatorPageCardListElement;
    'yoo-camera-preview-dialog': HTMLYooCameraPreviewDialogElement;
    'yoo-field-validity': HTMLYooFieldValidityElement;
    'yoo-form-autocomplete-dialog': HTMLYooFormAutocompleteDialogElement;
    'yoo-form-autocomplete': HTMLYooFormAutocompleteElement;
    'yoo-form-barcode-dialog': HTMLYooFormBarcodeDialogElement;
    'yoo-form-barcode': HTMLYooFormBarcodeElement;
    'yoo-form-capture-tag-dialog': HTMLYooFormCaptureTagDialogElement;
    'yoo-form-capture-view-dialog': HTMLYooFormCaptureViewDialogElement;
    'yoo-form-capture-webcam-dialog': HTMLYooFormCaptureWebcamDialogElement;
    'yoo-form-capture': HTMLYooFormCaptureElement;
    'yoo-form-catalog-dialog': HTMLYooFormCatalogDialogElement;
    'yoo-form-catalog': HTMLYooFormCatalogElement;
    'yoo-form-categorize-words': HTMLYooFormCategorizeWordsElement;
    'yoo-form-checkbox': HTMLYooFormCheckboxElement;
    'yoo-form-checklist': HTMLYooFormChecklistElement;
    'yoo-form-choice': HTMLYooFormChoiceElement;
    'yoo-form-color-field': HTMLYooFormColorFieldElement;
    'yoo-form-color-picker': HTMLYooFormColorPickerElement;
    'yoo-form-connect': HTMLYooFormConnectElement;
    'yoo-form-date-time': HTMLYooFormDateTimeElement;
    'yoo-form-document-dialog': HTMLYooFormDocumentDialogElement;
    'yoo-form-document': HTMLYooFormDocumentElement;
    'yoo-form-dynamic-dialog': HTMLYooFormDynamicDialogElement;
    'yoo-form-dynamic-history-dialog': HTMLYooFormDynamicHistoryDialogElement;
    'yoo-form-dynamic': HTMLYooFormDynamicElement;
    'yoo-form-emailreport': HTMLYooFormEmailreportElement;
    'yoo-form-feedback': HTMLYooFormFeedbackElement;
    'yoo-form-footer': HTMLYooFormFooterElement;
    'yoo-form-formula': HTMLYooFormFormulaElement;
    'yoo-form-iframe': HTMLYooFormIframeElement;
    'yoo-form-image-tagging': HTMLYooFormImageTaggingElement;
    'yoo-form-input-container': HTMLYooFormInputContainerElement;
    'yoo-form-input-game': HTMLYooFormInputGameElement;
    'yoo-form-input': HTMLYooFormInputElement;
    'yoo-form-json': HTMLYooFormJsonElement;
    'yoo-form-location': HTMLYooFormLocationElement;
    'yoo-form-missing-word': HTMLYooFormMissingWordElement;
    'yoo-form-number-picker-dialog': HTMLYooFormNumberPickerDialogElement;
    'yoo-form-number-picker': HTMLYooFormNumberPickerElement;
    'yoo-form-product-batch': HTMLYooFormProductBatchElement;
    'yoo-form-progress-indicator': HTMLYooFormProgressIndicatorElement;
    'yoo-form-radio-group': HTMLYooFormRadioGroupElement;
    'yoo-form-radio': HTMLYooFormRadioElement;
    'yoo-form-range': HTMLYooFormRangeElement;
    'yoo-form-ranking': HTMLYooFormRankingElement;
    'yoo-form-recap-step': HTMLYooFormRecapStepElement;
    'yoo-form-signature-pad-dialog': HTMLYooFormSignaturePadDialogElement;
    'yoo-form-signature-pad': HTMLYooFormSignaturePadElement;
    'yoo-form-slider': HTMLYooFormSliderElement;
    'yoo-form-star-rating': HTMLYooFormStarRatingElement;
    'yoo-form-swipe-cards': HTMLYooFormSwipeCardsElement;
    'yoo-form-task': HTMLYooFormTaskElement;
    'yoo-form-text-area': HTMLYooFormTextAreaElement;
    'yoo-form-text-editor': HTMLYooFormTextEditorElement;
    'yoo-form-time': HTMLYooFormTimeElement;
    'yoo-form-timer': HTMLYooFormTimerElement;
    'yoo-form-todo-dialog': HTMLYooFormTodoDialogElement;
    'yoo-form-todo-single': HTMLYooFormTodoSingleElement;
    'yoo-form-todo': HTMLYooFormTodoElement;
    'yoo-form-toggle': HTMLYooFormToggleElement;
    'yoo-form-uploader': HTMLYooFormUploaderElement;
    'yoo-form-videoplayer': HTMLYooFormVideoplayerElement;
    'yoo-photo-editor': HTMLYooPhotoEditorElement;
    'yoo-photo-editors': HTMLYooPhotoEditorsElement;
    'yoo-ag-grid': HTMLYooAgGridElement;
    'yoo-grid': HTMLYooGridElement;
    'yoo-ion-action-sheet-controller': HTMLYooIonActionSheetControllerElement;
    'yoo-ion-alert-controller': HTMLYooIonAlertControllerElement;
    'yoo-ion-button': HTMLYooIonButtonElement;
    'yoo-ion-buttons': HTMLYooIonButtonsElement;
    'yoo-ion-content': HTMLYooIonContentElement;
    'yoo-ion-footer': HTMLYooIonFooterElement;
    'yoo-ion-gesture-controller': HTMLYooIonGestureControllerElement;
    'yoo-ion-gesture': HTMLYooIonGestureElement;
    'yoo-ion-header': HTMLYooIonHeaderElement;
    'yoo-ion-infinite-scroll-content': HTMLYooIonInfiniteScrollContentElement;
    'yoo-ion-infinite-scroll': HTMLYooIonInfiniteScrollElement;
    'yoo-ion-item-divider': HTMLYooIonItemDividerElement;
    'yoo-ion-item-options': HTMLYooIonItemOptionsElement;
    'yoo-ion-item-sliding': HTMLYooIonItemSlidingElement;
    'yoo-ion-item': HTMLYooIonItemElement;
    'yoo-ion-list': HTMLYooIonListElement;
    'yoo-ion-modal-controller': HTMLYooIonModalControllerElement;
    'yoo-ion-modal': HTMLYooIonModalElement;
    'yoo-ion-refresher-content': HTMLYooIonRefresherContentElement;
    'yoo-ion-refresher': HTMLYooIonRefresherElement;
    'yoo-ion-scroll': HTMLYooIonScrollElement;
    'yoo-ion-slide': HTMLYooIonSlideElement;
    'yoo-ion-slides': HTMLYooIonSlidesElement;
    'yoo-ion-title': HTMLYooIonTitleElement;
    'yoo-ion-toast-controller': HTMLYooIonToastControllerElement;
    'yoo-ion-toolbar': HTMLYooIonToolbarElement;
    'yoo-amap': HTMLYooAmapElement;
    'yoo-map-gl': HTMLYooMapGlElement;
    'yoo-map-js': HTMLYooMapJsElement;
    'yoo-map-legend': HTMLYooMapLegendElement;
    'yoo-map': HTMLYooMapElement;
    'yoo-rete': HTMLYooReteElement;
    'yoo-barcode-dialog': HTMLYooBarcodeDialogElement;
    'yoo-barcode': HTMLYooBarcodeElement;
    'yoo-scandit': HTMLYooScanditElement;
    'yoo-zebra': HTMLYooZebraElement;
  }


}
