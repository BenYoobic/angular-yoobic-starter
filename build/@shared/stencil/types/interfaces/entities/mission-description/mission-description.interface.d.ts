import { IEntity } from '../entity/entity.interface';
import { IPlan } from '../plan/plan.interface';
import { ICondition } from '../condition/condition.interface';
import { IScoring } from '../scoring/scoring.interface';
import { ISlide } from '../slide/slide.interface';
import { IRole } from '../role/role.interface';
import { SelectionQuery } from '../filters/filters.interface';
export declare class IMissionDescription extends IEntity {
    _id?: string;
    type: string;
    title: string;
    text: string;
    icon: any;
    background: any;
    tags: Array<string>;
    slides: Array<ISlide>;
    allowMultiple?: boolean;
    quizzMode: string;
    showAnswers: boolean;
    audit?: boolean;
    recurring?: boolean;
    language: string;
    archived?: boolean;
    count?: number;
    latest?: Date;
    _ect?: any;
    storesQuery?: SelectionQuery;
    lessonType: string;
    section: string;
    order: number;
    slideBackground: any;
    lightText: any;
    timerEnabled: number;
    points: number;
    badges: Array<string>;
    minValue: number;
    preventRetry: boolean;
    plans: Array<IPlan>;
    plan?: IPlan;
    quizz?: boolean;
    conditions: Array<ICondition>;
    scoring: Array<IScoring>;
    lessonStatus?: string;
    lessonValidated?: boolean;
    lessonLocked?: boolean;
    lessonScore?: any;
    isNext?: boolean;
    successRate?: number;
    averageDuration?: number;
    plansRef: Array<string>;
    planRef?: string;
    validFrom: Date;
    validUntil: Date;
    duedate: Date;
    notify?: boolean;
    notifyBody?: string;
    notifyScheduledDate?: Date;
    notificationemail?: Array<string>;
    disableLocationNotificationemail?: boolean;
    pdfMode?: string;
    group: Array<string>;
    serviceGroups?: Array<string>;
    finishedGroups?: Array<string>;
    roles?: Array<IRole>;
    missionTags?: Array<string>;
    skipValidation?: boolean;
    allowSameUserValidation?: boolean;
    autoRenew?: boolean;
    autoRenewOnBooking?: boolean;
    locationOptions?: string;
    duration?: number;
    submittext?: string;
    successtext?: string;
    versionmin?: string;
}
