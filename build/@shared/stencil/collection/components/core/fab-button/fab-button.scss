

// margin between fab buttons inside a list
$fab-btn-margin: 0.5rem;
$mini-fab-btn-size: 2.1875rem;
@mixin fab-color($color) {
    .fab-button {
        yoo-button {
            --background-container: var(#{$color});
            --color-value: #{cssvar(light)};
        }
        yoo-badge {
            --background: var(#{$color});
            --color-inner-text: #{cssvar(light)};
        }
    }
}
@mixin class-fab-color-border($class,$color,$border-color){
    :host(.#{$class}) {
        @include fab-color($color);
        yoo-button {
            --border-container: 1px solid var(#{$border-color});
        }
    }
}

:host-context(yoo-fab-list.top) {
    .fab-in-list.show {
        margin: 8px 0;
    }
}

:host-context(yoo-fab-list.bottom) {
    .fab-in-list.show {
        margin: 8px 0;
    }
}

:host-context(yoo-fab-list.left) {
    .fab-in-list.show {
        margin: 0 8px;
    }
}

:host-context(yoo-fab-list.right) {
    .fab-in-list.show {
        margin: 0 8px;
    }
}


:host {

    .fab-button {

        border-radius: 50%;
        // position: absolute;
        color: cssvar(light);
    }

    .fab-in-list {
        position: relative;
        width: 2.625rem;
        height: 2.625rem;
        transform: scale(0);
        opacity: 0;
        visibility: hidden;

        yoo-badge {
            @include abs-pos(auto, 3.4275rem, $padding-10, auto);
        }
    }

    .fab-in-list.show {

        transform: scale(1);
        opacity: 1;
        visibility: visible;
    }

    .fab-in-list.mini {
        yoo-button {
            --width-container: $mini-fab-btn-size;
            --height-container: $mini-fab-btn-size;
            --padding-container: 0.375rem 0rem;
        }
    }
}


:host(.large) {
    .fab-button {
        yoo-button {
            --width-container: 4.25rem;
            --height-container: 4.25rem;
            --border-radius-container: 50%;
        }
    }
}

:host(.delete) {
    .fab-button {
        yoo-button {
            --border-container: 2px solid #{cssvar(light)};
            --background-container: rgba(0, 0, 0, 0.3);
            --color-value: #{cssvar(light)};
        }
    }
}

:host(.save) {
    .fab-button {
        yoo-button {
            --width-icon-only-container: 4.25rem;
            --height-icon-only-container: 4.25rem;
            --border-radius-container: 50%;
            --font-size-icon: 2rem;
        }
    }
}

:host(.top-right) {
    .fab-button {
        top: 5px;
        right: 5px;
    }
}

:host(.top-left) {
    .fab-button {
        top: 5px;
        left: 5px;
    }
}

:host(.bottom-right) {
    .fab-button {
        right: 5px;
        bottom: 5px;
    }
}

:host(.bottom-left) {
    .fab-button {
        bottom: 5px;
        left: 5px;
    }
}

:host(.delete-animation) {
    yoo-button {
        --transform: scale(1.3);
        --transition: all 200ms linear;
        --value-transform: scale(1.3);
        --value-transition: all 200ms linear;
    }
}

// Colors - TO DO - add styles dynamically from inside the component so that the button SCSS is used
:host(.accent) {
    @include fab-color(--accent);
}

:host(.dark) {
    yoo-button {
        --background-container: #{cssvar(dark)};
        --color-value: #{cssvar(dark)};
        --border-container: 1px solid #{cssvar(dark-110)};
    }
}
@include class-fab-color-border(success,--success,--success-110);
@include class-fab-color-border(danger,--danger,--danger-110);
@include class-fab-color-border(info,--info,--info-110);
@include class-fab-color-border(warning,--warning,--warning-110);
@include class-fab-color-border(gradient-success,--gradient-success,--success-110);
@include class-fab-color-border(gradient-danger,--gradient-danger,--danger-110);
